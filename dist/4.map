{"version":3,"file":"4.chunk.js","sources":["webpack:///./~/@ngrx/effects/index.js","webpack:///./~/rxjs/AsyncSubject.js","webpack:///./~/rxjs/util/ArgumentOutOfRangeError.js","webpack:///./~/rxjs/util/isDate.js","webpack:///./~/rxjs/util/isNumeric.js","webpack:///./src/app/core/typecodes/typecodes.service.ts","webpack:///./~/rxjs/operator/combineLatest.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/zip.js","webpack:///./src/app/layout/tabs/tab.component.ts","webpack:///./src/app/tickets/ticket.service.ts","webpack:///./~/@ngrx/effects/src/actions.js","webpack:///./~/@ngrx/effects/src/bootstrap-listener.js","webpack:///./~/@ngrx/effects/src/effects-subscription.js","webpack:///./~/@ngrx/effects/src/effects.js","webpack:///./~/rxjs/Rx.js","webpack:///./~/rxjs/observable/dom/AjaxObservable.js","webpack:///./~/rxjs/operator/find.js","webpack:///./~/rxjs/operator/ignoreElements.js","webpack:///./~/rxjs/operator/mergeMapTo.js","webpack:///./~/rxjs/operator/onErrorResumeNext.js","webpack:///./~/rxjs/operator/race.js","webpack:///./~/rxjs/operator/timeInterval.js","webpack:///./~/rxjs/operator/timestamp.js","webpack:///./~/rxjs/scheduler/VirtualTimeScheduler.js","webpack:///./~/rxjs/scheduler/asap.js","webpack:///./~/rxjs/testing/SubscriptionLog.js","webpack:///./~/rxjs/testing/SubscriptionLoggable.js","webpack:///./~/rxjs/util/TimeoutError.js","webpack:///./~/rxjs/util/applyMixins.js","webpack:///./~/rxjs/util/noop.js","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/typecodes/typecodes-effect.ts","webpack:///./src/app/layout/tabs/tabs.component.ts","webpack:///./src/app/tickets/ticket-activity/ticket-activity.component.ts","webpack:///./src/app/tickets/ticket-comments/ticket-comments.component.ts","webpack:///./src/app/tickets/ticket-detail/ticket-detail.component.ts","webpack:///./src/app/tickets/ticket-requester/ticket-requester.component.ts","webpack:///./src/app/tickets/ticket-store/ticket-effects.ts","webpack:///./src/app/tickets/ticket.component.ts","webpack:///./src/app/tickets/tickets.module.ts","webpack:///./~/@ngrx/effects/src/effects.module.js","webpack:///./~/@ngrx/effects/src/util.js","webpack:///./src/app/tickets/ticket-activity/ticket-activity.component.scss","webpack:///./src/app/tickets/ticket-requester/ticket-requester.style.scss","webpack:///./src/app/tickets/ticket-activity/ticket-activity.component.html","webpack:///./src/app/tickets/ticket-comments/ticket-comments.component.html","webpack:///./src/app/tickets/ticket-detail/ticket-detail.component.html","webpack:///./src/app/tickets/ticket-requester/ticket-requester.component.html","webpack:///./src/app/tickets/ticket.component.html","webpack:///./~/rxjs/add/observable/bindCallback.js","webpack:///./~/rxjs/add/observable/bindNodeCallback.js","webpack:///./~/rxjs/add/observable/combineLatest.js","webpack:///./~/rxjs/add/observable/concat.js","webpack:///./~/rxjs/add/observable/defer.js","webpack:///./~/rxjs/add/observable/dom/ajax.js","webpack:///./~/rxjs/add/observable/dom/webSocket.js","webpack:///./~/rxjs/add/observable/empty.js","webpack:///./~/rxjs/add/observable/forkJoin.js","webpack:///./~/rxjs/add/observable/fromEvent.js","webpack:///./~/rxjs/add/observable/fromEventPattern.js","webpack:///./~/rxjs/add/observable/fromPromise.js","webpack:///./~/rxjs/add/observable/generate.js","webpack:///./~/rxjs/add/observable/if.js","webpack:///./~/rxjs/add/observable/interval.js","webpack:///./~/rxjs/add/observable/merge.js","webpack:///./~/rxjs/add/observable/never.js","webpack:///./~/rxjs/add/observable/onErrorResumeNext.js","webpack:///./~/rxjs/add/observable/pairs.js","webpack:///./~/rxjs/add/observable/race.js","webpack:///./~/rxjs/add/observable/range.js","webpack:///./~/rxjs/add/observable/throw.js","webpack:///./~/rxjs/add/observable/timer.js","webpack:///./~/rxjs/add/observable/using.js","webpack:///./~/rxjs/add/observable/zip.js","webpack:///./~/rxjs/add/operator/audit.js","webpack:///./~/rxjs/add/operator/auditTime.js","webpack:///./~/rxjs/add/operator/buffer.js","webpack:///./~/rxjs/add/operator/bufferCount.js","webpack:///./~/rxjs/add/operator/bufferTime.js","webpack:///./~/rxjs/add/operator/bufferToggle.js","webpack:///./~/rxjs/add/operator/bufferWhen.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/combineAll.js","webpack:///./~/rxjs/add/operator/combineLatest.js","webpack:///./~/rxjs/add/operator/concat.js","webpack:///./~/rxjs/add/operator/concatAll.js","webpack:///./~/rxjs/add/operator/concatMap.js","webpack:///./~/rxjs/add/operator/concatMapTo.js","webpack:///./~/rxjs/add/operator/count.js","webpack:///./~/rxjs/add/operator/debounce.js","webpack:///./~/rxjs/add/operator/defaultIfEmpty.js","webpack:///./~/rxjs/add/operator/delay.js","webpack:///./~/rxjs/add/operator/delayWhen.js","webpack:///./~/rxjs/add/operator/dematerialize.js","webpack:///./~/rxjs/add/operator/distinct.js","webpack:///./~/rxjs/add/operator/distinctUntilChanged.js","webpack:///./~/rxjs/add/operator/distinctUntilKeyChanged.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/elementAt.js","webpack:///./~/rxjs/add/operator/every.js","webpack:///./~/rxjs/add/operator/exhaust.js","webpack:///./~/rxjs/add/operator/exhaustMap.js","webpack:///./~/rxjs/add/operator/expand.js","webpack:///./~/rxjs/add/operator/finally.js","webpack:///./~/rxjs/add/operator/find.js","webpack:///./~/rxjs/add/operator/findIndex.js","webpack:///./~/rxjs/add/operator/first.js","webpack:///./~/rxjs/add/operator/groupBy.js","webpack:///./~/rxjs/add/operator/ignoreElements.js","webpack:///./~/rxjs/add/operator/isEmpty.js","webpack:///./~/rxjs/add/operator/last.js","webpack:///./~/rxjs/add/operator/let.js","webpack:///./~/rxjs/add/operator/mapTo.js","webpack:///./~/rxjs/add/operator/materialize.js","webpack:///./~/rxjs/add/operator/max.js","webpack:///./~/rxjs/add/operator/merge.js","webpack:///./~/rxjs/add/operator/mergeAll.js","webpack:///./~/rxjs/add/operator/mergeMapTo.js","webpack:///./~/rxjs/add/operator/mergeScan.js","webpack:///./~/rxjs/add/operator/min.js","webpack:///./~/rxjs/add/operator/multicast.js","webpack:///./~/rxjs/add/operator/observeOn.js","webpack:///./~/rxjs/add/operator/onErrorResumeNext.js","webpack:///./~/rxjs/add/operator/pairwise.js","webpack:///./~/rxjs/add/operator/partition.js","webpack:///./~/rxjs/add/operator/pluck.js","webpack:///./~/rxjs/add/operator/publish.js","webpack:///./~/rxjs/add/operator/publishBehavior.js","webpack:///./~/rxjs/add/operator/publishLast.js","webpack:///./~/rxjs/add/operator/publishReplay.js","webpack:///./~/rxjs/add/operator/race.js","webpack:///./~/rxjs/add/operator/reduce.js","webpack:///./~/rxjs/add/operator/repeat.js","webpack:///./~/rxjs/add/operator/repeatWhen.js","webpack:///./~/rxjs/add/operator/retry.js","webpack:///./~/rxjs/add/operator/retryWhen.js","webpack:///./~/rxjs/add/operator/sample.js","webpack:///./~/rxjs/add/operator/sampleTime.js","webpack:///./~/rxjs/add/operator/scan.js","webpack:///./~/rxjs/add/operator/sequenceEqual.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/add/operator/single.js","webpack:///./~/rxjs/add/operator/skip.js","webpack:///./~/rxjs/add/operator/skipUntil.js","webpack:///./~/rxjs/add/operator/skipWhile.js","webpack:///./~/rxjs/add/operator/startWith.js","webpack:///./~/rxjs/add/operator/subscribeOn.js","webpack:///./~/rxjs/add/operator/switch.js","webpack:///./~/rxjs/add/operator/switchMapTo.js","webpack:///./~/rxjs/add/operator/take.js","webpack:///./~/rxjs/add/operator/takeLast.js","webpack:///./~/rxjs/add/operator/takeUntil.js","webpack:///./~/rxjs/add/operator/takeWhile.js","webpack:///./~/rxjs/add/operator/throttle.js","webpack:///./~/rxjs/add/operator/throttleTime.js","webpack:///./~/rxjs/add/operator/timeInterval.js","webpack:///./~/rxjs/add/operator/timeout.js","webpack:///./~/rxjs/add/operator/timeoutWith.js","webpack:///./~/rxjs/add/operator/timestamp.js","webpack:///./~/rxjs/add/operator/toPromise.js","webpack:///./~/rxjs/add/operator/window.js","webpack:///./~/rxjs/add/operator/windowCount.js","webpack:///./~/rxjs/add/operator/windowTime.js","webpack:///./~/rxjs/add/operator/windowToggle.js","webpack:///./~/rxjs/add/operator/windowWhen.js","webpack:///./~/rxjs/add/operator/withLatestFrom.js","webpack:///./~/rxjs/add/operator/zip.js","webpack:///./~/rxjs/add/operator/zipAll.js","webpack:///./~/rxjs/observable/BoundCallbackObservable.js","webpack:///./~/rxjs/observable/BoundNodeCallbackObservable.js","webpack:///./~/rxjs/observable/DeferObservable.js","webpack:///./~/rxjs/observable/ErrorObservable.js","webpack:///./~/rxjs/observable/FromEventObservable.js","webpack:///./~/rxjs/observable/FromEventPatternObservable.js","webpack:///./~/rxjs/observable/GenerateObservable.js","webpack:///./~/rxjs/observable/IfObservable.js","webpack:///./~/rxjs/observable/IntervalObservable.js","webpack:///./~/rxjs/observable/NeverObservable.js","webpack:///./~/rxjs/observable/PairsObservable.js","webpack:///./~/rxjs/observable/RangeObservable.js","webpack:///./~/rxjs/observable/SubscribeOnObservable.js","webpack:///./~/rxjs/observable/TimerObservable.js","webpack:///./~/rxjs/observable/UsingObservable.js","webpack:///./~/rxjs/observable/bindCallback.js","webpack:///./~/rxjs/observable/bindNodeCallback.js","webpack:///./~/rxjs/observable/combineLatest.js","webpack:///./~/rxjs/observable/concat.js","webpack:///./~/rxjs/observable/defer.js","webpack:///./~/rxjs/observable/dom/WebSocketSubject.js","webpack:///./~/rxjs/observable/dom/ajax.js","webpack:///./~/rxjs/observable/dom/webSocket.js","webpack:///./~/rxjs/observable/fromEvent.js","webpack:///./~/rxjs/observable/fromEventPattern.js","webpack:///./~/rxjs/observable/if.js","webpack:///./~/rxjs/observable/interval.js","webpack:///./~/rxjs/observable/never.js","webpack:///./~/rxjs/observable/pairs.js","webpack:///./~/rxjs/observable/range.js","webpack:///./~/rxjs/observable/throw.js","webpack:///./~/rxjs/observable/timer.js","webpack:///./~/rxjs/observable/using.js","webpack:///./~/rxjs/observable/zip.js","webpack:///./~/rxjs/operator/audit.js","webpack:///./~/rxjs/operator/auditTime.js","webpack:///./~/rxjs/operator/buffer.js","webpack:///./~/rxjs/operator/bufferCount.js","webpack:///./~/rxjs/operator/bufferTime.js","webpack:///./~/rxjs/operator/bufferToggle.js","webpack:///./~/rxjs/operator/bufferWhen.js","webpack:///./~/rxjs/operator/combineAll.js","webpack:///./~/rxjs/operator/concatMapTo.js","webpack:///./~/rxjs/operator/count.js","webpack:///./~/rxjs/operator/debounce.js","webpack:///./~/rxjs/operator/defaultIfEmpty.js","webpack:///./~/rxjs/operator/delay.js","webpack:///./~/rxjs/operator/delayWhen.js","webpack:///./~/rxjs/operator/dematerialize.js","webpack:///./~/rxjs/operator/distinct.js","webpack:///./~/rxjs/operator/distinctUntilKeyChanged.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/elementAt.js","webpack:///./~/rxjs/operator/exhaust.js","webpack:///./~/rxjs/operator/exhaustMap.js","webpack:///./~/rxjs/operator/expand.js","webpack:///./~/rxjs/operator/finally.js","webpack:///./~/rxjs/operator/findIndex.js","webpack:///./~/rxjs/operator/groupBy.js","webpack:///./~/rxjs/operator/isEmpty.js","webpack:///./~/rxjs/operator/let.js","webpack:///./~/rxjs/operator/mapTo.js","webpack:///./~/rxjs/operator/materialize.js","webpack:///./~/rxjs/operator/max.js","webpack:///./~/rxjs/operator/mergeScan.js","webpack:///./~/rxjs/operator/min.js","webpack:///./~/rxjs/operator/pairwise.js","webpack:///./~/rxjs/operator/partition.js","webpack:///./~/rxjs/operator/publish.js","webpack:///./~/rxjs/operator/publishBehavior.js","webpack:///./~/rxjs/operator/publishLast.js","webpack:///./~/rxjs/operator/publishReplay.js","webpack:///./~/rxjs/operator/repeat.js","webpack:///./~/rxjs/operator/repeatWhen.js","webpack:///./~/rxjs/operator/retry.js","webpack:///./~/rxjs/operator/retryWhen.js","webpack:///./~/rxjs/operator/sample.js","webpack:///./~/rxjs/operator/sampleTime.js","webpack:///./~/rxjs/operator/sequenceEqual.js","webpack:///./~/rxjs/operator/single.js","webpack:///./~/rxjs/operator/skipUntil.js","webpack:///./~/rxjs/operator/skipWhile.js","webpack:///./~/rxjs/operator/startWith.js","webpack:///./~/rxjs/operator/subscribeOn.js","webpack:///./~/rxjs/operator/switch.js","webpack:///./~/rxjs/operator/switchMapTo.js","webpack:///./~/rxjs/operator/take.js","webpack:///./~/rxjs/operator/takeLast.js","webpack:///./~/rxjs/operator/takeWhile.js","webpack:///./~/rxjs/operator/throttle.js","webpack:///./~/rxjs/operator/throttleTime.js","webpack:///./~/rxjs/operator/timeout.js","webpack:///./~/rxjs/operator/timeoutWith.js","webpack:///./~/rxjs/operator/toPromise.js","webpack:///./~/rxjs/operator/window.js","webpack:///./~/rxjs/operator/windowCount.js","webpack:///./~/rxjs/operator/windowTime.js","webpack:///./~/rxjs/operator/windowToggle.js","webpack:///./~/rxjs/operator/windowWhen.js","webpack:///./~/rxjs/operator/zipAll.js","webpack:///./~/rxjs/scheduler/AnimationFrameAction.js","webpack:///./~/rxjs/scheduler/AnimationFrameScheduler.js","webpack:///./~/rxjs/scheduler/AsapAction.js","webpack:///./~/rxjs/scheduler/AsapScheduler.js","webpack:///./~/rxjs/scheduler/animationFrame.js","webpack:///./~/rxjs/testing/ColdObservable.js","webpack:///./~/rxjs/testing/HotObservable.js","webpack:///./~/rxjs/testing/TestScheduler.js","webpack:///./~/rxjs/util/AnimationFrame.js","webpack:///./~/rxjs/util/FastMap.js","webpack:///./~/rxjs/util/Immediate.js","webpack:///./~/rxjs/util/Map.js","webpack:///./~/rxjs/util/MapPolyfill.js","webpack:///./~/rxjs/util/Set.js","webpack:///./~/rxjs/util/assign.js","webpack:///./~/rxjs/util/not.js"],"sourcesContent":["export { Effect, mergeEffects } from './src/effects';\r\nexport { Actions } from './src/actions';\r\nexport { EffectsModule } from './src/effects.module';\r\nexport { EffectsSubscription } from './src/effects-subscription';\r\nexport { toPayload } from './src/util';\r\nexport { runAfterBootstrapEffects } from './src/bootstrap-listener';\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/index.js\n// module id = 421\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('./Subject');\r\nvar Subscription_1 = require('./Subscription');\r\n/**\r\n * @class AsyncSubject<T>\r\n */\r\nvar AsyncSubject = (function (_super) {\r\n    __extends(AsyncSubject, _super);\r\n    function AsyncSubject() {\r\n        _super.apply(this, arguments);\r\n        this.value = null;\r\n        this.hasNext = false;\r\n        this.hasCompleted = false;\r\n    }\r\n    AsyncSubject.prototype._subscribe = function (subscriber) {\r\n        if (this.hasError) {\r\n            subscriber.error(this.thrownError);\r\n            return Subscription_1.Subscription.EMPTY;\r\n        }\r\n        else if (this.hasCompleted && this.hasNext) {\r\n            subscriber.next(this.value);\r\n            subscriber.complete();\r\n            return Subscription_1.Subscription.EMPTY;\r\n        }\r\n        return _super.prototype._subscribe.call(this, subscriber);\r\n    };\r\n    AsyncSubject.prototype.next = function (value) {\r\n        if (!this.hasCompleted) {\r\n            this.value = value;\r\n            this.hasNext = true;\r\n        }\r\n    };\r\n    AsyncSubject.prototype.error = function (error) {\r\n        if (!this.hasCompleted) {\r\n            _super.prototype.error.call(this, error);\r\n        }\r\n    };\r\n    AsyncSubject.prototype.complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.hasNext) {\r\n            _super.prototype.next.call(this, this.value);\r\n        }\r\n        _super.prototype.complete.call(this);\r\n    };\r\n    return AsyncSubject;\r\n}(Subject_1.Subject));\r\nexports.AsyncSubject = AsyncSubject;\r\n//# sourceMappingURL=AsyncSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/AsyncSubject.js\n// module id = 426\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nvar ArgumentOutOfRangeError = (function (_super) {\r\n    __extends(ArgumentOutOfRangeError, _super);\r\n    function ArgumentOutOfRangeError() {\r\n        var err = _super.call(this, 'argument out of range');\r\n        this.name = err.name = 'ArgumentOutOfRangeError';\r\n        this.stack = err.stack;\r\n        this.message = err.message;\r\n    }\r\n    return ArgumentOutOfRangeError;\r\n}(Error));\r\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\r\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/ArgumentOutOfRangeError.js\n// module id = 427\n// module chunks = 4","\"use strict\";\r\nfunction isDate(value) {\r\n    return value instanceof Date && !isNaN(+value);\r\n}\r\nexports.isDate = isDate;\r\n//# sourceMappingURL=isDate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isDate.js\n// module id = 428\n// module chunks = 4","\"use strict\";\r\nvar isArray_1 = require('../util/isArray');\r\nfunction isNumeric(val) {\r\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\r\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\r\n    // subtraction forces infinities to NaN\r\n    // adding 1 corrects loss of precision from parseFloat (#15100)\r\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\r\n}\r\nexports.isNumeric = isNumeric;\r\n;\r\n//# sourceMappingURL=isNumeric.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/isNumeric.js\n// module id = 429\n// module chunks = 4","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { TypeCode } from '../../tickets/models/type-code';\r\nimport { AllTypeCodesModel } from \"app/core/typecodes/typecode.model\";\r\n\r\n@Injectable()\r\nexport class TypecodesService {\r\n    constructor(private http: Http) {}\r\n    getTypecodes(): Observable<AllTypeCodesModel> {\r\n        return this.http.get('http://10.31.201.176:60497/api/typecode')\r\n        .map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/core/typecodes/typecodes.service.ts","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar isArray_1 = require('../util/isArray');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar none = {};\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Combines multiple Observables to create an Observable whose values are\r\n * calculated from the latest values of each of its input Observables.\r\n *\r\n * <span class=\"informal\">Whenever any input Observable emits a value, it\r\n * computes a formula using the latest values from all the inputs, then emits\r\n * the output of that formula.</span>\r\n *\r\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\r\n *\r\n * `combineLatest` combines the values from this Observable with values from\r\n * Observables passed as arguments. This is done by subscribing to each\r\n * Observable, in order, and collecting an array of each of the most recent\r\n * values any time any of the input Observables emits, then either taking that\r\n * array and passing it as arguments to an optional `project` function and\r\n * emitting the return value of that, or just emitting the array of recent\r\n * values directly if there is no `project` function.\r\n *\r\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\r\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\r\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\r\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\r\n * bmi.subscribe(x => console.log('BMI is ' + x));\r\n *\r\n * // With output to console:\r\n * // BMI is 24.212293388429753\r\n * // BMI is 23.93948099205209\r\n * // BMI is 23.671253629592222\r\n *\r\n * @see {@link combineAll}\r\n * @see {@link merge}\r\n * @see {@link withLatestFrom}\r\n *\r\n * @param {ObservableInput} other An input Observable to combine with the source\r\n * Observable. More than one input Observables may be given as argument.\r\n * @param {function} [project] An optional function to project the values from\r\n * the combined latest values into a new value on the output Observable.\r\n * @return {Observable} An Observable of projected values from the most recent\r\n * values from each input Observable, or an array of the most recent values from\r\n * each input Observable.\r\n * @method combineLatest\r\n * @owner Observable\r\n */\r\nfunction combineLatest() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    var project = null;\r\n    if (typeof observables[observables.length - 1] === 'function') {\r\n        project = observables.pop();\r\n    }\r\n    // if the first and only other argument besides the resultSelector is an array\r\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\r\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\r\n        observables = observables[0].slice();\r\n    }\r\n    observables.unshift(this);\r\n    return this.lift.call(new ArrayObservable_1.ArrayObservable(observables), new CombineLatestOperator(project));\r\n}\r\nexports.combineLatest = combineLatest;\r\nvar CombineLatestOperator = (function () {\r\n    function CombineLatestOperator(project) {\r\n        this.project = project;\r\n    }\r\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\r\n    };\r\n    return CombineLatestOperator;\r\n}());\r\nexports.CombineLatestOperator = CombineLatestOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar CombineLatestSubscriber = (function (_super) {\r\n    __extends(CombineLatestSubscriber, _super);\r\n    function CombineLatestSubscriber(destination, project) {\r\n        _super.call(this, destination);\r\n        this.project = project;\r\n        this.active = 0;\r\n        this.values = [];\r\n        this.observables = [];\r\n    }\r\n    CombineLatestSubscriber.prototype._next = function (observable) {\r\n        this.values.push(none);\r\n        this.observables.push(observable);\r\n    };\r\n    CombineLatestSubscriber.prototype._complete = function () {\r\n        var observables = this.observables;\r\n        var len = observables.length;\r\n        if (len === 0) {\r\n            this.destination.complete();\r\n        }\r\n        else {\r\n            this.active = len;\r\n            this.toRespond = len;\r\n            for (var i = 0; i < len; i++) {\r\n                var observable = observables[i];\r\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\r\n            }\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\r\n        if ((this.active -= 1) === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var values = this.values;\r\n        var oldVal = values[outerIndex];\r\n        var toRespond = !this.toRespond\r\n            ? 0\r\n            : oldVal === none ? --this.toRespond : this.toRespond;\r\n        values[outerIndex] = innerValue;\r\n        if (toRespond === 0) {\r\n            if (this.project) {\r\n                this._tryProject(values);\r\n            }\r\n            else {\r\n                this.destination.next(values.slice());\r\n            }\r\n        }\r\n    };\r\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\r\n        var result;\r\n        try {\r\n            result = this.project.apply(this, values);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this.destination.next(result);\r\n    };\r\n    return CombineLatestSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\r\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineLatest.js\n// module id = 454\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../Observable');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar mergeAll_1 = require('./mergeAll');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Creates an output Observable which sequentially emits all values from every\r\n * given input Observable after the current Observable.\r\n *\r\n * <span class=\"informal\">Concatenates multiple Observables together by\r\n * sequentially emitting their values, one Observable after the other.</span>\r\n *\r\n * <img src=\"./img/concat.png\" width=\"100%\">\r\n *\r\n * Joins this Observable with multiple other Observables by subscribing to them\r\n * one at a time, starting with the source, and merging their results into the\r\n * output Observable. Will wait for each Observable to complete before moving\r\n * on to the next.\r\n *\r\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\r\n * var timer = Rx.Observable.interval(1000).take(4);\r\n * var sequence = Rx.Observable.range(1, 10);\r\n * var result = timer.concat(sequence);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in:\r\n * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\r\n *\r\n * @example <caption>Concatenate 3 Observables</caption>\r\n * var timer1 = Rx.Observable.interval(1000).take(10);\r\n * var timer2 = Rx.Observable.interval(2000).take(6);\r\n * var timer3 = Rx.Observable.interval(500).take(10);\r\n * var result = timer1.concat(timer2, timer3);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in the following:\r\n * // (Prints to console sequentially)\r\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\r\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\r\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\r\n *\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n *\r\n * @param {ObservableInput} other An input Observable to concatenate after the source\r\n * Observable. More than one input Observables may be given as argument.\r\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\r\n * Observable subscription on.\r\n * @return {Observable} All values of each passed Observable merged into a\r\n * single Observable, in order, in serial fashion.\r\n * @method concat\r\n * @owner Observable\r\n */\r\nfunction concat() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    return this.lift.call(concatStatic.apply(void 0, [this].concat(observables)));\r\n}\r\nexports.concat = concat;\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Creates an output Observable which sequentially emits all values from given\r\n * Observable and then moves on to the next.\r\n *\r\n * <span class=\"informal\">Concatenates multiple Observables together by\r\n * sequentially emitting their values, one Observable after the other.</span>\r\n *\r\n * <img src=\"./img/concat.png\" width=\"100%\">\r\n *\r\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\r\n * merging their results into the output Observable. You can pass either an array of\r\n * Observables, or put them directly as arguments. Passing an empty array will result\r\n * in Observable that completes immediately.\r\n *\r\n * `concat` will subscribe to first input Observable and emit all its values, without\r\n * changing or affecting them in any way. When that Observable completes, it will\r\n * subscribe to then next Observable passed and, again, emit its values. This will be\r\n * repeated, until the operator runs out of Observables. When last input Observable completes,\r\n * `concat` will complete as well. At any given moment only one Observable passed to operator\r\n * emits values. If you would like to emit values from passed Observables concurrently, check out\r\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\r\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\r\n *\r\n * Note that if some input Observable never completes, `concat` will also never complete\r\n * and Observables following the one that did not complete will never be subscribed. On the other\r\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\r\n * invisible for `concat`, which will just move on to the next Observable.\r\n *\r\n * If any Observable in chain errors, instead of passing control to the next Observable,\r\n * `concat` will error immediately as well. Observables that would be subscribed after\r\n * the one that emitted error, never will.\r\n *\r\n * If you pass to `concat` the same Observable many times, its stream of values\r\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\r\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\r\n * you can always use {@link repeat}.\r\n *\r\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\r\n * var timer = Rx.Observable.interval(1000).take(4);\r\n * var sequence = Rx.Observable.range(1, 10);\r\n * var result = Rx.Observable.concat(timer, sequence);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in:\r\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\r\n *\r\n *\r\n * @example <caption>Concatenate an array of 3 Observables</caption>\r\n * var timer1 = Rx.Observable.interval(1000).take(10);\r\n * var timer2 = Rx.Observable.interval(2000).take(6);\r\n * var timer3 = Rx.Observable.interval(500).take(10);\r\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in the following:\r\n * // (Prints to console sequentially)\r\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\r\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\r\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\r\n *\r\n *\r\n * @example <caption>Concatenate the same Observable to repeat it</caption>\r\n * const timer = Rx.Observable.interval(1000).take(2);\r\n *\r\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\r\n * .subscribe(\r\n *   value => console.log(value),\r\n *   err => {},\r\n *   () => console.log('...and it is done!')\r\n * );\r\n *\r\n * // Logs:\r\n * // 0 after 1s\r\n * // 1 after 2s\r\n * // 0 after 3s\r\n * // 1 after 4s\r\n * // \"...and it is done!\" also after 4s\r\n *\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n *\r\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\r\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\r\n * More than one input Observables may be given as argument.\r\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\r\n * Observable subscription on.\r\n * @return {Observable} All values of each passed Observable merged into a\r\n * single Observable, in order, in serial fashion.\r\n * @static true\r\n * @name concat\r\n * @owner Observable\r\n */\r\nfunction concatStatic() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    var scheduler = null;\r\n    var args = observables;\r\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\r\n        scheduler = args.pop();\r\n    }\r\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\r\n        return observables[0];\r\n    }\r\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\r\n}\r\nexports.concatStatic = concatStatic;\r\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concat.js\n// module id = 455\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar isArray_1 = require('../util/isArray');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar iterator_1 = require('../symbol/iterator');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * @param observables\r\n * @return {Observable<R>}\r\n * @method zip\r\n * @owner Observable\r\n */\r\nfunction zipProto() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    return this.lift.call(zipStatic.apply(void 0, [this].concat(observables)));\r\n}\r\nexports.zipProto = zipProto;\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\r\n * of its input Observables.\r\n *\r\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\r\n * Otherwise, an array of the input values is returned.\r\n *\r\n * @example <caption>Combine age and name from different sources</caption>\r\n *\r\n * let age$ = Observable.of<number>(27, 25, 29);\r\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\r\n * let isDev$ = Observable.of<boolean>(true, true, false);\r\n *\r\n * Observable\r\n *     .zip(age$,\r\n *          name$,\r\n *          isDev$,\r\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // outputs\r\n * // { age: 27, name: 'Foo', isDev: true }\r\n * // { age: 25, name: 'Bar', isDev: true }\r\n * // { age: 29, name: 'Beer', isDev: false }\r\n *\r\n * @param observables\r\n * @return {Observable<R>}\r\n * @static true\r\n * @name zip\r\n * @owner Observable\r\n */\r\nfunction zipStatic() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    var project = observables[observables.length - 1];\r\n    if (typeof project === 'function') {\r\n        observables.pop();\r\n    }\r\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\r\n}\r\nexports.zipStatic = zipStatic;\r\nvar ZipOperator = (function () {\r\n    function ZipOperator(project) {\r\n        this.project = project;\r\n    }\r\n    ZipOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ZipSubscriber(subscriber, this.project));\r\n    };\r\n    return ZipOperator;\r\n}());\r\nexports.ZipOperator = ZipOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ZipSubscriber = (function (_super) {\r\n    __extends(ZipSubscriber, _super);\r\n    function ZipSubscriber(destination, project, values) {\r\n        if (values === void 0) { values = Object.create(null); }\r\n        _super.call(this, destination);\r\n        this.iterators = [];\r\n        this.active = 0;\r\n        this.project = (typeof project === 'function') ? project : null;\r\n        this.values = values;\r\n    }\r\n    ZipSubscriber.prototype._next = function (value) {\r\n        var iterators = this.iterators;\r\n        if (isArray_1.isArray(value)) {\r\n            iterators.push(new StaticArrayIterator(value));\r\n        }\r\n        else if (typeof value[iterator_1.iterator] === 'function') {\r\n            iterators.push(new StaticIterator(value[iterator_1.iterator]()));\r\n        }\r\n        else {\r\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\r\n        }\r\n    };\r\n    ZipSubscriber.prototype._complete = function () {\r\n        var iterators = this.iterators;\r\n        var len = iterators.length;\r\n        if (len === 0) {\r\n            this.destination.complete();\r\n            return;\r\n        }\r\n        this.active = len;\r\n        for (var i = 0; i < len; i++) {\r\n            var iterator = iterators[i];\r\n            if (iterator.stillUnsubscribed) {\r\n                this.add(iterator.subscribe(iterator, i));\r\n            }\r\n            else {\r\n                this.active--; // not an observable\r\n            }\r\n        }\r\n    };\r\n    ZipSubscriber.prototype.notifyInactive = function () {\r\n        this.active--;\r\n        if (this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    ZipSubscriber.prototype.checkIterators = function () {\r\n        var iterators = this.iterators;\r\n        var len = iterators.length;\r\n        var destination = this.destination;\r\n        // abort if not all of them have values\r\n        for (var i = 0; i < len; i++) {\r\n            var iterator = iterators[i];\r\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\r\n                return;\r\n            }\r\n        }\r\n        var shouldComplete = false;\r\n        var args = [];\r\n        for (var i = 0; i < len; i++) {\r\n            var iterator = iterators[i];\r\n            var result = iterator.next();\r\n            // check to see if it's completed now that you've gotten\r\n            // the next value.\r\n            if (iterator.hasCompleted()) {\r\n                shouldComplete = true;\r\n            }\r\n            if (result.done) {\r\n                destination.complete();\r\n                return;\r\n            }\r\n            args.push(result.value);\r\n        }\r\n        if (this.project) {\r\n            this._tryProject(args);\r\n        }\r\n        else {\r\n            destination.next(args);\r\n        }\r\n        if (shouldComplete) {\r\n            destination.complete();\r\n        }\r\n    };\r\n    ZipSubscriber.prototype._tryProject = function (args) {\r\n        var result;\r\n        try {\r\n            result = this.project.apply(this, args);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this.destination.next(result);\r\n    };\r\n    return ZipSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nexports.ZipSubscriber = ZipSubscriber;\r\nvar StaticIterator = (function () {\r\n    function StaticIterator(iterator) {\r\n        this.iterator = iterator;\r\n        this.nextResult = iterator.next();\r\n    }\r\n    StaticIterator.prototype.hasValue = function () {\r\n        return true;\r\n    };\r\n    StaticIterator.prototype.next = function () {\r\n        var result = this.nextResult;\r\n        this.nextResult = this.iterator.next();\r\n        return result;\r\n    };\r\n    StaticIterator.prototype.hasCompleted = function () {\r\n        var nextResult = this.nextResult;\r\n        return nextResult && nextResult.done;\r\n    };\r\n    return StaticIterator;\r\n}());\r\nvar StaticArrayIterator = (function () {\r\n    function StaticArrayIterator(array) {\r\n        this.array = array;\r\n        this.index = 0;\r\n        this.length = 0;\r\n        this.length = array.length;\r\n    }\r\n    StaticArrayIterator.prototype[iterator_1.iterator] = function () {\r\n        return this;\r\n    };\r\n    StaticArrayIterator.prototype.next = function (value) {\r\n        var i = this.index++;\r\n        var array = this.array;\r\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\r\n    };\r\n    StaticArrayIterator.prototype.hasValue = function () {\r\n        return this.array.length > this.index;\r\n    };\r\n    StaticArrayIterator.prototype.hasCompleted = function () {\r\n        return this.array.length === this.index;\r\n    };\r\n    return StaticArrayIterator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ZipBufferIterator = (function (_super) {\r\n    __extends(ZipBufferIterator, _super);\r\n    function ZipBufferIterator(destination, parent, observable) {\r\n        _super.call(this, destination);\r\n        this.parent = parent;\r\n        this.observable = observable;\r\n        this.stillUnsubscribed = true;\r\n        this.buffer = [];\r\n        this.isComplete = false;\r\n    }\r\n    ZipBufferIterator.prototype[iterator_1.iterator] = function () {\r\n        return this;\r\n    };\r\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\r\n    //    this is legit because `next()` will never be called by a subscription in this case.\r\n    ZipBufferIterator.prototype.next = function () {\r\n        var buffer = this.buffer;\r\n        if (buffer.length === 0 && this.isComplete) {\r\n            return { value: null, done: true };\r\n        }\r\n        else {\r\n            return { value: buffer.shift(), done: false };\r\n        }\r\n    };\r\n    ZipBufferIterator.prototype.hasValue = function () {\r\n        return this.buffer.length > 0;\r\n    };\r\n    ZipBufferIterator.prototype.hasCompleted = function () {\r\n        return this.buffer.length === 0 && this.isComplete;\r\n    };\r\n    ZipBufferIterator.prototype.notifyComplete = function () {\r\n        if (this.buffer.length > 0) {\r\n            this.isComplete = true;\r\n            this.parent.notifyInactive();\r\n        }\r\n        else {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.buffer.push(innerValue);\r\n        this.parent.checkIterators();\r\n    };\r\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\r\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\r\n    };\r\n    return ZipBufferIterator;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/zip.js\n// module id = 456\n// module chunks = 4","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'tab',\r\n    styles: [`.pane { padding: 1em; }`],\r\n    template: `\r\n    <div [hidden]=\"!active\" role=\"tabpanel\" class=\"tab-pane\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n})\r\nexport class Tab {\r\n    @Input() tabTitle: string;\r\n    @Input() active = false;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/layout/tabs/tab.component.ts","import { Injectable } from '@angular/core';\r\nimport { TicketModel, TicketTestModel } from './models/ticket.model';\r\nimport {Http, Headers} from \"@angular/http\";\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { TicketStoreData } from './ticket-store/ticket.store-data';\r\nimport { TicketCommentsRequest } from \"app/tickets/models/ticket-comments.model\";\r\n@Injectable()\r\nexport class TicketService {\r\n    constructor(private http: Http) { }\r\n    // api calls go here\r\n    getTickets(): Observable<TicketModel[]> {\r\n        //this.headers.\r\n    return this.http.get('http://10.31.201.176:60497/api/ticket')\r\n        .map(x => x.json()); // creates the  \"payload\" on the next line\r\n        //.map(payload => ({type: 'ADD_TICKET_LIST', payload: payload})) // creates the \"action\"\r\n        //.subscribe(action => this._store.dispatch(action)); // dispatches the action\r\n    }\r\n\r\n    getTicketDetailById(id: number): Observable<TicketModel> {\r\n        return this.http.get('http://10.31.201.176:60497/api/ticket/' + id)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    postTicketComment(comment: TicketCommentsRequest){\r\n        return this.http.post('http://10.31.201.176:60497/api/ticketNote', comment)\r\n        .map(res => res.json());\r\n    }\r\n    getTicketById(id: number): TicketTestModel {\r\n        return {\r\n            requestorName: 'Danielle',\r\n            ticketId: 1,\r\n            component: {id: 1, text: 'Software'},\r\n            subcomponent: {id: 1, text: 'Outlook'},\r\n            category: {id: 1, text: 'Password Reset' },\r\n            priority: {id: 1, text: 'High' },\r\n            status: {id: 2, text: 'Open' },\r\n            description: 'say need to set password but do not know old one',\r\n            createdDate: '03/17/2017',\r\n            updatedDate: '',\r\n            source: {id: 1, text: 'email'}\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket.service.ts","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\n// TODO: This is a copy of this: https://github.com/redux-observable/redux-observable/blob/master/src/ActionsObservable.js\r\n// Remove after this is resolved: https://github.com/redux-observable/redux-observable/issues/95\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Dispatcher } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { filter } from 'rxjs/operator/filter';\r\nvar Actions = Actions_1 = (function (_super) {\r\n    __extends(Actions, _super);\r\n    function Actions(actionsSubject) {\r\n        var _this = _super.call(this) || this;\r\n        _this.source = actionsSubject;\r\n        return _this;\r\n    }\r\n    Actions.prototype.lift = function (operator) {\r\n        var observable = new Actions_1(this);\r\n        observable.operator = operator;\r\n        return observable;\r\n    };\r\n    Actions.prototype.ofType = function () {\r\n        var keys = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            keys[_i] = arguments[_i];\r\n        }\r\n        return filter.call(this, function (_a) {\r\n            var type = _a.type;\r\n            var len = keys.length;\r\n            if (len === 1) {\r\n                return type === keys[0];\r\n            }\r\n            else {\r\n                for (var i = 0; i < len; i++) {\r\n                    if (keys[i] === type) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n    };\r\n    return Actions;\r\n}(Observable));\r\nActions = Actions_1 = __decorate([\r\n    Injectable(),\r\n    __param(0, Inject(Dispatcher)),\r\n    __metadata(\"design:paramtypes\", [Observable])\r\n], Actions);\r\nexport { Actions };\r\nvar Actions_1;\r\n//# sourceMappingURL=actions.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/actions.js\n// module id = 460\n// module chunks = 4","import { OpaqueToken } from '@angular/core';\r\nexport var afterBootstrapEffects = new OpaqueToken('ngrx:effects: Bootstrap Effects');\r\nexport function runAfterBootstrapEffects(injector, subscription) {\r\n    return function () {\r\n        var effectInstances = injector.get(afterBootstrapEffects, false);\r\n        if (effectInstances) {\r\n            subscription.addEffects(effectInstances);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=bootstrap-listener.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/bootstrap-listener.js\n// module id = 461\n// module chunks = 4","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { OpaqueToken, Inject, SkipSelf, Optional, Injectable } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { merge } from 'rxjs/observable/merge';\r\nimport { mergeEffects } from './effects';\r\nexport var effects = new OpaqueToken('ngrx/effects: Effects');\r\nvar EffectsSubscription = (function (_super) {\r\n    __extends(EffectsSubscription, _super);\r\n    function EffectsSubscription(store, parent, effectInstances) {\r\n        var _this = _super.call(this) || this;\r\n        _this.store = store;\r\n        _this.parent = parent;\r\n        if (Boolean(parent)) {\r\n            parent.add(_this);\r\n        }\r\n        if (Boolean(effectInstances)) {\r\n            _this.addEffects(effectInstances);\r\n        }\r\n        return _this;\r\n    }\r\n    EffectsSubscription.prototype.addEffects = function (effectInstances) {\r\n        var sources = effectInstances.map(mergeEffects);\r\n        var merged = merge.apply(void 0, sources);\r\n        this.add(merged.subscribe(this.store));\r\n    };\r\n    EffectsSubscription.prototype.ngOnDestroy = function () {\r\n        if (!this.closed) {\r\n            this.unsubscribe();\r\n        }\r\n    };\r\n    return EffectsSubscription;\r\n}(Subscription));\r\nEffectsSubscription = __decorate([\r\n    Injectable(),\r\n    __param(0, Inject(Store)),\r\n    __param(1, Optional()), __param(1, SkipSelf()),\r\n    __param(2, Optional()), __param(2, Inject(effects)),\r\n    __metadata(\"design:paramtypes\", [Object, EffectsSubscription, Array])\r\n], EffectsSubscription);\r\nexport { EffectsSubscription };\r\n//# sourceMappingURL=effects-subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects-subscription.js\n// module id = 462\n// module chunks = 4","import { merge } from 'rxjs/observable/merge';\r\nimport { ignoreElements } from 'rxjs/operator/ignoreElements';\r\nvar METADATA_KEY = '@ngrx/effects';\r\nexport function Effect(_a) {\r\n    var dispatch = (_a === void 0 ? { dispatch: true } : _a).dispatch;\r\n    return function (target, propertyName) {\r\n        if (!Reflect.hasOwnMetadata(METADATA_KEY, target)) {\r\n            Reflect.defineMetadata(METADATA_KEY, [], target);\r\n        }\r\n        var effects = Reflect.getOwnMetadata(METADATA_KEY, target);\r\n        var metadata = { propertyName: propertyName, dispatch: dispatch };\r\n        Reflect.defineMetadata(METADATA_KEY, effects.concat([metadata]), target);\r\n    };\r\n}\r\nexport function getEffectsMetadata(instance) {\r\n    var target = Object.getPrototypeOf(instance);\r\n    if (!Reflect.hasOwnMetadata(METADATA_KEY, target)) {\r\n        return [];\r\n    }\r\n    return Reflect.getOwnMetadata(METADATA_KEY, target);\r\n}\r\nexport function mergeEffects(instance) {\r\n    var observables = getEffectsMetadata(instance).map(function (_a) {\r\n        var propertyName = _a.propertyName, dispatch = _a.dispatch;\r\n        var observable = typeof instance[propertyName] === 'function' ?\r\n            instance[propertyName]() : instance[propertyName];\r\n        if (dispatch === false) {\r\n            return ignoreElements.call(observable);\r\n        }\r\n        return observable;\r\n    });\r\n    return merge.apply(void 0, observables);\r\n}\r\n//# sourceMappingURL=effects.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects.js\n// module id = 463\n// module chunks = 4","\"use strict\";\r\n/* tslint:disable:no-unused-variable */\r\n// Subject imported before Observable to bypass circular dependency issue since\r\n// Subject extends Observable and Observable references Subject in it's\r\n// definition\r\nvar Subject_1 = require('./Subject');\r\nexports.Subject = Subject_1.Subject;\r\nexports.AnonymousSubject = Subject_1.AnonymousSubject;\r\n/* tslint:enable:no-unused-variable */\r\nvar Observable_1 = require('./Observable');\r\nexports.Observable = Observable_1.Observable;\r\n// statics\r\n/* tslint:disable:no-use-before-declare */\r\nrequire('./add/observable/bindCallback');\r\nrequire('./add/observable/bindNodeCallback');\r\nrequire('./add/observable/combineLatest');\r\nrequire('./add/observable/concat');\r\nrequire('./add/observable/defer');\r\nrequire('./add/observable/empty');\r\nrequire('./add/observable/forkJoin');\r\nrequire('./add/observable/from');\r\nrequire('./add/observable/fromEvent');\r\nrequire('./add/observable/fromEventPattern');\r\nrequire('./add/observable/fromPromise');\r\nrequire('./add/observable/generate');\r\nrequire('./add/observable/if');\r\nrequire('./add/observable/interval');\r\nrequire('./add/observable/merge');\r\nrequire('./add/observable/race');\r\nrequire('./add/observable/never');\r\nrequire('./add/observable/of');\r\nrequire('./add/observable/onErrorResumeNext');\r\nrequire('./add/observable/pairs');\r\nrequire('./add/observable/range');\r\nrequire('./add/observable/using');\r\nrequire('./add/observable/throw');\r\nrequire('./add/observable/timer');\r\nrequire('./add/observable/zip');\r\n//dom\r\nrequire('./add/observable/dom/ajax');\r\nrequire('./add/observable/dom/webSocket');\r\n//operators\r\nrequire('./add/operator/buffer');\r\nrequire('./add/operator/bufferCount');\r\nrequire('./add/operator/bufferTime');\r\nrequire('./add/operator/bufferToggle');\r\nrequire('./add/operator/bufferWhen');\r\nrequire('./add/operator/catch');\r\nrequire('./add/operator/combineAll');\r\nrequire('./add/operator/combineLatest');\r\nrequire('./add/operator/concat');\r\nrequire('./add/operator/concatAll');\r\nrequire('./add/operator/concatMap');\r\nrequire('./add/operator/concatMapTo');\r\nrequire('./add/operator/count');\r\nrequire('./add/operator/dematerialize');\r\nrequire('./add/operator/debounce');\r\nrequire('./add/operator/debounceTime');\r\nrequire('./add/operator/defaultIfEmpty');\r\nrequire('./add/operator/delay');\r\nrequire('./add/operator/delayWhen');\r\nrequire('./add/operator/distinct');\r\nrequire('./add/operator/distinctUntilChanged');\r\nrequire('./add/operator/distinctUntilKeyChanged');\r\nrequire('./add/operator/do');\r\nrequire('./add/operator/exhaust');\r\nrequire('./add/operator/exhaustMap');\r\nrequire('./add/operator/expand');\r\nrequire('./add/operator/elementAt');\r\nrequire('./add/operator/filter');\r\nrequire('./add/operator/finally');\r\nrequire('./add/operator/find');\r\nrequire('./add/operator/findIndex');\r\nrequire('./add/operator/first');\r\nrequire('./add/operator/groupBy');\r\nrequire('./add/operator/ignoreElements');\r\nrequire('./add/operator/isEmpty');\r\nrequire('./add/operator/audit');\r\nrequire('./add/operator/auditTime');\r\nrequire('./add/operator/last');\r\nrequire('./add/operator/let');\r\nrequire('./add/operator/every');\r\nrequire('./add/operator/map');\r\nrequire('./add/operator/mapTo');\r\nrequire('./add/operator/materialize');\r\nrequire('./add/operator/max');\r\nrequire('./add/operator/merge');\r\nrequire('./add/operator/mergeAll');\r\nrequire('./add/operator/mergeMap');\r\nrequire('./add/operator/mergeMapTo');\r\nrequire('./add/operator/mergeScan');\r\nrequire('./add/operator/min');\r\nrequire('./add/operator/multicast');\r\nrequire('./add/operator/observeOn');\r\nrequire('./add/operator/onErrorResumeNext');\r\nrequire('./add/operator/pairwise');\r\nrequire('./add/operator/partition');\r\nrequire('./add/operator/pluck');\r\nrequire('./add/operator/publish');\r\nrequire('./add/operator/publishBehavior');\r\nrequire('./add/operator/publishReplay');\r\nrequire('./add/operator/publishLast');\r\nrequire('./add/operator/race');\r\nrequire('./add/operator/reduce');\r\nrequire('./add/operator/repeat');\r\nrequire('./add/operator/repeatWhen');\r\nrequire('./add/operator/retry');\r\nrequire('./add/operator/retryWhen');\r\nrequire('./add/operator/sample');\r\nrequire('./add/operator/sampleTime');\r\nrequire('./add/operator/scan');\r\nrequire('./add/operator/sequenceEqual');\r\nrequire('./add/operator/share');\r\nrequire('./add/operator/single');\r\nrequire('./add/operator/skip');\r\nrequire('./add/operator/skipUntil');\r\nrequire('./add/operator/skipWhile');\r\nrequire('./add/operator/startWith');\r\nrequire('./add/operator/subscribeOn');\r\nrequire('./add/operator/switch');\r\nrequire('./add/operator/switchMap');\r\nrequire('./add/operator/switchMapTo');\r\nrequire('./add/operator/take');\r\nrequire('./add/operator/takeLast');\r\nrequire('./add/operator/takeUntil');\r\nrequire('./add/operator/takeWhile');\r\nrequire('./add/operator/throttle');\r\nrequire('./add/operator/throttleTime');\r\nrequire('./add/operator/timeInterval');\r\nrequire('./add/operator/timeout');\r\nrequire('./add/operator/timeoutWith');\r\nrequire('./add/operator/timestamp');\r\nrequire('./add/operator/toArray');\r\nrequire('./add/operator/toPromise');\r\nrequire('./add/operator/window');\r\nrequire('./add/operator/windowCount');\r\nrequire('./add/operator/windowTime');\r\nrequire('./add/operator/windowToggle');\r\nrequire('./add/operator/windowWhen');\r\nrequire('./add/operator/withLatestFrom');\r\nrequire('./add/operator/zip');\r\nrequire('./add/operator/zipAll');\r\n/* tslint:disable:no-unused-variable */\r\nvar Subscription_1 = require('./Subscription');\r\nexports.Subscription = Subscription_1.Subscription;\r\nvar Subscriber_1 = require('./Subscriber');\r\nexports.Subscriber = Subscriber_1.Subscriber;\r\nvar AsyncSubject_1 = require('./AsyncSubject');\r\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\r\nvar ReplaySubject_1 = require('./ReplaySubject');\r\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\r\nvar BehaviorSubject_1 = require('./BehaviorSubject');\r\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\r\nvar ConnectableObservable_1 = require('./observable/ConnectableObservable');\r\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\r\nvar Notification_1 = require('./Notification');\r\nexports.Notification = Notification_1.Notification;\r\nvar EmptyError_1 = require('./util/EmptyError');\r\nexports.EmptyError = EmptyError_1.EmptyError;\r\nvar ArgumentOutOfRangeError_1 = require('./util/ArgumentOutOfRangeError');\r\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\r\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\r\nvar TimeoutError_1 = require('./util/TimeoutError');\r\nexports.TimeoutError = TimeoutError_1.TimeoutError;\r\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\r\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\r\nvar timeInterval_1 = require('./operator/timeInterval');\r\nexports.TimeInterval = timeInterval_1.TimeInterval;\r\nvar timestamp_1 = require('./operator/timestamp');\r\nexports.Timestamp = timestamp_1.Timestamp;\r\nvar TestScheduler_1 = require('./testing/TestScheduler');\r\nexports.TestScheduler = TestScheduler_1.TestScheduler;\r\nvar VirtualTimeScheduler_1 = require('./scheduler/VirtualTimeScheduler');\r\nexports.VirtualTimeScheduler = VirtualTimeScheduler_1.VirtualTimeScheduler;\r\nvar AjaxObservable_1 = require('./observable/dom/AjaxObservable');\r\nexports.AjaxResponse = AjaxObservable_1.AjaxResponse;\r\nexports.AjaxError = AjaxObservable_1.AjaxError;\r\nexports.AjaxTimeoutError = AjaxObservable_1.AjaxTimeoutError;\r\nvar asap_1 = require('./scheduler/asap');\r\nvar async_1 = require('./scheduler/async');\r\nvar queue_1 = require('./scheduler/queue');\r\nvar animationFrame_1 = require('./scheduler/animationFrame');\r\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\r\nvar iterator_1 = require('./symbol/iterator');\r\nvar observable_1 = require('./symbol/observable');\r\n/* tslint:enable:no-unused-variable */\r\n/**\r\n * @typedef {Object} Rx.Scheduler\r\n * @property {Scheduler} queue Schedules on a queue in the current event frame\r\n * (trampoline scheduler). Use this for iteration operations.\r\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\r\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\r\n * or Web Worker MessageChannel or setTimeout or others. Use this for\r\n * asynchronous conversions.\r\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\r\n * time-based operations.\r\n * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.\r\n * Use this for synchronizing with the platform's painting\r\n */\r\nvar Scheduler = {\r\n    asap: asap_1.asap,\r\n    queue: queue_1.queue,\r\n    animationFrame: animationFrame_1.animationFrame,\r\n    async: async_1.async\r\n};\r\nexports.Scheduler = Scheduler;\r\n/**\r\n * @typedef {Object} Rx.Symbol\r\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\r\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\r\n * an object that has all of the traits of an Rx Subscriber, including the\r\n * ability to add and remove subscriptions to the subscription chain and\r\n * guarantees involving event triggering (can't \"next\" after unsubscription,\r\n * etc).\r\n * @property {Symbol|string} observable A symbol to use as a property name to\r\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\r\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\r\n * to retrieve an iterator from an object.\r\n */\r\nvar Symbol = {\r\n    rxSubscriber: rxSubscriber_1.rxSubscriber,\r\n    observable: observable_1.observable,\r\n    iterator: iterator_1.iterator\r\n};\r\nexports.Symbol = Symbol;\r\n//# sourceMappingURL=Rx.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/Rx.js\n// module id = 632\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar root_1 = require('../../util/root');\r\nvar tryCatch_1 = require('../../util/tryCatch');\r\nvar errorObject_1 = require('../../util/errorObject');\r\nvar Observable_1 = require('../../Observable');\r\nvar Subscriber_1 = require('../../Subscriber');\r\nvar map_1 = require('../../operator/map');\r\nfunction getCORSRequest() {\r\n    if (root_1.root.XMLHttpRequest) {\r\n        return new root_1.root.XMLHttpRequest();\r\n    }\r\n    else if (!!root_1.root.XDomainRequest) {\r\n        return new root_1.root.XDomainRequest();\r\n    }\r\n    else {\r\n        throw new Error('CORS is not supported by your browser');\r\n    }\r\n}\r\nfunction getXMLHttpRequest() {\r\n    if (root_1.root.XMLHttpRequest) {\r\n        return new root_1.root.XMLHttpRequest();\r\n    }\r\n    else {\r\n        var progId = void 0;\r\n        try {\r\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\r\n            for (var i = 0; i < 3; i++) {\r\n                try {\r\n                    progId = progIds[i];\r\n                    if (new root_1.root.ActiveXObject(progId)) {\r\n                        break;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return new root_1.root.ActiveXObject(progId);\r\n        }\r\n        catch (e) {\r\n            throw new Error('XMLHttpRequest is not supported by your browser');\r\n        }\r\n    }\r\n}\r\nfunction ajaxGet(url, headers) {\r\n    if (headers === void 0) { headers = null; }\r\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\r\n}\r\nexports.ajaxGet = ajaxGet;\r\n;\r\nfunction ajaxPost(url, body, headers) {\r\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\r\n}\r\nexports.ajaxPost = ajaxPost;\r\n;\r\nfunction ajaxDelete(url, headers) {\r\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\r\n}\r\nexports.ajaxDelete = ajaxDelete;\r\n;\r\nfunction ajaxPut(url, body, headers) {\r\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\r\n}\r\nexports.ajaxPut = ajaxPut;\r\n;\r\nfunction ajaxPatch(url, body, headers) {\r\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\r\n}\r\nexports.ajaxPatch = ajaxPatch;\r\n;\r\nfunction ajaxGetJSON(url, headers) {\r\n    return new AjaxObservable({ method: 'GET', url: url, responseType: 'json', headers: headers })\r\n        .lift(new map_1.MapOperator(function (x, index) { return x.response; }, null));\r\n}\r\nexports.ajaxGetJSON = ajaxGetJSON;\r\n;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar AjaxObservable = (function (_super) {\r\n    __extends(AjaxObservable, _super);\r\n    function AjaxObservable(urlOrRequest) {\r\n        _super.call(this);\r\n        var request = {\r\n            async: true,\r\n            createXHR: function () {\r\n                return this.crossDomain ? getCORSRequest.call(this) : getXMLHttpRequest();\r\n            },\r\n            crossDomain: false,\r\n            withCredentials: false,\r\n            headers: {},\r\n            method: 'GET',\r\n            responseType: 'json',\r\n            timeout: 0\r\n        };\r\n        if (typeof urlOrRequest === 'string') {\r\n            request.url = urlOrRequest;\r\n        }\r\n        else {\r\n            for (var prop in urlOrRequest) {\r\n                if (urlOrRequest.hasOwnProperty(prop)) {\r\n                    request[prop] = urlOrRequest[prop];\r\n                }\r\n            }\r\n        }\r\n        this.request = request;\r\n    }\r\n    AjaxObservable.prototype._subscribe = function (subscriber) {\r\n        return new AjaxSubscriber(subscriber, this.request);\r\n    };\r\n    /**\r\n     * Creates an observable for an Ajax request with either a request object with\r\n     * url, headers, etc or a string for a URL.\r\n     *\r\n     * @example\r\n     * source = Rx.Observable.ajax('/products');\r\n     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });\r\n     *\r\n     * @param {string|Object} request Can be one of the following:\r\n     *   A string of the URL to make the Ajax call.\r\n     *   An object with the following properties\r\n     *   - url: URL of the request\r\n     *   - body: The body of the request\r\n     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE\r\n     *   - async: Whether the request is async\r\n     *   - headers: Optional headers\r\n     *   - crossDomain: true if a cross domain request, else false\r\n     *   - createXHR: a function to override if you need to use an alternate\r\n     *   XMLHttpRequest implementation.\r\n     *   - resultSelector: a function to use to alter the output value type of\r\n     *   the Observable. Gets {@link AjaxResponse} as an argument.\r\n     * @return {Observable} An observable sequence containing the XMLHttpRequest.\r\n     * @static true\r\n     * @name ajax\r\n     * @owner Observable\r\n    */\r\n    AjaxObservable.create = (function () {\r\n        var create = function (urlOrRequest) {\r\n            return new AjaxObservable(urlOrRequest);\r\n        };\r\n        create.get = ajaxGet;\r\n        create.post = ajaxPost;\r\n        create.delete = ajaxDelete;\r\n        create.put = ajaxPut;\r\n        create.patch = ajaxPatch;\r\n        create.getJSON = ajaxGetJSON;\r\n        return create;\r\n    })();\r\n    return AjaxObservable;\r\n}(Observable_1.Observable));\r\nexports.AjaxObservable = AjaxObservable;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar AjaxSubscriber = (function (_super) {\r\n    __extends(AjaxSubscriber, _super);\r\n    function AjaxSubscriber(destination, request) {\r\n        _super.call(this, destination);\r\n        this.request = request;\r\n        this.done = false;\r\n        var headers = request.headers = request.headers || {};\r\n        // force CORS if requested\r\n        if (!request.crossDomain && !headers['X-Requested-With']) {\r\n            headers['X-Requested-With'] = 'XMLHttpRequest';\r\n        }\r\n        // ensure content type is set\r\n        if (!('Content-Type' in headers) && !(root_1.root.FormData && request.body instanceof root_1.root.FormData) && typeof request.body !== 'undefined') {\r\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\r\n        }\r\n        // properly serialize body\r\n        request.body = this.serializeBody(request.body, request.headers['Content-Type']);\r\n        this.send();\r\n    }\r\n    AjaxSubscriber.prototype.next = function (e) {\r\n        this.done = true;\r\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\r\n        var response = new AjaxResponse(e, xhr, request);\r\n        destination.next(response);\r\n    };\r\n    AjaxSubscriber.prototype.send = function () {\r\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\r\n        var createXHR = request.createXHR;\r\n        var xhr = tryCatch_1.tryCatch(createXHR).call(request);\r\n        if (xhr === errorObject_1.errorObject) {\r\n            this.error(errorObject_1.errorObject.e);\r\n        }\r\n        else {\r\n            this.xhr = xhr;\r\n            // set up the events before open XHR\r\n            // https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest\r\n            // You need to add the event listeners before calling open() on the request.\r\n            // Otherwise the progress events will not fire.\r\n            this.setupEvents(xhr, request);\r\n            // open XHR\r\n            var result = void 0;\r\n            if (user) {\r\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async, user, password);\r\n            }\r\n            else {\r\n                result = tryCatch_1.tryCatch(xhr.open).call(xhr, method, url, async);\r\n            }\r\n            if (result === errorObject_1.errorObject) {\r\n                this.error(errorObject_1.errorObject.e);\r\n                return null;\r\n            }\r\n            // timeout, responseType and withCredentials can be set once the XHR is open\r\n            xhr.timeout = request.timeout;\r\n            xhr.responseType = request.responseType;\r\n            if ('withCredentials' in xhr) {\r\n                xhr.withCredentials = !!request.withCredentials;\r\n            }\r\n            // set headers\r\n            this.setHeaders(xhr, headers);\r\n            // finally send the request\r\n            result = body ? tryCatch_1.tryCatch(xhr.send).call(xhr, body) : tryCatch_1.tryCatch(xhr.send).call(xhr);\r\n            if (result === errorObject_1.errorObject) {\r\n                this.error(errorObject_1.errorObject.e);\r\n                return null;\r\n            }\r\n        }\r\n        return xhr;\r\n    };\r\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\r\n        if (!body || typeof body === 'string') {\r\n            return body;\r\n        }\r\n        else if (root_1.root.FormData && body instanceof root_1.root.FormData) {\r\n            return body;\r\n        }\r\n        if (contentType) {\r\n            var splitIndex = contentType.indexOf(';');\r\n            if (splitIndex !== -1) {\r\n                contentType = contentType.substring(0, splitIndex);\r\n            }\r\n        }\r\n        switch (contentType) {\r\n            case 'application/x-www-form-urlencoded':\r\n                return Object.keys(body).map(function (key) { return (encodeURI(key) + \"=\" + encodeURI(body[key])); }).join('&');\r\n            case 'application/json':\r\n                return JSON.stringify(body);\r\n            default:\r\n                return body;\r\n        }\r\n    };\r\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\r\n        for (var key in headers) {\r\n            if (headers.hasOwnProperty(key)) {\r\n                xhr.setRequestHeader(key, headers[key]);\r\n            }\r\n        }\r\n    };\r\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\r\n        var progressSubscriber = request.progressSubscriber;\r\n        function xhrTimeout(e) {\r\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\r\n            if (progressSubscriber) {\r\n                progressSubscriber.error(e);\r\n            }\r\n            subscriber.error(new AjaxTimeoutError(this, request)); //TODO: Make betterer.\r\n        }\r\n        ;\r\n        xhr.ontimeout = xhrTimeout;\r\n        xhrTimeout.request = request;\r\n        xhrTimeout.subscriber = this;\r\n        xhrTimeout.progressSubscriber = progressSubscriber;\r\n        if (xhr.upload && 'withCredentials' in xhr) {\r\n            if (progressSubscriber) {\r\n                var xhrProgress_1;\r\n                xhrProgress_1 = function (e) {\r\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\r\n                    progressSubscriber.next(e);\r\n                };\r\n                if (root_1.root.XDomainRequest) {\r\n                    xhr.onprogress = xhrProgress_1;\r\n                }\r\n                else {\r\n                    xhr.upload.onprogress = xhrProgress_1;\r\n                }\r\n                xhrProgress_1.progressSubscriber = progressSubscriber;\r\n            }\r\n            var xhrError_1;\r\n            xhrError_1 = function (e) {\r\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\r\n                if (progressSubscriber) {\r\n                    progressSubscriber.error(e);\r\n                }\r\n                subscriber.error(new AjaxError('ajax error', this, request));\r\n            };\r\n            xhr.onerror = xhrError_1;\r\n            xhrError_1.request = request;\r\n            xhrError_1.subscriber = this;\r\n            xhrError_1.progressSubscriber = progressSubscriber;\r\n        }\r\n        function xhrReadyStateChange(e) {\r\n            var _a = xhrReadyStateChange, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\r\n            if (this.readyState === 4) {\r\n                // normalize IE9 bug (http://bugs.jquery.com/ticket/1450)\r\n                var status_1 = this.status === 1223 ? 204 : this.status;\r\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\r\n                // fix status code when it is 0 (0 status is undocumented).\r\n                // Occurs when accessing file resources or on Android 4.1 stock browser\r\n                // while retrieving files from application cache.\r\n                if (status_1 === 0) {\r\n                    status_1 = response ? 200 : 0;\r\n                }\r\n                if (200 <= status_1 && status_1 < 300) {\r\n                    if (progressSubscriber) {\r\n                        progressSubscriber.complete();\r\n                    }\r\n                    subscriber.next(e);\r\n                    subscriber.complete();\r\n                }\r\n                else {\r\n                    if (progressSubscriber) {\r\n                        progressSubscriber.error(e);\r\n                    }\r\n                    subscriber.error(new AjaxError('ajax error ' + status_1, this, request));\r\n                }\r\n            }\r\n        }\r\n        ;\r\n        xhr.onreadystatechange = xhrReadyStateChange;\r\n        xhrReadyStateChange.subscriber = this;\r\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\r\n        xhrReadyStateChange.request = request;\r\n    };\r\n    AjaxSubscriber.prototype.unsubscribe = function () {\r\n        var _a = this, done = _a.done, xhr = _a.xhr;\r\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\r\n            xhr.abort();\r\n        }\r\n        _super.prototype.unsubscribe.call(this);\r\n    };\r\n    return AjaxSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nexports.AjaxSubscriber = AjaxSubscriber;\r\n/**\r\n * A normalized AJAX response.\r\n *\r\n * @see {@link ajax}\r\n *\r\n * @class AjaxResponse\r\n */\r\nvar AjaxResponse = (function () {\r\n    function AjaxResponse(originalEvent, xhr, request) {\r\n        this.originalEvent = originalEvent;\r\n        this.xhr = xhr;\r\n        this.request = request;\r\n        this.status = xhr.status;\r\n        this.responseType = xhr.responseType || request.responseType;\r\n        switch (this.responseType) {\r\n            case 'json':\r\n                if ('response' in xhr) {\r\n                    //IE does not support json as responseType, parse it internally\r\n                    this.response = xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\r\n                }\r\n                else {\r\n                    this.response = JSON.parse(xhr.responseText || 'null');\r\n                }\r\n                break;\r\n            case 'xml':\r\n                this.response = xhr.responseXML;\r\n                break;\r\n            case 'text':\r\n            default:\r\n                this.response = ('response' in xhr) ? xhr.response : xhr.responseText;\r\n                break;\r\n        }\r\n    }\r\n    return AjaxResponse;\r\n}());\r\nexports.AjaxResponse = AjaxResponse;\r\n/**\r\n * A normalized AJAX error.\r\n *\r\n * @see {@link ajax}\r\n *\r\n * @class AjaxError\r\n */\r\nvar AjaxError = (function (_super) {\r\n    __extends(AjaxError, _super);\r\n    function AjaxError(message, xhr, request) {\r\n        _super.call(this, message);\r\n        this.message = message;\r\n        this.xhr = xhr;\r\n        this.request = request;\r\n        this.status = xhr.status;\r\n    }\r\n    return AjaxError;\r\n}(Error));\r\nexports.AjaxError = AjaxError;\r\n/**\r\n * @see {@link ajax}\r\n *\r\n * @class AjaxTimeoutError\r\n */\r\nvar AjaxTimeoutError = (function (_super) {\r\n    __extends(AjaxTimeoutError, _super);\r\n    function AjaxTimeoutError(xhr, request) {\r\n        _super.call(this, 'ajax timeout', xhr, request);\r\n    }\r\n    return AjaxTimeoutError;\r\n}(AjaxError));\r\nexports.AjaxTimeoutError = AjaxTimeoutError;\r\n//# sourceMappingURL=AjaxObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/AjaxObservable.js\n// module id = 636\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Emits only the first value emitted by the source Observable that meets some\r\n * condition.\r\n *\r\n * <span class=\"informal\">Finds the first value that passes some test and emits\r\n * that.</span>\r\n *\r\n * <img src=\"./img/find.png\" width=\"100%\">\r\n *\r\n * `find` searches for the first item in the source Observable that matches the\r\n * specified condition embodied by the `predicate`, and returns the first\r\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\r\n * in `find`, and does not emit an error if a valid value is not found.\r\n *\r\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link first}\r\n * @see {@link findIndex}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {Observable<T>} An Observable of the first item that matches the\r\n * condition.\r\n * @method find\r\n * @owner Observable\r\n */\r\nfunction find(predicate, thisArg) {\r\n    if (typeof predicate !== 'function') {\r\n        throw new TypeError('predicate is not a function');\r\n    }\r\n    return this.lift(new FindValueOperator(predicate, this, false, thisArg));\r\n}\r\nexports.find = find;\r\nvar FindValueOperator = (function () {\r\n    function FindValueOperator(predicate, source, yieldIndex, thisArg) {\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.yieldIndex = yieldIndex;\r\n        this.thisArg = thisArg;\r\n    }\r\n    FindValueOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\r\n    };\r\n    return FindValueOperator;\r\n}());\r\nexports.FindValueOperator = FindValueOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar FindValueSubscriber = (function (_super) {\r\n    __extends(FindValueSubscriber, _super);\r\n    function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.yieldIndex = yieldIndex;\r\n        this.thisArg = thisArg;\r\n        this.index = 0;\r\n    }\r\n    FindValueSubscriber.prototype.notifyComplete = function (value) {\r\n        var destination = this.destination;\r\n        destination.next(value);\r\n        destination.complete();\r\n    };\r\n    FindValueSubscriber.prototype._next = function (value) {\r\n        var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;\r\n        var index = this.index++;\r\n        try {\r\n            var result = predicate.call(thisArg || this, value, index, this.source);\r\n            if (result) {\r\n                this.notifyComplete(this.yieldIndex ? index : value);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    FindValueSubscriber.prototype._complete = function () {\r\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\r\n    };\r\n    return FindValueSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nexports.FindValueSubscriber = FindValueSubscriber;\r\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/find.js\n// module id = 637\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar noop_1 = require('../util/noop');\r\n/**\r\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\r\n *\r\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\r\n *\r\n * @return {Observable} An empty Observable that only calls `complete`\r\n * or `error`, based on which one is called by the source Observable.\r\n * @method ignoreElements\r\n * @owner Observable\r\n */\r\nfunction ignoreElements() {\r\n    return this.lift(new IgnoreElementsOperator());\r\n}\r\nexports.ignoreElements = ignoreElements;\r\n;\r\nvar IgnoreElementsOperator = (function () {\r\n    function IgnoreElementsOperator() {\r\n    }\r\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\r\n    };\r\n    return IgnoreElementsOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar IgnoreElementsSubscriber = (function (_super) {\r\n    __extends(IgnoreElementsSubscriber, _super);\r\n    function IgnoreElementsSubscriber() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\r\n        noop_1.noop();\r\n    };\r\n    return IgnoreElementsSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/ignoreElements.js\n// module id = 638\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Projects each source value to the same Observable which is merged multiple\r\n * times in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\r\n * to the same inner Observable.</span>\r\n *\r\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then merges those resulting Observables into one\r\n * single Observable, which is the output Observable.\r\n *\r\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link merge}\r\n * @see {@link mergeAll}\r\n * @see {@link mergeMap}\r\n * @see {@link mergeScan}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\r\n * A function to produce the value on the output Observable based on the values\r\n * and the indices of the source (outer) emission and the inner Observable\r\n * emission. The arguments passed to this function are:\r\n * - `outerValue`: the value that came from the source\r\n * - `innerValue`: the value that came from the projected Observable\r\n * - `outerIndex`: the \"index\" of the value that came from the source\r\n * - `innerIndex`: the \"index\" of the value from the projected Observable\r\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @return {Observable} An Observable that emits items from the given\r\n * `innerObservable` (and optionally transformed through `resultSelector`) every\r\n * time a value is emitted on the source Observable.\r\n * @method mergeMapTo\r\n * @owner Observable\r\n */\r\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\r\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n    if (typeof resultSelector === 'number') {\r\n        concurrent = resultSelector;\r\n        resultSelector = null;\r\n    }\r\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\r\n}\r\nexports.mergeMapTo = mergeMapTo;\r\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\r\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\r\nvar MergeMapToOperator = (function () {\r\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\r\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n        this.ish = ish;\r\n        this.resultSelector = resultSelector;\r\n        this.concurrent = concurrent;\r\n    }\r\n    MergeMapToOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\r\n    };\r\n    return MergeMapToOperator;\r\n}());\r\nexports.MergeMapToOperator = MergeMapToOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MergeMapToSubscriber = (function (_super) {\r\n    __extends(MergeMapToSubscriber, _super);\r\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\r\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n        _super.call(this, destination);\r\n        this.ish = ish;\r\n        this.resultSelector = resultSelector;\r\n        this.concurrent = concurrent;\r\n        this.hasCompleted = false;\r\n        this.buffer = [];\r\n        this.active = 0;\r\n        this.index = 0;\r\n    }\r\n    MergeMapToSubscriber.prototype._next = function (value) {\r\n        if (this.active < this.concurrent) {\r\n            var resultSelector = this.resultSelector;\r\n            var index = this.index++;\r\n            var ish = this.ish;\r\n            var destination = this.destination;\r\n            this.active++;\r\n            this._innerSub(ish, destination, resultSelector, value, index);\r\n        }\r\n        else {\r\n            this.buffer.push(value);\r\n        }\r\n    };\r\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\r\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\r\n    };\r\n    MergeMapToSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.active === 0 && this.buffer.length === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        if (resultSelector) {\r\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\r\n        }\r\n        else {\r\n            destination.next(innerValue);\r\n        }\r\n    };\r\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        var result;\r\n        try {\r\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        destination.next(result);\r\n    };\r\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\r\n        this.destination.error(err);\r\n    };\r\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        var buffer = this.buffer;\r\n        this.remove(innerSub);\r\n        this.active--;\r\n        if (buffer.length > 0) {\r\n            this._next(buffer.shift());\r\n        }\r\n        else if (this.active === 0 && this.hasCompleted) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return MergeMapToSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\r\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeMapTo.js\n// module id = 639\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar FromObservable_1 = require('../observable/FromObservable');\r\nvar isArray_1 = require('../util/isArray');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\nfunction onErrorResumeNext() {\r\n    var nextSources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nextSources[_i - 0] = arguments[_i];\r\n    }\r\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\r\n        nextSources = nextSources[0];\r\n    }\r\n    return this.lift(new OnErrorResumeNextOperator(nextSources));\r\n}\r\nexports.onErrorResumeNext = onErrorResumeNext;\r\n/* tslint:enable:max-line-length */\r\nfunction onErrorResumeNextStatic() {\r\n    var nextSources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nextSources[_i - 0] = arguments[_i];\r\n    }\r\n    var source = null;\r\n    if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {\r\n        nextSources = nextSources[0];\r\n    }\r\n    source = nextSources.shift();\r\n    return new FromObservable_1.FromObservable(source, null).lift(new OnErrorResumeNextOperator(nextSources));\r\n}\r\nexports.onErrorResumeNextStatic = onErrorResumeNextStatic;\r\nvar OnErrorResumeNextOperator = (function () {\r\n    function OnErrorResumeNextOperator(nextSources) {\r\n        this.nextSources = nextSources;\r\n    }\r\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\r\n    };\r\n    return OnErrorResumeNextOperator;\r\n}());\r\nvar OnErrorResumeNextSubscriber = (function (_super) {\r\n    __extends(OnErrorResumeNextSubscriber, _super);\r\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\r\n        _super.call(this, destination);\r\n        this.destination = destination;\r\n        this.nextSources = nextSources;\r\n    }\r\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\r\n        var next = this.nextSources.shift();\r\n        if (next) {\r\n            this.add(subscribeToResult_1.subscribeToResult(this, next));\r\n        }\r\n        else {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return OnErrorResumeNextSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/onErrorResumeNext.js\n// module id = 640\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar isArray_1 = require('../util/isArray');\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n */\r\nfunction race() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    // if the only argument is an array, it was most likely called with\r\n    // `pair([obs1, obs2, ...])`\r\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\r\n        observables = observables[0];\r\n    }\r\n    return this.lift.call(raceStatic.apply(void 0, [this].concat(observables)));\r\n}\r\nexports.race = race;\r\nfunction raceStatic() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    // if the only argument is an array, it was most likely called with\r\n    // `pair([obs1, obs2, ...])`\r\n    if (observables.length === 1) {\r\n        if (isArray_1.isArray(observables[0])) {\r\n            observables = observables[0];\r\n        }\r\n        else {\r\n            return observables[0];\r\n        }\r\n    }\r\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\r\n}\r\nexports.raceStatic = raceStatic;\r\nvar RaceOperator = (function () {\r\n    function RaceOperator() {\r\n    }\r\n    RaceOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RaceSubscriber(subscriber));\r\n    };\r\n    return RaceOperator;\r\n}());\r\nexports.RaceOperator = RaceOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RaceSubscriber = (function (_super) {\r\n    __extends(RaceSubscriber, _super);\r\n    function RaceSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.hasFirst = false;\r\n        this.observables = [];\r\n        this.subscriptions = [];\r\n    }\r\n    RaceSubscriber.prototype._next = function (observable) {\r\n        this.observables.push(observable);\r\n    };\r\n    RaceSubscriber.prototype._complete = function () {\r\n        var observables = this.observables;\r\n        var len = observables.length;\r\n        if (len === 0) {\r\n            this.destination.complete();\r\n        }\r\n        else {\r\n            for (var i = 0; i < len && !this.hasFirst; i++) {\r\n                var observable = observables[i];\r\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\r\n                if (this.subscriptions) {\r\n                    this.subscriptions.push(subscription);\r\n                }\r\n                this.add(subscription);\r\n            }\r\n            this.observables = null;\r\n        }\r\n    };\r\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        if (!this.hasFirst) {\r\n            this.hasFirst = true;\r\n            for (var i = 0; i < this.subscriptions.length; i++) {\r\n                if (i !== outerIndex) {\r\n                    var subscription = this.subscriptions[i];\r\n                    subscription.unsubscribe();\r\n                    this.remove(subscription);\r\n                }\r\n            }\r\n            this.subscriptions = null;\r\n        }\r\n        this.destination.next(innerValue);\r\n    };\r\n    return RaceSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.RaceSubscriber = RaceSubscriber;\r\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/race.js\n// module id = 641\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar async_1 = require('../scheduler/async');\r\n/**\r\n * @param scheduler\r\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\r\n * @method timeInterval\r\n * @owner Observable\r\n */\r\nfunction timeInterval(scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    return this.lift(new TimeIntervalOperator(scheduler));\r\n}\r\nexports.timeInterval = timeInterval;\r\nvar TimeInterval = (function () {\r\n    function TimeInterval(value, interval) {\r\n        this.value = value;\r\n        this.interval = interval;\r\n    }\r\n    return TimeInterval;\r\n}());\r\nexports.TimeInterval = TimeInterval;\r\n;\r\nvar TimeIntervalOperator = (function () {\r\n    function TimeIntervalOperator(scheduler) {\r\n        this.scheduler = scheduler;\r\n    }\r\n    TimeIntervalOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new TimeIntervalSubscriber(observer, this.scheduler));\r\n    };\r\n    return TimeIntervalOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TimeIntervalSubscriber = (function (_super) {\r\n    __extends(TimeIntervalSubscriber, _super);\r\n    function TimeIntervalSubscriber(destination, scheduler) {\r\n        _super.call(this, destination);\r\n        this.scheduler = scheduler;\r\n        this.lastTime = 0;\r\n        this.lastTime = scheduler.now();\r\n    }\r\n    TimeIntervalSubscriber.prototype._next = function (value) {\r\n        var now = this.scheduler.now();\r\n        var span = now - this.lastTime;\r\n        this.lastTime = now;\r\n        this.destination.next(new TimeInterval(value, span));\r\n    };\r\n    return TimeIntervalSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeInterval.js\n// module id = 642\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar async_1 = require('../scheduler/async');\r\n/**\r\n * @param scheduler\r\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\r\n * @method timestamp\r\n * @owner Observable\r\n */\r\nfunction timestamp(scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    return this.lift(new TimestampOperator(scheduler));\r\n}\r\nexports.timestamp = timestamp;\r\nvar Timestamp = (function () {\r\n    function Timestamp(value, timestamp) {\r\n        this.value = value;\r\n        this.timestamp = timestamp;\r\n    }\r\n    return Timestamp;\r\n}());\r\nexports.Timestamp = Timestamp;\r\n;\r\nvar TimestampOperator = (function () {\r\n    function TimestampOperator(scheduler) {\r\n        this.scheduler = scheduler;\r\n    }\r\n    TimestampOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new TimestampSubscriber(observer, this.scheduler));\r\n    };\r\n    return TimestampOperator;\r\n}());\r\nvar TimestampSubscriber = (function (_super) {\r\n    __extends(TimestampSubscriber, _super);\r\n    function TimestampSubscriber(destination, scheduler) {\r\n        _super.call(this, destination);\r\n        this.scheduler = scheduler;\r\n    }\r\n    TimestampSubscriber.prototype._next = function (value) {\r\n        var now = this.scheduler.now();\r\n        this.destination.next(new Timestamp(value, now));\r\n    };\r\n    return TimestampSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timestamp.js\n// module id = 643\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AsyncAction_1 = require('./AsyncAction');\r\nvar AsyncScheduler_1 = require('./AsyncScheduler');\r\nvar VirtualTimeScheduler = (function (_super) {\r\n    __extends(VirtualTimeScheduler, _super);\r\n    function VirtualTimeScheduler(SchedulerAction, maxFrames) {\r\n        var _this = this;\r\n        if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }\r\n        if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }\r\n        _super.call(this, SchedulerAction, function () { return _this.frame; });\r\n        this.maxFrames = maxFrames;\r\n        this.frame = 0;\r\n        this.index = -1;\r\n    }\r\n    /**\r\n     * Prompt the Scheduler to execute all of its queued actions, therefore\r\n     * clearing its queue.\r\n     * @return {void}\r\n     */\r\n    VirtualTimeScheduler.prototype.flush = function () {\r\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\r\n        var error, action;\r\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\r\n            if (error = action.execute(action.state, action.delay)) {\r\n                break;\r\n            }\r\n        }\r\n        if (error) {\r\n            while (action = actions.shift()) {\r\n                action.unsubscribe();\r\n            }\r\n            throw error;\r\n        }\r\n    };\r\n    VirtualTimeScheduler.frameTimeFactor = 10;\r\n    return VirtualTimeScheduler;\r\n}(AsyncScheduler_1.AsyncScheduler));\r\nexports.VirtualTimeScheduler = VirtualTimeScheduler;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar VirtualAction = (function (_super) {\r\n    __extends(VirtualAction, _super);\r\n    function VirtualAction(scheduler, work, index) {\r\n        if (index === void 0) { index = scheduler.index += 1; }\r\n        _super.call(this, scheduler, work);\r\n        this.scheduler = scheduler;\r\n        this.work = work;\r\n        this.index = index;\r\n        this.active = true;\r\n        this.index = scheduler.index = index;\r\n    }\r\n    VirtualAction.prototype.schedule = function (state, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        if (!this.id) {\r\n            return _super.prototype.schedule.call(this, state, delay);\r\n        }\r\n        this.active = false;\r\n        // If an action is rescheduled, we save allocations by mutating its state,\r\n        // pushing it to the end of the scheduler queue, and recycling the action.\r\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\r\n        // must be immutable so they can be inspected later.\r\n        var action = new VirtualAction(this.scheduler, this.work);\r\n        this.add(action);\r\n        return action.schedule(state, delay);\r\n    };\r\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        this.delay = scheduler.frame + delay;\r\n        var actions = scheduler.actions;\r\n        actions.push(this);\r\n        actions.sort(VirtualAction.sortActions);\r\n        return true;\r\n    };\r\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        return undefined;\r\n    };\r\n    VirtualAction.prototype._execute = function (state, delay) {\r\n        if (this.active === true) {\r\n            return _super.prototype._execute.call(this, state, delay);\r\n        }\r\n    };\r\n    VirtualAction.sortActions = function (a, b) {\r\n        if (a.delay === b.delay) {\r\n            if (a.index === b.index) {\r\n                return 0;\r\n            }\r\n            else if (a.index > b.index) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (a.delay > b.delay) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return -1;\r\n        }\r\n    };\r\n    return VirtualAction;\r\n}(AsyncAction_1.AsyncAction));\r\nexports.VirtualAction = VirtualAction;\r\n//# sourceMappingURL=VirtualTimeScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/VirtualTimeScheduler.js\n// module id = 644\n// module chunks = 4","\"use strict\";\r\nvar AsapAction_1 = require('./AsapAction');\r\nvar AsapScheduler_1 = require('./AsapScheduler');\r\n/**\r\n *\r\n * Asap Scheduler\r\n *\r\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\r\n *\r\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\r\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\r\n * code to end and then it will try to execute given task as fast as possible.\r\n *\r\n * `asap` scheduler will do its best to minimize time between end of currently executing code\r\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\r\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\r\n * some (although minimal) unwanted delay.\r\n *\r\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\r\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\r\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\r\n * as soon as possible, `asap` scheduler is your best bet.\r\n *\r\n * @example <caption>Compare async and asap scheduler</caption>\r\n *\r\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\r\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\r\n *\r\n * // Logs:\r\n * // \"asap\"\r\n * // \"async\"\r\n * // ... but 'asap' goes first!\r\n *\r\n * @static true\r\n * @name asap\r\n * @owner Scheduler\r\n */\r\nexports.asap = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);\r\n//# sourceMappingURL=asap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/asap.js\n// module id = 645\n// module chunks = 4","\"use strict\";\r\nvar SubscriptionLog = (function () {\r\n    function SubscriptionLog(subscribedFrame, unsubscribedFrame) {\r\n        if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }\r\n        this.subscribedFrame = subscribedFrame;\r\n        this.unsubscribedFrame = unsubscribedFrame;\r\n    }\r\n    return SubscriptionLog;\r\n}());\r\nexports.SubscriptionLog = SubscriptionLog;\r\n//# sourceMappingURL=SubscriptionLog.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/SubscriptionLog.js\n// module id = 646\n// module chunks = 4","\"use strict\";\r\nvar SubscriptionLog_1 = require('./SubscriptionLog');\r\nvar SubscriptionLoggable = (function () {\r\n    function SubscriptionLoggable() {\r\n        this.subscriptions = [];\r\n    }\r\n    SubscriptionLoggable.prototype.logSubscribedFrame = function () {\r\n        this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));\r\n        return this.subscriptions.length - 1;\r\n    };\r\n    SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {\r\n        var subscriptionLogs = this.subscriptions;\r\n        var oldSubscriptionLog = subscriptionLogs[index];\r\n        subscriptionLogs[index] = new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());\r\n    };\r\n    return SubscriptionLoggable;\r\n}());\r\nexports.SubscriptionLoggable = SubscriptionLoggable;\r\n//# sourceMappingURL=SubscriptionLoggable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/SubscriptionLoggable.js\n// module id = 647\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n/**\r\n * An error thrown when duetime elapses.\r\n *\r\n * @see {@link timeout}\r\n *\r\n * @class TimeoutError\r\n */\r\nvar TimeoutError = (function (_super) {\r\n    __extends(TimeoutError, _super);\r\n    function TimeoutError() {\r\n        var err = _super.call(this, 'Timeout has occurred');\r\n        this.name = err.name = 'TimeoutError';\r\n        this.stack = err.stack;\r\n        this.message = err.message;\r\n    }\r\n    return TimeoutError;\r\n}(Error));\r\nexports.TimeoutError = TimeoutError;\r\n//# sourceMappingURL=TimeoutError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/TimeoutError.js\n// module id = 648\n// module chunks = 4","\"use strict\";\r\nfunction applyMixins(derivedCtor, baseCtors) {\r\n    for (var i = 0, len = baseCtors.length; i < len; i++) {\r\n        var baseCtor = baseCtors[i];\r\n        var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);\r\n        for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {\r\n            var name_1 = propertyKeys[j];\r\n            derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];\r\n        }\r\n    }\r\n}\r\nexports.applyMixins = applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/applyMixins.js\n// module id = 649\n// module chunks = 4","\"use strict\";\r\n/* tslint:disable:no-empty */\r\nfunction noop() { }\r\nexports.noop = noop;\r\n//# sourceMappingURL=noop.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/noop.js\n// module id = 650\n// module chunks = 4","import { TypecodesActions } from './typecodes/typecodes-actions';\r\nimport { TypecodesEffects } from './typecodes/typecodes-effect';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { TypecodesService } from './typecodes/typecodes.service';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { NgModule }      from '@angular/core';\r\n\r\n@NgModule({\r\n    imports: [ CommonModule,\r\n     EffectsModule.run(TypecodesEffects)],\r\n    declarations: [],\r\n    providers: [ TypecodesService, TypecodesActions ]\r\n})\r\n\r\nexport class CoreModule { }\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/core/core.module.ts","import { TypecodesService } from './typecodes.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { TypecodesActions } from './typecodes-actions';\r\nimport { Effect, Actions } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Action } from '@ngrx/store';\r\n@Injectable()\r\nexport class TypecodesEffects {\r\n    constructor(private actions$: Actions,\r\n    private typecodesService: TypecodesService,\r\n    private typecodesActions: TypecodesActions) {\r\n        \r\n    }\r\n\r\n    @Effect() loadTypecodes$: Observable<Action> = this.actions$\r\n        .ofType(TypecodesActions.LOAD_ALL_TYPECODES)\r\n        .switchMap(action => this.typecodesService.getTypecodes())\r\n        .map(typecodes => this.typecodesActions.loadTypecodesSuccess(typecodes));\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/core/typecodes/typecodes-effect.ts","import { Component, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\r\nimport { Tab } from './tab.component';\r\n\r\n@Component({\r\n  selector: 'tabs',\r\n  template: `\r\n    <ul class=\"nav nav-tabs\" id=\"requesterTabs\" role=\"tablist\">\r\n      <li *ngFor=\"let tab of tabs\" [class.active]=\"tab.active\" class=\"nav-item\">\r\n        <a class=\"nav-link\" (click)=\"selectTab(tab)\">{{tab.tabTitle}}</a>\r\n      </li>\r\n    </ul>\r\n    <ng-content></ng-content>\r\n  `\r\n})\r\nexport class Tabs implements AfterContentInit {\r\n  @ContentChildren(Tab) tabs: QueryList<Tab>;\r\n  // contentChildren are set\r\n  ngAfterContentInit() {\r\n    // get all active tabs\r\n    let activeTabs = this.tabs.filter((tab) => tab.active);\r\n    // if there is no active tab set, activate the first\r\n    if (activeTabs.length === 0) {\r\n      this.selectTab(this.tabs.first);\r\n    }\r\n  }\r\n  selectTab(tab: Tab){\r\n    // deactivate all tabs\r\n    this.tabs.toArray().forEach(t => t.active = false);\r\n    // activate the tab the user has clicked on.\r\n    tab.active = true;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/layout/tabs/tabs.component.ts","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TicketActivityModel } from \"app/tickets/models/ticket-activity.model\";\r\n\r\n@Component({\r\n    selector: 'ticket-activity',\r\n    template: require('./ticket-activity.component.html'),\r\n    styles: [require('./ticket-activity.component.scss')]\r\n})\r\n\r\nexport class TicketActivity implements OnInit {\r\n    @Input()\r\n    activity: TicketActivityModel[];\r\n    ngOnInit() {\r\n        \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket-activity/ticket-activity.component.ts","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { TicketCommentsModel } from '../models/ticket-comments.model';\r\n\r\n@Component({\r\n    selector: 'ticket-comments',\r\n    template: require('./ticket-comments.component.html')\r\n})\r\n\r\nexport class TicketComments implements OnInit {\r\n    @Input()\r\n    comments: TicketCommentsModel[];\r\n    @Output()\r\n    postComment = new EventEmitter();\r\n    newComment: string;\r\n\r\n    ngOnInit() {\r\n        // this.comments = [\r\n        //     { userName: 'Tina Sanders',\r\n        //         createdDateTime: 'February 22, 2014 at 01:59 PM', \r\n        //         comment: 'comment for the comments'},\r\n        //        { userName: 'John Doe',\r\n        //         createdDateTime: 'March 14, 2017 at 10:22 PM', \r\n        //         comment: 'another comment for the comments'}\r\n        //         ];\r\n    }\r\n\r\n    postCommentInternally(newComment: string) {\r\n        const comment: TicketCommentsModel = {\r\n        userName: \"Princess Leia\",\r\n        //createdDateTime: moment().format('MM/DD/YY'),\r\n        comment: newComment,\r\n        isVisible: false\r\n    };\r\n            this.postComment.next(newComment);\r\n            this.newComment = \"\";\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket-comments/ticket-comments.component.ts","import { TicketService } from '../ticket.service';\r\nimport { TicketModel, TicketTestModel } from '../models/ticket.model';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport * as types from '../models/types.model';\r\nimport { TypeCode } from '../models/type-code';\r\nimport { TicketDetailModel } from '../models/ticket-detail.model';\r\nimport { TypecodesService } from \"app/core/typecodes/typecodes.service\";\r\nimport { AllTypeCodesModel } from \"app/core/typecodes/typecode.model\";\r\n\r\n\r\n@Component({\r\n  selector: 'ticket-detail',\r\n  template: require('./ticket-detail.component.html')\r\n})\r\nexport class TicketDetail implements OnInit {\r\n    @Input()\r\n    ticket: TicketDetailModel;\r\n    @Input()\r\n    typecodes: AllTypeCodesModel;\r\n   test = [{text:'hardware', children: ['computer','monitor','mouse','keyboard']}, {text:'software', children:['email', 'intranet', 'office', 'finance', 'filesite']}];\r\n    submitted: boolean;\r\n    // statusTypes: TypeCode[];\r\n    // status = ['Open', 'In Progress', 'Closed'];\r\n    subComponent = 'email';\r\n\r\n   constructor(private typecodeService: TypecodesService) {  }\r\n\r\n    ngOnInit() {\r\n      this.ticket.subComponent = 'email';\r\n      console.log(this.ticket.subComponent);\r\n      // this.typecodeService.getTypecodes()\r\n      // .map(x => this.test = x)\r\n      // .subscribe(value => console.log(value));\r\n      //console.log(this.test);\r\n      // this.statusTypes = this.getStatusTypeList();\r\n      // console.log(this.statusTypes);\r\n    }\r\n\r\n// getStatusTypeList(){\r\n//   return types.statusType;\r\n// }\r\n    save()\r\n      {\r\n        this.submitted = true;\r\n        console.log(this.ticket);\r\n        alert('Ticket was updated!');\r\n      }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket-detail/ticket-detail.component.ts","import { Input,Component, OnInit } from '@angular/core';\r\nimport { TicketModel } from '../models/ticket.model';\r\nimport { TicketService } from '../ticket.service';\r\nimport { TicketRequesterModel } from \"app/tickets/models/ticket-requester.model\";\r\n\r\n@Component({\r\n    selector: 'ticket-requester',\r\n    template: require('./ticket-requester.component.html'),\r\n    styles: [require('./ticket-requester.style.scss')]\r\n})\r\n\r\nexport class TicketRequester implements OnInit {\r\n    @Input()\r\n    requester: TicketRequesterModel;\r\n\r\n    ngOnInit() {\r\n         this.requester = {\r\n             firstName: 'Tina',\r\n             lastName: 'Sanders',\r\n             email: 'tina.sanders@sedgwicklaw.com',\r\n             phone: '111.111.1111',\r\n             location: 'Kansas City'\r\n         };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket-requester/ticket-requester.component.ts","import { TicketService } from '../ticket.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions } from \"@ngrx/effects\";\r\nimport { TicketActions } from './ticket-actions';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Action } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class TicketEffects {\r\n    constructor(private actions$: Actions,\r\n    private ticketService: TicketService,\r\n    private ticketActions: TicketActions) {\r\n        \r\n    }\r\n\r\n    @Effect() getTicket$: Observable<Action> = this.actions$\r\n        .ofType(TicketActions.GET_TICKET_BY_ID)\r\n        .switchMap(action => this.ticketService.getTicketDetailById(action.payload))\r\n        .map(ticket => this.ticketActions.getTicket(ticket));\r\n\r\n   @Effect() postComment$: Observable<Action> = this.actions$\r\n       .ofType(TicketActions.POST_COMMENT)\r\n       .switchMap(action => this.ticketService.postTicketComment(action.payload))\r\n    //    .map(comment => this.ticketActions.postComment(comment));\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket-store/ticket-effects.ts","import { TypecodesActions } from '../core/typecodes/typecodes-actions';\r\nimport { TicketCommentsModel } from './models/ticket-comments.model';\r\nimport { TicketActions } from './ticket-store/ticket-actions';\r\nimport { Store } from '@ngrx/store';\r\nimport { TicketModel } from './models/ticket.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApplicationState } from '../application.state';\r\nimport { TicketActivityModel } from 'app/tickets/models/ticket-activity.model';\r\nimport { TicketRequesterModel } from './models/ticket-requester.model';\r\nimport { TicketDetailModel } from './models/ticket-detail.model';\r\nimport { AllTypeCodesModel } from 'app/core/typecodes/typecode.model';\r\n\r\n@Component({\r\n    selector: 'ticket',\r\n    template: require('./ticket.component.html')\r\n})\r\n\r\nexport class Ticket implements OnInit {\r\n    ticketDetail$: Observable<TicketDetailModel>;\r\n    typecodes$: Observable<AllTypeCodesModel>;\r\n    ticketRequester$: Observable<TicketRequesterModel>;\r\n    ticketActivity$: Observable<TicketActivityModel[]>;\r\n    ticketComments$: Observable<TicketCommentsModel[]>;\r\n    ticketId: number = 5;\r\n\r\n    constructor(private store: Store<ApplicationState>,\r\n        private ticketActions: TicketActions, private typecodesActions: TypecodesActions) {\r\n\r\n        this.ticketComments$ = store.select(this.ticketCommentsSelector);\r\n        this.ticketActivity$ = store.select(this.ticketActivitySelector);\r\n        this.ticketRequester$ = store.select(this.ticketRequesterSelector);\r\n        this.ticketDetail$ = store.select(this.ticketDetailSelector);\r\n        this.typecodes$ = store.select(this.typecodesSelector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.store.dispatch(this.ticketActions.getTicketById(this.ticketId));\r\n        this.store.dispatch(this.typecodesActions.getAllTypecodes());\r\n\r\n    }\r\n\r\n    typecodesSelector(state: ApplicationState): AllTypeCodesModel {\r\n        if (state.typecodesStoreData) {\r\n            return {\r\n                itComponentTypes: state.typecodesStoreData.components,\r\n                priorityTypes: state.typecodesStoreData.priorities,\r\n                requestTypes: state.typecodesStoreData.requests,\r\n                sourceTypes: state.typecodesStoreData.sources,\r\n                statusTypes: state.typecodesStoreData.statuses,\r\n                subcomponentTypes: state.typecodesStoreData.subComponents\r\n            };\r\n        }\r\n    }\r\n\r\n    ticketCommentsSelector(state: ApplicationState): TicketCommentsModel[] {\r\n        if (state.ticketStoreData) {\r\n            return state.ticketStoreData.ticketComments;\r\n        }\r\n        return [];\r\n    }\r\n    ticketDetailSelector(state: ApplicationState): TicketDetailModel {\r\n        if (state.ticketStoreData) {\r\n            return state.ticketStoreData.ticketDetail;\r\n        }\r\n        return {};\r\n    }\r\n\r\n    ticketActivitySelector(state: ApplicationState): TicketActivityModel[] {\r\n        if (state.ticketStoreData) {\r\n            return state.ticketStoreData.ticketActivity;\r\n        }\r\n        return [];\r\n    }\r\n\r\n    ticketRequesterSelector(state: ApplicationState): TicketRequesterModel {\r\n        if (state.ticketStoreData) {\r\n            return state.ticketStoreData.ticketRequester;\r\n        }\r\n        return {};\r\n    }\r\n\r\n    onPostComment(newComment: string) {\r\n\r\n        this.store.dispatch(this.ticketActions.postComment({ ticketId: this.ticketId, comment: newComment }))\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/ticket.component.ts","import { CoreModule } from '../core/core.module';\r\nimport { TicketActions } from './ticket-store/ticket-actions';\r\nimport { TicketRequester } from './ticket-requester/ticket-requester.component';\r\nimport { TicketService } from './ticket.service';\r\nimport { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TicketDetail } from './ticket-detail/ticket-detail.component';\r\nimport { Ticket } from './ticket.component';\r\nimport { LayoutModule } from '../layout/layout.module';\r\nimport { Tab } from '../layout/tabs/tab.component';\r\nimport { Tabs } from '../layout/tabs/tabs.component';\r\nimport { TicketComments } from './ticket-comments/ticket-comments.component';\r\nimport { TicketActivity } from './ticket-activity/ticket-activity.component';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { TicketEffects } from './ticket-store/ticket-effects';\r\n\r\nexport const routes = [\r\n  { path: '', redirectTo: 'ticket', pathMatch: 'full' },\r\n  { path: 'ticket', component: Ticket },\r\n  {path: 'ticket-detail', component: TicketDetail}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n   CommonModule,\r\n   CoreModule,\r\n   FormsModule,\r\n  EffectsModule.run(TicketEffects),\r\n   RouterModule.forChild(routes)\r\n   ],\r\n  declarations: [ TicketDetail,\r\n                  Ticket,\r\n                  TicketComments,\r\n                  TicketActivity,\r\n                  TicketRequester,\r\n                  Tab,\r\n                  Tabs ],\r\n  providers: [ TicketService, TicketActions ]\r\n})\r\nexport class TicketsModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular-router-loader/src?loader=system&genDir=compiled/src/app&aot=false!./src/app/tickets/tickets.module.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { NgModule, Injector, APP_BOOTSTRAP_LISTENER } from '@angular/core';\r\nimport { Actions } from './actions';\r\nimport { EffectsSubscription, effects } from './effects-subscription';\r\nimport { runAfterBootstrapEffects, afterBootstrapEffects } from './bootstrap-listener';\r\nvar EffectsModule = EffectsModule_1 = (function () {\r\n    function EffectsModule(effectsSubscription) {\r\n        this.effectsSubscription = effectsSubscription;\r\n    }\r\n    EffectsModule.run = function (type) {\r\n        return {\r\n            ngModule: EffectsModule_1,\r\n            providers: [\r\n                EffectsSubscription,\r\n                type,\r\n                { provide: effects, useExisting: type, multi: true }\r\n            ]\r\n        };\r\n    };\r\n    EffectsModule.runAfterBootstrap = function (type) {\r\n        return {\r\n            ngModule: EffectsModule_1,\r\n            providers: [\r\n                type,\r\n                { provide: afterBootstrapEffects, useExisting: type, multi: true }\r\n            ]\r\n        };\r\n    };\r\n    return EffectsModule;\r\n}());\r\nEffectsModule = EffectsModule_1 = __decorate([\r\n    NgModule({\r\n        providers: [\r\n            Actions,\r\n            EffectsSubscription,\r\n            {\r\n                provide: APP_BOOTSTRAP_LISTENER,\r\n                multi: true,\r\n                deps: [Injector, EffectsSubscription],\r\n                useFactory: runAfterBootstrapEffects\r\n            }\r\n        ]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [EffectsSubscription])\r\n], EffectsModule);\r\nexport { EffectsModule };\r\nvar EffectsModule_1;\r\n//# sourceMappingURL=effects.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/effects.module.js\n// module id = 672\n// module chunks = 4","export function toPayload(action) {\r\n    return action.payload;\r\n}\r\n//# sourceMappingURL=util.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngrx/effects/src/util.js\n// module id = 673\n// module chunks = 4","module.exports = \"/***********************************/\\n/**          NEWS LIST           **/\\n/**********************************/\\n.news-list {\\n  margin-bottom: 0;\\n  padding-left: 0; }\\n  .news-list li {\\n    list-style: none;\\n    box-sizing: content-box;\\n    border-top: 1px solid #eeeeee;\\n    padding: 12px;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-out; }\\n    .news-list li:hover {\\n      background: #f6f6f6; }\\n    .news-list li:last-child {\\n      margin-bottom: -10px; }\\n  .news-list img,\\n  .news-list .icon {\\n    float: left;\\n    height: 30px;\\n    width: 30px; }\\n  .news-list .icon {\\n    line-height: 30px;\\n    border-radius: 50%;\\n    text-align: center;\\n    font-size: 18px; }\\n  .news-list .news-item-info {\\n    margin-left: 62px;\\n    /*50 + 12px padding*/ }\\n  .news-list .name {\\n    text-transform: uppercase; }\\n    .news-list .name a {\\n      text-decoration: none; }\\n      .news-list .name a:hover {\\n        color: #218BC3; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-activity/ticket-activity.component.scss\n// module id = 699\n// module chunks = 4","module.exports = \".contacts {\\n  display: block;\\n  margin-top: 25px;\\n  margin-left: -10px;\\n  margin-right: -10px;\\n  padding-left: 0;\\n  text-align: center;\\n  position: relative; }\\n  .contacts > li {\\n    display: inline-block;\\n    line-height: 2.2;\\n    list-style: none;\\n    text-align: left;\\n    margin: 0 10px; }\\n    @media (min-width: 992px) {\\n      .contacts > li {\\n        width: 150px;\\n        white-space: nowrap; } }\\n\\n.test {\\n  list-style-type: none;\\n  margin-top: 25px;\\n  margin-left: -10px;\\n  margin-right: -10px;\\n  padding-left: 0; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-requester/ticket-requester.style.scss\n// module id = 700\n// module chunks = 4","module.exports = \"<section class=\\\"widget\\\">\\r\\n    <div class=\\\"widget-body no-padding\\\">\\r\\n        <ul *ngFor=\\\"let act of activity\\\" class=\\\"news-list stretchable\\\">\\r\\n            <li>\\r\\n                <span class=\\\"icon text-white\\\" [class.bg-danger]=\\\"act.isComment\\\" [class.bg-info]=\\\"act.isAssigned\\\" [class.bg-success]=\\\"act.isCreated\\\">\\r\\n                                    <i class=\\\"fa\\\" [class.fa-comment]=\\\"act.isComment\\\" [class.fa-user]=\\\"act.isAssigned\\\" [class.fa-pencil-square]=\\\"act.isCreated\\\"></i>\\r\\n                                </span>\\r\\n                <div class=\\\"news-item-info\\\">\\r\\n                    <h5 class=\\\"name no-margin mb-xs\\\"><a href=\\\"#\\\">{{act.userName}}</a></h5>\\r\\n                    <p class=\\\"fs-mini\\\">\\r\\n                        {{act.activity}}\\r\\n                    </p>\\r\\n                    <time class=\\\"help-block\\\">{{act.createdDate}}</time>\\r\\n                </div>\\r\\n            </li>\\r\\n            <!--<li>\\r\\n                <span class=\\\"icon bg-info text-white\\\">\\r\\n                                    <i class=\\\"fa fa-user\\\"></i>\\r\\n                                </span>\\r\\n                <div class=\\\"news-item-info\\\">\\r\\n                    <h5 class=\\\"name no-margin mb-xs\\\"><a href=\\\"#\\\">Help Desk assigned to John Doe</a></h5>\\r\\n                    <p class=\\\"fs-mini\\\">\\r\\n                        Lorem ipsum dolor sit amet\\r\\n                    </p>\\r\\n                    <time class=\\\"help-block\\\">Sep 25, 11:59</time>\\r\\n                </div>\\r\\n            </li>\\r\\n            <li>\\r\\n                <span class=\\\"icon bg-success text-white\\\">\\r\\n                                    <i class=\\\"fa fa-pencil-square\\\"></i>\\r\\n                                </span>\\r\\n                <div class=\\\"news-item-info\\\">\\r\\n                    <h5 class=\\\"name no-margin mb-xs\\\"><a href=\\\"#\\\">Help Desk created a ticket for Tina Sanders</a></h5>\\r\\n                    <p class=\\\"fs-mini\\\">\\r\\n                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\\r\\n                    </p>\\r\\n                    <time class=\\\"help-block\\\">Mar 20, 18:46</time>\\r\\n                </div>\\r\\n            </li>-->\\r\\n        </ul>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-activity/ticket-activity.component.html\n// module id = 707\n// module chunks = 4","module.exports = \"<section class=\\\"widget\\\" id=\\\"ticketComments\\\">\\r\\n<div class=\\\"widget-body no-padding\\\">\\r\\n    <div class=\\\"list-group list-group-sm\\\">\\r\\n        <div *ngFor=\\\"let comment of comments\\\" class=\\\"list-group-item\\\"> \\r\\n        <h6 class=\\\"event-heading fw-normal\\\">{{comment.userName}}</h6>\\r\\n        <p class=\\\"text-muted\\\"><i *ngIf=!comment.isVisible class=\\\"fa fa-lock\\\"></i> {{comment.createdDateTime}}</p>\\r\\n        <p class=\\\"fs-mini\\\">\\r\\n          {{comment.comment}}\\r\\n        </p>\\r\\n        </div>\\r\\n    </div>\\r\\n    </div> \\r\\n    <form class=\\\"mt-2\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"sr-only\\\" for=\\\"newComment\\\">Comment</label>\\r\\n        <textarea class=\\\"form-control\\\" id=\\\"newComment\\\" placeholder=\\\"post comment...\\\" rows=\\\"3\\\" [(ngModel)]=\\\"newComment\\\" name=\\\"newComment\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"btn-toolbar\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Share With Requester</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm pull-right\\\" (click)=\\\"postCommentInternally(newComment)\\\">Post Internally</button>\\r\\n        </div>\\r\\n    </form>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-comments/ticket-comments.component.html\n// module id = 708\n// module chunks = 4","module.exports = \"<!--<div class=\\\"col-xs-12\\\">-->\\r\\n  <section class=\\\"widget\\\">\\r\\n    <div class=\\\"widget-body\\\">\\r\\n      <h3>Ticket Detail</h3>\\r\\n      <form (ngSubmit)=\\\"save()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <fieldset *ngIf=\\\"false\\\">\\r\\n              <label for=\\\"component\\\">Component</label>\\r\\n              <ol class=\\\"breadcrumb\\\">\\r\\n                <li class=\\\"breadcrumb-item \\\">{{ticket.component}}</li>\\r\\n                <li class=\\\"breadcrumb-item \\\">{{ticket.subComponent}}</li>\\r\\n              </ol>\\r\\n            </fieldset>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              \\r\\n              <label for=\\\"componentSelector\\\">Component</label>\\r\\n              <select  id=\\\"componentSelector\\\" class=\\\"form-control input-group-sm\\\" [(ngModel)]=\\\"subComponent\\\" name=\\\"componentSelector\\\" [disabled]=false>\\r\\n                <template ngFor let-item [ngForOf]=\\\"test\\\">\\r\\n                <optgroup *ngIf=\\\"item.children\\\" label=\\\"{{item.text}}\\\">\\r\\n        <option *ngFor=\\\"let child of item.children\\\" [ngValue]=\\\"child\\\">{{child}}</option>\\r\\n                </optgroup>\\r\\n                <!--<optgroup label=\\\"software\\\">\\r\\n        <option *ngFor=\\\"let soft of software\\\" [ngValue]=\\\"soft\\\">{{soft}}</option>\\r\\n                </optgroup>-->\\r\\n                </template>\\r\\n      </select>\\r\\n              \\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"category\\\" class=\\\"\\\">Category</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control input-group-sm input-no-border\\\" id=\\\"category\\\" [(ngModel)]=\\\"ticket.category\\\" name=\\\"category\\\">\\r\\n            </div>\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n              <label for=\\\"category\\\" class=\\\"\\\">Category</label>\\r\\n              <select id=\\\"category\\\" class=\\\"form-control input-group-sm\\\" [(ngModel)]=\\\"ticket.category\\\" name=\\\"category\\\" [disabled]=false>\\r\\n        <option *ngFor=\\\"let category of typecodes.categoryTypes\\\" [ngValue]=\\\"category.name\\\">{{category.name}}</option>\\r\\n      </select>\\r\\n            </div>-->\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n              <label for=\\\"priority\\\" class=\\\"\\\">Priority</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control input-group-sm input-no-border\\\" id=\\\"priority\\\" [(ngModel)]=\\\"ticket.priority\\\" name=\\\"priority\\\">\\r\\n            </div>-->\\r\\n             <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"priority\\\" class=\\\"\\\">Priority</label>\\r\\n              <select id=\\\"priority\\\" class=\\\"form-control input-group-sm\\\" [(ngModel)]=\\\"ticket.priority\\\" name=\\\"priority\\\" [disabled]=false>\\r\\n        <option *ngFor=\\\"let priority of typecodes.priorityTypes\\\" [ngValue]=\\\"priority.name\\\">{{priority.name}}</option>\\r\\n      </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"status\\\" class=\\\"\\\">Status</label>\\r\\n              <select id=\\\"status\\\" class=\\\"form-control input-group-sm\\\" [(ngModel)]=\\\"ticket.status\\\" name=\\\"status\\\" [disabled]=false>\\r\\n        <option *ngFor=\\\"let status of typecodes.statusTypes\\\" [ngValue]=\\\"status.name\\\">{{status.name}}</option>\\r\\n      </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col-xs-4\\\">\\r\\n            <!--<div class=\\\"form-group\\\">\\r\\n              <label for=\\\"source\\\" class=\\\"\\\">Source</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control input-group-sm input-no-border\\\" id=\\\"priority\\\" [(ngModel)]=\\\"ticket.source\\\" name=\\\"source\\\">\\r\\n            </div>-->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"source\\\" class=\\\"\\\">Source</label>\\r\\n              <select id=\\\"source\\\" class=\\\"form-control input-group-sm\\\" [(ngModel)]=\\\"ticket.source\\\" name=\\\"source\\\" [disabled]=false>\\r\\n        <option *ngFor=\\\"let source of typecodes.sourceTypes\\\" [ngValue]=\\\"source.name\\\">{{source.name}}</option>\\r\\n      </select>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"createdDate\\\" class=\\\"\\\">Date Reported</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control input-group-sm input-no-border\\\" id=\\\"createdDate\\\" [(ngModel)]=\\\"ticket.createdDate\\\"\\r\\n                name=\\\"createdDate\\\">\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col-xs-12\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"description\\\" class=\\\"\\\">Description</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control input-group-sm input-no-border\\\" id=\\\"description\\\" [(ngModel)]=\\\"ticket.description\\\"\\r\\n                name=\\\"description\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-actions\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"offset-md-4 col-md-7\\\">\\r\\n              <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save Changes</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-inverse\\\">Cancel</button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </section>\\r\\n<!--</div>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-detail/ticket-detail.component.html\n// module id = 709\n// module chunks = 4","module.exports = \"<!--<div class=\\\"row\\\">-->\\r\\n    <div >\\r\\n        <section class=\\\"widget\\\">\\r\\n            <div class=\\\"widget-body\\\">\\r\\n\\r\\n                <h5 class=\\\"fw-normal\\\">{{requester.firstName}} <span class=\\\"fw-semi-bold\\\">{{requester.lastName}}</span></h5>\\r\\n                <p>UI/UX designer</p>\\r\\n                <ul class=\\\"test\\\">\\r\\n                    <li><i class=\\\"fa fa-phone fa-fw mr-xs\\\"></i>{{requester.phone}}</li>\\r\\n                    <li><i class=\\\"fa fa-envelope fa-fw mr-xs\\\"></i><a href=\\\"#\\\">{{requester.email}}</a></li>\\r\\n                    <li><i class=\\\"fa fa-map-marker fa-fw mr-xs\\\"></i>{{requester.location}}</li>\\r\\n                </ul>\\r\\n\\r\\n            </div>\\r\\n        </section>\\r\\n    </div>\\r\\n<!--</div>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket-requester/ticket-requester.component.html\n// module id = 710\n// module chunks = 4","module.exports = \"<!--<ol class=\\\"breadcrumb\\\">\\r\\n  <li class=\\\"breadcrumb-item\\\">YOU ARE HERE</li>\\r\\n  <li class=\\\"breadcrumb-item active\\\">Ticket Detail</li>\\r\\n</ol>\\r\\n<h1 class=\\\"page-title\\\">Ticket Detail</h1>-->\\r\\n<div class=\\\"row\\\">\\r\\n <div class=\\\"col-md-6\\\">\\r\\n   <tabs>\\r\\n     <tab tabTitle=\\\"Comments\\\"><ticket-comments [comments]=\\\"ticketComments$ | async\\\" (postComment)=\\\"onPostComment($event)\\\"></ticket-comments></tab>\\r\\n    <tab tabTitle=\\\"Activity\\\"><ticket-activity [activity]=\\\"ticketActivity$ | async\\\"></ticket-activity></tab>\\r\\n   </tabs>\\r\\n </div>\\r\\n<div class=\\\"col-md-6\\\">\\r\\n  <tabs>\\r\\n    <tab tabTitle=\\\"Requester\\\"><ticket-requester [requester]=\\\"ticketRequester$ | async\\\"></ticket-requester></tab>\\r\\n    <tab tabTitle=\\\"Requester Assets\\\"><section class=\\\"widget\\\" widget style=\\\"min-height: 200px\\\">coming soon</section></tab>\\r\\n  </tabs>\\r\\n  <ticket-detail [ticket]=\\\"ticketDetail$ | async\\\" [typecodes]=\\\"typecodes$ | async\\\"></ticket-detail>\\r\\n</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/tickets/ticket.component.html\n// module id = 711\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bindCallback_1 = require('../../observable/bindCallback');\r\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\r\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/bindCallback.js\n// module id = 712\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bindNodeCallback_1 = require('../../observable/bindNodeCallback');\r\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\r\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/bindNodeCallback.js\n// module id = 713\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar combineLatest_1 = require('../../observable/combineLatest');\r\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatest;\r\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/combineLatest.js\n// module id = 714\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar concat_1 = require('../../observable/concat');\r\nObservable_1.Observable.concat = concat_1.concat;\r\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/concat.js\n// module id = 715\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar defer_1 = require('../../observable/defer');\r\nObservable_1.Observable.defer = defer_1.defer;\r\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/defer.js\n// module id = 716\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../../Observable');\r\nvar ajax_1 = require('../../../observable/dom/ajax');\r\nObservable_1.Observable.ajax = ajax_1.ajax;\r\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/dom/ajax.js\n// module id = 717\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../../Observable');\r\nvar webSocket_1 = require('../../../observable/dom/webSocket');\r\nObservable_1.Observable.webSocket = webSocket_1.webSocket;\r\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/dom/webSocket.js\n// module id = 718\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar empty_1 = require('../../observable/empty');\r\nObservable_1.Observable.empty = empty_1.empty;\r\n//# sourceMappingURL=empty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/empty.js\n// module id = 719\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar forkJoin_1 = require('../../observable/forkJoin');\r\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\r\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/forkJoin.js\n// module id = 720\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar fromEvent_1 = require('../../observable/fromEvent');\r\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\r\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromEvent.js\n// module id = 721\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar fromEventPattern_1 = require('../../observable/fromEventPattern');\r\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\r\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromEventPattern.js\n// module id = 722\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar fromPromise_1 = require('../../observable/fromPromise');\r\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\r\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/fromPromise.js\n// module id = 723\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar GenerateObservable_1 = require('../../observable/GenerateObservable');\r\nObservable_1.Observable.generate = GenerateObservable_1.GenerateObservable.create;\r\n//# sourceMappingURL=generate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/generate.js\n// module id = 724\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar if_1 = require('../../observable/if');\r\nObservable_1.Observable.if = if_1._if;\r\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/if.js\n// module id = 725\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar interval_1 = require('../../observable/interval');\r\nObservable_1.Observable.interval = interval_1.interval;\r\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/interval.js\n// module id = 726\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar merge_1 = require('../../observable/merge');\r\nObservable_1.Observable.merge = merge_1.merge;\r\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/merge.js\n// module id = 727\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar never_1 = require('../../observable/never');\r\nObservable_1.Observable.never = never_1.never;\r\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/never.js\n// module id = 728\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar onErrorResumeNext_1 = require('../../operator/onErrorResumeNext');\r\nObservable_1.Observable.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNextStatic;\r\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/onErrorResumeNext.js\n// module id = 729\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar pairs_1 = require('../../observable/pairs');\r\nObservable_1.Observable.pairs = pairs_1.pairs;\r\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/pairs.js\n// module id = 730\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar race_1 = require('../../operator/race');\r\nObservable_1.Observable.race = race_1.raceStatic;\r\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/race.js\n// module id = 731\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar range_1 = require('../../observable/range');\r\nObservable_1.Observable.range = range_1.range;\r\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/range.js\n// module id = 732\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar throw_1 = require('../../observable/throw');\r\nObservable_1.Observable.throw = throw_1._throw;\r\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/throw.js\n// module id = 733\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar timer_1 = require('../../observable/timer');\r\nObservable_1.Observable.timer = timer_1.timer;\r\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/timer.js\n// module id = 734\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar using_1 = require('../../observable/using');\r\nObservable_1.Observable.using = using_1.using;\r\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/using.js\n// module id = 735\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar zip_1 = require('../../observable/zip');\r\nObservable_1.Observable.zip = zip_1.zip;\r\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/observable/zip.js\n// module id = 736\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar audit_1 = require('../../operator/audit');\r\nObservable_1.Observable.prototype.audit = audit_1.audit;\r\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/audit.js\n// module id = 737\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar auditTime_1 = require('../../operator/auditTime');\r\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\r\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/auditTime.js\n// module id = 738\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar buffer_1 = require('../../operator/buffer');\r\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\r\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/buffer.js\n// module id = 739\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bufferCount_1 = require('../../operator/bufferCount');\r\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\r\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferCount.js\n// module id = 740\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bufferTime_1 = require('../../operator/bufferTime');\r\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\r\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferTime.js\n// module id = 741\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bufferToggle_1 = require('../../operator/bufferToggle');\r\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\r\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferToggle.js\n// module id = 742\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar bufferWhen_1 = require('../../operator/bufferWhen');\r\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\r\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/bufferWhen.js\n// module id = 743\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar catch_1 = require('../../operator/catch');\r\nObservable_1.Observable.prototype.catch = catch_1._catch;\r\nObservable_1.Observable.prototype._catch = catch_1._catch;\r\n//# sourceMappingURL=catch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/catch.js\n// module id = 744\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar combineAll_1 = require('../../operator/combineAll');\r\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\r\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/combineAll.js\n// module id = 745\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar combineLatest_1 = require('../../operator/combineLatest');\r\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\r\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/combineLatest.js\n// module id = 746\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar concat_1 = require('../../operator/concat');\r\nObservable_1.Observable.prototype.concat = concat_1.concat;\r\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concat.js\n// module id = 747\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar concatAll_1 = require('../../operator/concatAll');\r\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\r\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatAll.js\n// module id = 748\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar concatMap_1 = require('../../operator/concatMap');\r\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\r\n//# sourceMappingURL=concatMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatMap.js\n// module id = 749\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar concatMapTo_1 = require('../../operator/concatMapTo');\r\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\r\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/concatMapTo.js\n// module id = 750\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar count_1 = require('../../operator/count');\r\nObservable_1.Observable.prototype.count = count_1.count;\r\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/count.js\n// module id = 751\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar debounce_1 = require('../../operator/debounce');\r\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\r\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/debounce.js\n// module id = 752\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar defaultIfEmpty_1 = require('../../operator/defaultIfEmpty');\r\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\r\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/defaultIfEmpty.js\n// module id = 753\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar delay_1 = require('../../operator/delay');\r\nObservable_1.Observable.prototype.delay = delay_1.delay;\r\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/delay.js\n// module id = 754\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar delayWhen_1 = require('../../operator/delayWhen');\r\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\r\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/delayWhen.js\n// module id = 755\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar dematerialize_1 = require('../../operator/dematerialize');\r\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\r\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/dematerialize.js\n// module id = 756\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar distinct_1 = require('../../operator/distinct');\r\nObservable_1.Observable.prototype.distinct = distinct_1.distinct;\r\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinct.js\n// module id = 757\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\r\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\r\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinctUntilChanged.js\n// module id = 758\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar distinctUntilKeyChanged_1 = require('../../operator/distinctUntilKeyChanged');\r\nObservable_1.Observable.prototype.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;\r\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/distinctUntilKeyChanged.js\n// module id = 759\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar do_1 = require('../../operator/do');\r\nObservable_1.Observable.prototype.do = do_1._do;\r\nObservable_1.Observable.prototype._do = do_1._do;\r\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/do.js\n// module id = 760\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar elementAt_1 = require('../../operator/elementAt');\r\nObservable_1.Observable.prototype.elementAt = elementAt_1.elementAt;\r\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/elementAt.js\n// module id = 761\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar every_1 = require('../../operator/every');\r\nObservable_1.Observable.prototype.every = every_1.every;\r\n//# sourceMappingURL=every.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/every.js\n// module id = 762\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar exhaust_1 = require('../../operator/exhaust');\r\nObservable_1.Observable.prototype.exhaust = exhaust_1.exhaust;\r\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/exhaust.js\n// module id = 763\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar exhaustMap_1 = require('../../operator/exhaustMap');\r\nObservable_1.Observable.prototype.exhaustMap = exhaustMap_1.exhaustMap;\r\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/exhaustMap.js\n// module id = 764\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar expand_1 = require('../../operator/expand');\r\nObservable_1.Observable.prototype.expand = expand_1.expand;\r\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/expand.js\n// module id = 765\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar finally_1 = require('../../operator/finally');\r\nObservable_1.Observable.prototype.finally = finally_1._finally;\r\nObservable_1.Observable.prototype._finally = finally_1._finally;\r\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/finally.js\n// module id = 766\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar find_1 = require('../../operator/find');\r\nObservable_1.Observable.prototype.find = find_1.find;\r\n//# sourceMappingURL=find.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/find.js\n// module id = 767\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar findIndex_1 = require('../../operator/findIndex');\r\nObservable_1.Observable.prototype.findIndex = findIndex_1.findIndex;\r\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/findIndex.js\n// module id = 768\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar first_1 = require('../../operator/first');\r\nObservable_1.Observable.prototype.first = first_1.first;\r\n//# sourceMappingURL=first.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/first.js\n// module id = 769\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar groupBy_1 = require('../../operator/groupBy');\r\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\r\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/groupBy.js\n// module id = 770\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar ignoreElements_1 = require('../../operator/ignoreElements');\r\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\r\n//# sourceMappingURL=ignoreElements.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/ignoreElements.js\n// module id = 771\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar isEmpty_1 = require('../../operator/isEmpty');\r\nObservable_1.Observable.prototype.isEmpty = isEmpty_1.isEmpty;\r\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/isEmpty.js\n// module id = 772\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar last_1 = require('../../operator/last');\r\nObservable_1.Observable.prototype.last = last_1.last;\r\n//# sourceMappingURL=last.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/last.js\n// module id = 773\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar let_1 = require('../../operator/let');\r\nObservable_1.Observable.prototype.let = let_1.letProto;\r\nObservable_1.Observable.prototype.letBind = let_1.letProto;\r\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/let.js\n// module id = 774\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar mapTo_1 = require('../../operator/mapTo');\r\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\r\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mapTo.js\n// module id = 775\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar materialize_1 = require('../../operator/materialize');\r\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\r\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/materialize.js\n// module id = 776\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar max_1 = require('../../operator/max');\r\nObservable_1.Observable.prototype.max = max_1.max;\r\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/max.js\n// module id = 777\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar merge_1 = require('../../operator/merge');\r\nObservable_1.Observable.prototype.merge = merge_1.merge;\r\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/merge.js\n// module id = 778\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar mergeAll_1 = require('../../operator/mergeAll');\r\nObservable_1.Observable.prototype.mergeAll = mergeAll_1.mergeAll;\r\n//# sourceMappingURL=mergeAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeAll.js\n// module id = 779\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar mergeMapTo_1 = require('../../operator/mergeMapTo');\r\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\r\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\r\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeMapTo.js\n// module id = 780\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar mergeScan_1 = require('../../operator/mergeScan');\r\nObservable_1.Observable.prototype.mergeScan = mergeScan_1.mergeScan;\r\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/mergeScan.js\n// module id = 781\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar min_1 = require('../../operator/min');\r\nObservable_1.Observable.prototype.min = min_1.min;\r\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/min.js\n// module id = 782\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar multicast_1 = require('../../operator/multicast');\r\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\r\n//# sourceMappingURL=multicast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/multicast.js\n// module id = 783\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar observeOn_1 = require('../../operator/observeOn');\r\nObservable_1.Observable.prototype.observeOn = observeOn_1.observeOn;\r\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/observeOn.js\n// module id = 784\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar onErrorResumeNext_1 = require('../../operator/onErrorResumeNext');\r\nObservable_1.Observable.prototype.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;\r\n//# sourceMappingURL=onErrorResumeNext.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/onErrorResumeNext.js\n// module id = 785\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar pairwise_1 = require('../../operator/pairwise');\r\nObservable_1.Observable.prototype.pairwise = pairwise_1.pairwise;\r\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/pairwise.js\n// module id = 786\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar partition_1 = require('../../operator/partition');\r\nObservable_1.Observable.prototype.partition = partition_1.partition;\r\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/partition.js\n// module id = 787\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar pluck_1 = require('../../operator/pluck');\r\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\r\n//# sourceMappingURL=pluck.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/pluck.js\n// module id = 788\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar publish_1 = require('../../operator/publish');\r\nObservable_1.Observable.prototype.publish = publish_1.publish;\r\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publish.js\n// module id = 789\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar publishBehavior_1 = require('../../operator/publishBehavior');\r\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\r\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishBehavior.js\n// module id = 790\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar publishLast_1 = require('../../operator/publishLast');\r\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\r\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishLast.js\n// module id = 791\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar publishReplay_1 = require('../../operator/publishReplay');\r\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\r\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/publishReplay.js\n// module id = 792\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar race_1 = require('../../operator/race');\r\nObservable_1.Observable.prototype.race = race_1.race;\r\n//# sourceMappingURL=race.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/race.js\n// module id = 793\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar reduce_1 = require('../../operator/reduce');\r\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\r\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/reduce.js\n// module id = 794\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar repeat_1 = require('../../operator/repeat');\r\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\r\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/repeat.js\n// module id = 795\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar repeatWhen_1 = require('../../operator/repeatWhen');\r\nObservable_1.Observable.prototype.repeatWhen = repeatWhen_1.repeatWhen;\r\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/repeatWhen.js\n// module id = 796\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar retry_1 = require('../../operator/retry');\r\nObservable_1.Observable.prototype.retry = retry_1.retry;\r\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/retry.js\n// module id = 797\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar retryWhen_1 = require('../../operator/retryWhen');\r\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\r\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/retryWhen.js\n// module id = 798\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar sample_1 = require('../../operator/sample');\r\nObservable_1.Observable.prototype.sample = sample_1.sample;\r\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sample.js\n// module id = 799\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar sampleTime_1 = require('../../operator/sampleTime');\r\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\r\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sampleTime.js\n// module id = 800\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar scan_1 = require('../../operator/scan');\r\nObservable_1.Observable.prototype.scan = scan_1.scan;\r\n//# sourceMappingURL=scan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/scan.js\n// module id = 801\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar sequenceEqual_1 = require('../../operator/sequenceEqual');\r\nObservable_1.Observable.prototype.sequenceEqual = sequenceEqual_1.sequenceEqual;\r\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/sequenceEqual.js\n// module id = 802\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar share_1 = require('../../operator/share');\r\nObservable_1.Observable.prototype.share = share_1.share;\r\n//# sourceMappingURL=share.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/share.js\n// module id = 803\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar single_1 = require('../../operator/single');\r\nObservable_1.Observable.prototype.single = single_1.single;\r\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/single.js\n// module id = 804\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar skip_1 = require('../../operator/skip');\r\nObservable_1.Observable.prototype.skip = skip_1.skip;\r\n//# sourceMappingURL=skip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skip.js\n// module id = 805\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar skipUntil_1 = require('../../operator/skipUntil');\r\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\r\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skipUntil.js\n// module id = 806\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar skipWhile_1 = require('../../operator/skipWhile');\r\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\r\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/skipWhile.js\n// module id = 807\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar startWith_1 = require('../../operator/startWith');\r\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\r\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/startWith.js\n// module id = 808\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar subscribeOn_1 = require('../../operator/subscribeOn');\r\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\r\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/subscribeOn.js\n// module id = 809\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar switch_1 = require('../../operator/switch');\r\nObservable_1.Observable.prototype.switch = switch_1._switch;\r\nObservable_1.Observable.prototype._switch = switch_1._switch;\r\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switch.js\n// module id = 810\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar switchMapTo_1 = require('../../operator/switchMapTo');\r\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\r\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/switchMapTo.js\n// module id = 811\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar take_1 = require('../../operator/take');\r\nObservable_1.Observable.prototype.take = take_1.take;\r\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/take.js\n// module id = 812\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar takeLast_1 = require('../../operator/takeLast');\r\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\r\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeLast.js\n// module id = 813\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar takeUntil_1 = require('../../operator/takeUntil');\r\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\r\n//# sourceMappingURL=takeUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeUntil.js\n// module id = 814\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar takeWhile_1 = require('../../operator/takeWhile');\r\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\r\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/takeWhile.js\n// module id = 815\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar throttle_1 = require('../../operator/throttle');\r\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\r\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/throttle.js\n// module id = 816\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar throttleTime_1 = require('../../operator/throttleTime');\r\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\r\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/throttleTime.js\n// module id = 817\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar timeInterval_1 = require('../../operator/timeInterval');\r\nObservable_1.Observable.prototype.timeInterval = timeInterval_1.timeInterval;\r\n//# sourceMappingURL=timeInterval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeInterval.js\n// module id = 818\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar timeout_1 = require('../../operator/timeout');\r\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\r\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeout.js\n// module id = 819\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar timeoutWith_1 = require('../../operator/timeoutWith');\r\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\r\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timeoutWith.js\n// module id = 820\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar timestamp_1 = require('../../operator/timestamp');\r\nObservable_1.Observable.prototype.timestamp = timestamp_1.timestamp;\r\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/timestamp.js\n// module id = 821\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar toPromise_1 = require('../../operator/toPromise');\r\nObservable_1.Observable.prototype.toPromise = toPromise_1.toPromise;\r\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/toPromise.js\n// module id = 822\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar window_1 = require('../../operator/window');\r\nObservable_1.Observable.prototype.window = window_1.window;\r\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/window.js\n// module id = 823\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar windowCount_1 = require('../../operator/windowCount');\r\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\r\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowCount.js\n// module id = 824\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar windowTime_1 = require('../../operator/windowTime');\r\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\r\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowTime.js\n// module id = 825\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar windowToggle_1 = require('../../operator/windowToggle');\r\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\r\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowToggle.js\n// module id = 826\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar windowWhen_1 = require('../../operator/windowWhen');\r\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\r\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/windowWhen.js\n// module id = 827\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\r\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\r\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/withLatestFrom.js\n// module id = 828\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar zip_1 = require('../../operator/zip');\r\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\r\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/zip.js\n// module id = 829\n// module chunks = 4","\"use strict\";\r\nvar Observable_1 = require('../../Observable');\r\nvar zipAll_1 = require('../../operator/zipAll');\r\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\r\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/zipAll.js\n// module id = 830\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar AsyncSubject_1 = require('../AsyncSubject');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar BoundCallbackObservable = (function (_super) {\r\n    __extends(BoundCallbackObservable, _super);\r\n    function BoundCallbackObservable(callbackFunc, selector, args, context, scheduler) {\r\n        _super.call(this);\r\n        this.callbackFunc = callbackFunc;\r\n        this.selector = selector;\r\n        this.args = args;\r\n        this.context = context;\r\n        this.scheduler = scheduler;\r\n    }\r\n    /* tslint:enable:max-line-length */\r\n    /**\r\n     * Converts a callback API to a function that returns an Observable.\r\n     *\r\n     * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\r\n     * it will return a function `g` that when called as `g(x)` will output an\r\n     * Observable.</span>\r\n     *\r\n     * `bindCallback` is not an operator because its input and output are not\r\n     * Observables. The input is a function `func` with some parameters, but the\r\n     * last parameter must be a callback function that `func` calls when it is\r\n     * done.\r\n     *\r\n     * The output of `bindCallback` is a function that takes the same parameters\r\n     * as `func`, except the last one (the callback). When the output function\r\n     * is called with arguments, it will return an Observable. If `func` function\r\n     * calls its callback with one argument, the Observable will emit that value.\r\n     * If on the other hand callback is called with multiple values, resulting\r\n     * Observable will emit an array with these arguments.\r\n     *\r\n     * It is very important to remember, that input function `func` is not called\r\n     * when output function is, but rather when Observable returned by output\r\n     * function is subscribed. This means if `func` makes AJAX request, that request\r\n     * will be made every time someone subscribes to resulting Observable, but not before.\r\n     *\r\n     * Optionally, selector function can be passed to `bindObservable`. That function\r\n     * takes the same arguments as callback, and returns value\r\n     * that will be emitted by Observable instead of callback parameters themselves.\r\n     * Even though by default multiple arguments passed to callback appear in the stream as array,\r\n     * selector function will be called with arguments directly, just as callback would.\r\n     * This means you can imagine default selector (when one is not provided explicitly)\r\n     * as function that aggregates all its arguments into array, or simply returns first argument,\r\n     * if there is only one.\r\n     *\r\n     * Last optional parameter - {@link Scheduler} - can be used to control when call\r\n     * to `func` happens after someone subscribes to Observable, as well as when results\r\n     * passed to callback will be emitted. By default subscription to Observable calls `func`\r\n     * synchronously, but using `Scheduler.async` as last parameter will defer call to input function,\r\n     * just like wrapping that call in `setTimeout` with time `0` would. So if you use async Scheduler\r\n     * and call `subscribe` on output Observable, all function calls that are currently executing,\r\n     * will end before `func` is invoked.\r\n     *\r\n     * When it comes to emitting results passed to callback, by default they are emitted\r\n     * immediately after `func` invokes callback. In particular, if callback is called synchronously,\r\n     * then subscription to resulting Observable will call `next` function synchronously as well.\r\n     * If you want to defer that call, using `Scheduler.async` will, again, do the job.\r\n     * This means that by using `Scheduler.async` you can, in a sense, ensure that `func`\r\n     * always calls its callback asynchronously, thus avoiding terrifying Zalgo.\r\n     *\r\n     * Note that Observable created by output function will always emit only one value\r\n     * and then complete right after. Even if `func` calls callback multiple times, values from\r\n     * second and following calls will never appear in the stream. If you need to\r\n     * listen for multiple calls, you probably want to use {@link fromEvent} or\r\n     * {@link fromEventPattern} instead.\r\n     *\r\n     * If `func` depends on some context (`this` property), that context will be set\r\n     * to the same context that output function has at call time. In particular, if `func`\r\n     * is called as method of some object, in order to preserve proper behaviour,\r\n     * it is recommended to set context of output function to that object as well,\r\n     * provided `func` is not already bound.\r\n     *\r\n     * If input function calls its callback in \"node style\" (i.e. first argument to callback is\r\n     * optional error parameter signaling whether call failed or not), {@link bindNodeCallback}\r\n     * provides convenient error handling and probably is a better choice.\r\n     * `bindCallback` will treat such functions without any difference and error parameter\r\n     * (whether passed or not) will always be interpreted as regular callback argument.\r\n     *\r\n     *\r\n     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\r\n     * // Suppose we have jQuery.getJSON('/my/url', callback)\r\n     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);\r\n     * var result = getJSONAsObservable('/my/url');\r\n     * result.subscribe(x => console.log(x), e => console.error(e));\r\n     *\r\n     *\r\n     * @example <caption>Receive array of arguments passed to callback</caption>\r\n     * someFunction((a, b, c) => {\r\n     *   console.log(a); // 5\r\n     *   console.log(b); // 'some string'\r\n     *   console.log(c); // {someProperty: 'someValue'}\r\n     * });\r\n     *\r\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);\r\n     * boundSomeFunction().subscribe(values => {\r\n     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\r\n     * });\r\n     *\r\n     *\r\n     * @example <caption>Use bindCallback with selector function</caption>\r\n     * someFunction((a, b, c) => {\r\n     *   console.log(a); // 'a'\r\n     *   console.log(b); // 'b'\r\n     *   console.log(c); // 'c'\r\n     * });\r\n     *\r\n     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);\r\n     * boundSomeFunction().subscribe(value => {\r\n     *   console.log(value) // 'abc'\r\n     * });\r\n     *\r\n     *\r\n     * @example <caption>Compare behaviour with and without async Scheduler</caption>\r\n     * function iCallMyCallbackSynchronously(cb) {\r\n     *   cb();\r\n     * }\r\n     *\r\n     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);\r\n     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\r\n     *\r\n     * boundSyncFn().subscribe(() => console.log('I was sync!'));\r\n     * boundAsyncFn().subscribe(() => console.log('I was async!'));\r\n     * console.log('This happened...');\r\n     *\r\n     * // Logs:\r\n     * // I was sync!\r\n     * // This happened...\r\n     * // I was async!\r\n     *\r\n     *\r\n     * @example <caption>Use bindCallback on object method</caption>\r\n     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);\r\n     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\r\n     * .subscribe(subscriber);\r\n     *\r\n     *\r\n     * @see {@link bindNodeCallback}\r\n     * @see {@link from}\r\n     * @see {@link fromPromise}\r\n     *\r\n     * @param {function} func Function with a callback as the last parameter.\r\n     * @param {function} [selector] A function which takes the arguments from the\r\n     * callback and maps those to a value to emit on the output Observable.\r\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\r\n     * callbacks.\r\n     * @return {function(...params: *): Observable} A function which returns the\r\n     * Observable that delivers the same values the callback would deliver.\r\n     * @static true\r\n     * @name bindCallback\r\n     * @owner Observable\r\n     */\r\n    BoundCallbackObservable.create = function (func, selector, scheduler) {\r\n        if (selector === void 0) { selector = undefined; }\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            return new BoundCallbackObservable(func, selector, args, this, scheduler);\r\n        };\r\n    };\r\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\r\n        var callbackFunc = this.callbackFunc;\r\n        var args = this.args;\r\n        var scheduler = this.scheduler;\r\n        var subject = this.subject;\r\n        if (!scheduler) {\r\n            if (!subject) {\r\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\r\n                var handler = function handlerFn() {\r\n                    var innerArgs = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        innerArgs[_i - 0] = arguments[_i];\r\n                    }\r\n                    var source = handlerFn.source;\r\n                    var selector = source.selector, subject = source.subject;\r\n                    if (selector) {\r\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\r\n                        if (result_1 === errorObject_1.errorObject) {\r\n                            subject.error(errorObject_1.errorObject.e);\r\n                        }\r\n                        else {\r\n                            subject.next(result_1);\r\n                            subject.complete();\r\n                        }\r\n                    }\r\n                    else {\r\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\r\n                        subject.complete();\r\n                    }\r\n                };\r\n                // use named function instance to avoid closure.\r\n                handler.source = this;\r\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\r\n                if (result === errorObject_1.errorObject) {\r\n                    subject.error(errorObject_1.errorObject.e);\r\n                }\r\n            }\r\n            return subject.subscribe(subscriber);\r\n        }\r\n        else {\r\n            return scheduler.schedule(BoundCallbackObservable.dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\r\n        }\r\n    };\r\n    BoundCallbackObservable.dispatch = function (state) {\r\n        var self = this;\r\n        var source = state.source, subscriber = state.subscriber, context = state.context;\r\n        var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\r\n        var subject = source.subject;\r\n        if (!subject) {\r\n            subject = source.subject = new AsyncSubject_1.AsyncSubject();\r\n            var handler = function handlerFn() {\r\n                var innerArgs = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    innerArgs[_i - 0] = arguments[_i];\r\n                }\r\n                var source = handlerFn.source;\r\n                var selector = source.selector, subject = source.subject;\r\n                if (selector) {\r\n                    var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\r\n                    if (result_2 === errorObject_1.errorObject) {\r\n                        self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\r\n                    }\r\n                    else {\r\n                        self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\r\n                    }\r\n                }\r\n                else {\r\n                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\r\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\r\n                }\r\n            };\r\n            // use named function to pass values in without closure\r\n            handler.source = source;\r\n            var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\r\n            if (result === errorObject_1.errorObject) {\r\n                subject.error(errorObject_1.errorObject.e);\r\n            }\r\n        }\r\n        self.add(subject.subscribe(subscriber));\r\n    };\r\n    return BoundCallbackObservable;\r\n}(Observable_1.Observable));\r\nexports.BoundCallbackObservable = BoundCallbackObservable;\r\nfunction dispatchNext(arg) {\r\n    var value = arg.value, subject = arg.subject;\r\n    subject.next(value);\r\n    subject.complete();\r\n}\r\nfunction dispatchError(arg) {\r\n    var err = arg.err, subject = arg.subject;\r\n    subject.error(err);\r\n}\r\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/BoundCallbackObservable.js\n// module id = 831\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar AsyncSubject_1 = require('../AsyncSubject');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar BoundNodeCallbackObservable = (function (_super) {\r\n    __extends(BoundNodeCallbackObservable, _super);\r\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, context, scheduler) {\r\n        _super.call(this);\r\n        this.callbackFunc = callbackFunc;\r\n        this.selector = selector;\r\n        this.args = args;\r\n        this.context = context;\r\n        this.scheduler = scheduler;\r\n    }\r\n    /* tslint:enable:max-line-length */\r\n    /**\r\n     * Converts a Node.js-style callback API to a function that returns an\r\n     * Observable.\r\n     *\r\n     * <span class=\"informal\">It's just like {@link bindCallback}, but the\r\n     * callback is expected to be of type `callback(error, result)`.</span>\r\n     *\r\n     * `bindNodeCallback` is not an operator because its input and output are not\r\n     * Observables. The input is a function `func` with some parameters, but the\r\n     * last parameter must be a callback function that `func` calls when it is\r\n     * done. The callback function is expected to follow Node.js conventions,\r\n     * where the first argument to the callback is an error object, signaling\r\n     * whether call was successful. If that object is passed to callback, it means\r\n     * something went wrong.\r\n     *\r\n     * The output of `bindNodeCallback` is a function that takes the same\r\n     * parameters as `func`, except the last one (the callback). When the output\r\n     * function is called with arguments, it will return an Observable.\r\n     * If `func` calls its callback with error parameter present, Observable will\r\n     * error with that value as well. If error parameter is not passed, Observable will emit\r\n     * second parameter. If there are more parameters (third and so on),\r\n     * Observable will emit an array with all arguments, except first error argument.\r\n     *\r\n     * Optionally `bindNodeCallback` accepts selector function, which allows you to\r\n     * make resulting Observable emit value computed by selector, instead of regular\r\n     * callback arguments. It works similarly to {@link bindCallback} selector, but\r\n     * Node.js-style error argument will never be passed to that function.\r\n     *\r\n     * Note that `func` will not be called at the same time output function is,\r\n     * but rather whenever resulting Observable is subscribed. By default call to\r\n     * `func` will happen synchronously after subscription, but that can be changed\r\n     * with proper {@link Scheduler} provided as optional third parameter. Scheduler\r\n     * can also control when values from callback will be emitted by Observable.\r\n     * To find out more, check out documentation for {@link bindCallback}, where\r\n     * Scheduler works exactly the same.\r\n     *\r\n     * As in {@link bindCallback}, context (`this` property) of input function will be set to context\r\n     * of returned function, when it is called.\r\n     *\r\n     * After Observable emits value, it will complete immediately. This means\r\n     * even if `func` calls callback again, values from second and consecutive\r\n     * calls will never appear on the stream. If you need to handle functions\r\n     * that call callbacks multiple times, check out {@link fromEvent} or\r\n     * {@link fromEventPattern} instead.\r\n     *\r\n     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\r\n     * \"Node.js-style\" callbacks are just a convention, so if you write for\r\n     * browsers or any other environment and API you use implements that callback style,\r\n     * `bindNodeCallback` can be safely used on that API functions as well.\r\n     *\r\n     * Remember that Error object passed to callback does not have to be an instance\r\n     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\r\n     * Error parameter of callback function is interpreted as \"present\", when value\r\n     * of that parameter is truthy. It could be, for example, non-zero number, non-empty\r\n     * string or boolean `true`. In all of these cases resulting Observable would error\r\n     * with that value. This means usually regular style callbacks will fail very often when\r\n     * `bindNodeCallback` is used. If your Observable errors much more often then you\r\n     * would expect, check if callback really is called in Node.js-style and, if not,\r\n     * switch to {@link bindCallback} instead.\r\n     *\r\n     * Note that even if error parameter is technically present in callback, but its value\r\n     * is falsy, it still won't appear in array emitted by Observable or in selector function.\r\n     *\r\n     *\r\n     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\r\n     * import * as fs from 'fs';\r\n     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);\r\n     * var result = readFileAsObservable('./roadNames.txt', 'utf8');\r\n     * result.subscribe(x => console.log(x), e => console.error(e));\r\n     *\r\n     *\r\n     * @example <caption>Use on function calling callback with multiple arguments</caption>\r\n     * someFunction((err, a, b) => {\r\n     *   console.log(err); // null\r\n     *   console.log(a); // 5\r\n     *   console.log(b); // \"some string\"\r\n     * });\r\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\r\n     * boundSomeFunction()\r\n     * .subscribe(value => {\r\n     *   console.log(value); // [5, \"some string\"]\r\n     * });\r\n     *\r\n     *\r\n     * @example <caption>Use with selector function</caption>\r\n     * someFunction((err, a, b) => {\r\n     *   console.log(err); // undefined\r\n     *   console.log(a); // \"abc\"\r\n     *   console.log(b); // \"DEF\"\r\n     * });\r\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);\r\n     * boundSomeFunction()\r\n     * .subscribe(value => {\r\n     *   console.log(value); // \"abcDEF\"\r\n     * });\r\n     *\r\n     *\r\n     * @example <caption>Use on function calling callback in regular style</caption>\r\n     * someFunction(a => {\r\n     *   console.log(a); // 5\r\n     * });\r\n     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);\r\n     * boundSomeFunction()\r\n     * .subscribe(\r\n     *   value => {}             // never gets called\r\n     *   err => console.log(err) // 5\r\n     *);\r\n     *\r\n     *\r\n     * @see {@link bindCallback}\r\n     * @see {@link from}\r\n     * @see {@link fromPromise}\r\n     *\r\n     * @param {function} func Function with a Node.js-style callback as the last parameter.\r\n     * @param {function} [selector] A function which takes the arguments from the\r\n     * callback and maps those to a value to emit on the output Observable.\r\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\r\n     * callbacks.\r\n     * @return {function(...params: *): Observable} A function which returns the\r\n     * Observable that delivers the same values the Node.js callback would\r\n     * deliver.\r\n     * @static true\r\n     * @name bindNodeCallback\r\n     * @owner Observable\r\n     */\r\n    BoundNodeCallbackObservable.create = function (func, selector, scheduler) {\r\n        if (selector === void 0) { selector = undefined; }\r\n        return function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            return new BoundNodeCallbackObservable(func, selector, args, this, scheduler);\r\n        };\r\n    };\r\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\r\n        var callbackFunc = this.callbackFunc;\r\n        var args = this.args;\r\n        var scheduler = this.scheduler;\r\n        var subject = this.subject;\r\n        if (!scheduler) {\r\n            if (!subject) {\r\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\r\n                var handler = function handlerFn() {\r\n                    var innerArgs = [];\r\n                    for (var _i = 0; _i < arguments.length; _i++) {\r\n                        innerArgs[_i - 0] = arguments[_i];\r\n                    }\r\n                    var source = handlerFn.source;\r\n                    var selector = source.selector, subject = source.subject;\r\n                    var err = innerArgs.shift();\r\n                    if (err) {\r\n                        subject.error(err);\r\n                    }\r\n                    else if (selector) {\r\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\r\n                        if (result_1 === errorObject_1.errorObject) {\r\n                            subject.error(errorObject_1.errorObject.e);\r\n                        }\r\n                        else {\r\n                            subject.next(result_1);\r\n                            subject.complete();\r\n                        }\r\n                    }\r\n                    else {\r\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\r\n                        subject.complete();\r\n                    }\r\n                };\r\n                // use named function instance to avoid closure.\r\n                handler.source = this;\r\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this.context, args.concat(handler));\r\n                if (result === errorObject_1.errorObject) {\r\n                    subject.error(errorObject_1.errorObject.e);\r\n                }\r\n            }\r\n            return subject.subscribe(subscriber);\r\n        }\r\n        else {\r\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber, context: this.context });\r\n        }\r\n    };\r\n    return BoundNodeCallbackObservable;\r\n}(Observable_1.Observable));\r\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\r\nfunction dispatch(state) {\r\n    var self = this;\r\n    var source = state.source, subscriber = state.subscriber, context = state.context;\r\n    // XXX: cast to `any` to access to the private field in `source`.\r\n    var _a = source, callbackFunc = _a.callbackFunc, args = _a.args, scheduler = _a.scheduler;\r\n    var subject = source.subject;\r\n    if (!subject) {\r\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\r\n        var handler = function handlerFn() {\r\n            var innerArgs = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                innerArgs[_i - 0] = arguments[_i];\r\n            }\r\n            var source = handlerFn.source;\r\n            var selector = source.selector, subject = source.subject;\r\n            var err = innerArgs.shift();\r\n            if (err) {\r\n                self.add(scheduler.schedule(dispatchError, 0, { err: err, subject: subject }));\r\n            }\r\n            else if (selector) {\r\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\r\n                if (result_2 === errorObject_1.errorObject) {\r\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\r\n                }\r\n                else {\r\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\r\n                }\r\n            }\r\n            else {\r\n                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\r\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\r\n            }\r\n        };\r\n        // use named function to pass values in without closure\r\n        handler.source = source;\r\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(context, args.concat(handler));\r\n        if (result === errorObject_1.errorObject) {\r\n            self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\r\n        }\r\n    }\r\n    self.add(subject.subscribe(subscriber));\r\n}\r\nfunction dispatchNext(arg) {\r\n    var value = arg.value, subject = arg.subject;\r\n    subject.next(value);\r\n    subject.complete();\r\n}\r\nfunction dispatchError(arg) {\r\n    var err = arg.err, subject = arg.subject;\r\n    subject.error(err);\r\n}\r\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/BoundNodeCallbackObservable.js\n// module id = 832\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar DeferObservable = (function (_super) {\r\n    __extends(DeferObservable, _super);\r\n    function DeferObservable(observableFactory) {\r\n        _super.call(this);\r\n        this.observableFactory = observableFactory;\r\n    }\r\n    /**\r\n     * Creates an Observable that, on subscribe, calls an Observable factory to\r\n     * make an Observable for each new Observer.\r\n     *\r\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\r\n     * is subscribed.\r\n     * </span>\r\n     *\r\n     * <img src=\"./img/defer.png\" width=\"100%\">\r\n     *\r\n     * `defer` allows you to create the Observable only when the Observer\r\n     * subscribes, and create a fresh Observable for each Observer. It waits until\r\n     * an Observer subscribes to it, and then it generates an Observable,\r\n     * typically with an Observable factory function. It does this afresh for each\r\n     * subscriber, so although each subscriber may think it is subscribing to the\r\n     * same Observable, in fact each subscriber gets its own individual\r\n     * Observable.\r\n     *\r\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\r\n     * var clicksOrInterval = Rx.Observable.defer(function () {\r\n     *   if (Math.random() > 0.5) {\r\n     *     return Rx.Observable.fromEvent(document, 'click');\r\n     *   } else {\r\n     *     return Rx.Observable.interval(1000);\r\n     *   }\r\n     * });\r\n     * clicksOrInterval.subscribe(x => console.log(x));\r\n     *\r\n     * // Results in the following behavior:\r\n     * // If the result of Math.random() is greater than 0.5 it will listen\r\n     * // for clicks anywhere on the \"document\"; when document is clicked it\r\n     * // will log a MouseEvent object to the console. If the result is less\r\n     * // than 0.5 it will emit ascending numbers, one every second(1000ms).\r\n     *\r\n     * @see {@link create}\r\n     *\r\n     * @param {function(): SubscribableOrPromise} observableFactory The Observable\r\n     * factory function to invoke for each Observer that subscribes to the output\r\n     * Observable. May also return a Promise, which will be converted on the fly\r\n     * to an Observable.\r\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\r\n     * an invocation of the given Observable factory function.\r\n     * @static true\r\n     * @name defer\r\n     * @owner Observable\r\n     */\r\n    DeferObservable.create = function (observableFactory) {\r\n        return new DeferObservable(observableFactory);\r\n    };\r\n    DeferObservable.prototype._subscribe = function (subscriber) {\r\n        return new DeferSubscriber(subscriber, this.observableFactory);\r\n    };\r\n    return DeferObservable;\r\n}(Observable_1.Observable));\r\nexports.DeferObservable = DeferObservable;\r\nvar DeferSubscriber = (function (_super) {\r\n    __extends(DeferSubscriber, _super);\r\n    function DeferSubscriber(destination, factory) {\r\n        _super.call(this, destination);\r\n        this.factory = factory;\r\n        this.tryDefer();\r\n    }\r\n    DeferSubscriber.prototype.tryDefer = function () {\r\n        try {\r\n            this._callFactory();\r\n        }\r\n        catch (err) {\r\n            this._error(err);\r\n        }\r\n    };\r\n    DeferSubscriber.prototype._callFactory = function () {\r\n        var result = this.factory();\r\n        if (result) {\r\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\r\n        }\r\n    };\r\n    return DeferSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=DeferObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/DeferObservable.js\n// module id = 833\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar ErrorObservable = (function (_super) {\r\n    __extends(ErrorObservable, _super);\r\n    function ErrorObservable(error, scheduler) {\r\n        _super.call(this);\r\n        this.error = error;\r\n        this.scheduler = scheduler;\r\n    }\r\n    /**\r\n     * Creates an Observable that emits no items to the Observer and immediately\r\n     * emits an error notification.\r\n     *\r\n     * <span class=\"informal\">Just emits 'error', and nothing else.\r\n     * </span>\r\n     *\r\n     * <img src=\"./img/throw.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that only\r\n     * emits the error notification. It can be used for composing with other\r\n     * Observables, such as in a {@link mergeMap}.\r\n     *\r\n     * @example <caption>Emit the number 7, then emit an error.</caption>\r\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\r\n     * result.subscribe(x => console.log(x), e => console.error(e));\r\n     *\r\n     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\r\n     * var interval = Rx.Observable.interval(1000);\r\n     * var result = interval.mergeMap(x =>\r\n     *   x === 13 ?\r\n     *     Rx.Observable.throw('Thirteens are bad') :\r\n     *     Rx.Observable.of('a', 'b', 'c')\r\n     * );\r\n     * result.subscribe(x => console.log(x), e => console.error(e));\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link empty}\r\n     * @see {@link never}\r\n     * @see {@link of}\r\n     *\r\n     * @param {any} error The particular Error to pass to the error notification.\r\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\r\n     * the emission of the error notification.\r\n     * @return {Observable} An error Observable: emits only the error notification\r\n     * using the given error argument.\r\n     * @static true\r\n     * @name throw\r\n     * @owner Observable\r\n     */\r\n    ErrorObservable.create = function (error, scheduler) {\r\n        return new ErrorObservable(error, scheduler);\r\n    };\r\n    ErrorObservable.dispatch = function (arg) {\r\n        var error = arg.error, subscriber = arg.subscriber;\r\n        subscriber.error(error);\r\n    };\r\n    ErrorObservable.prototype._subscribe = function (subscriber) {\r\n        var error = this.error;\r\n        var scheduler = this.scheduler;\r\n        if (scheduler) {\r\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\r\n                error: error, subscriber: subscriber\r\n            });\r\n        }\r\n        else {\r\n            subscriber.error(error);\r\n        }\r\n    };\r\n    return ErrorObservable;\r\n}(Observable_1.Observable));\r\nexports.ErrorObservable = ErrorObservable;\r\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/ErrorObservable.js\n// module id = 834\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar isFunction_1 = require('../util/isFunction');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar Subscription_1 = require('../Subscription');\r\nvar toString = Object.prototype.toString;\r\nfunction isNodeStyleEventEmitter(sourceObj) {\r\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\r\n}\r\nfunction isJQueryStyleEventEmitter(sourceObj) {\r\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\r\n}\r\nfunction isNodeList(sourceObj) {\r\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\r\n}\r\nfunction isHTMLCollection(sourceObj) {\r\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\r\n}\r\nfunction isEventTarget(sourceObj) {\r\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\r\n}\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar FromEventObservable = (function (_super) {\r\n    __extends(FromEventObservable, _super);\r\n    function FromEventObservable(sourceObj, eventName, selector, options) {\r\n        _super.call(this);\r\n        this.sourceObj = sourceObj;\r\n        this.eventName = eventName;\r\n        this.selector = selector;\r\n        this.options = options;\r\n    }\r\n    /* tslint:enable:max-line-length */\r\n    /**\r\n     * Creates an Observable that emits events of a specific type coming from the\r\n     * given event target.\r\n     *\r\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node\r\n     * EventEmitter events or others.</span>\r\n     *\r\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\r\n     *\r\n     * Creates an Observable by attaching an event listener to an \"event target\",\r\n     * which may be an object with `addEventListener` and `removeEventListener`,\r\n     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the\r\n     * DOM, or an HTMLCollection from the DOM. The event handler is attached when\r\n     * the output Observable is subscribed, and removed when the Subscription is\r\n     * unsubscribed.\r\n     *\r\n     * @example <caption>Emits clicks happening on the DOM document</caption>\r\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n     * clicks.subscribe(x => console.log(x));\r\n     *\r\n     * // Results in:\r\n     * // MouseEvent object logged to console everytime a click\r\n     * // occurs on the document.\r\n     *\r\n     * @see {@link from}\r\n     * @see {@link fromEventPattern}\r\n     *\r\n     * @param {EventTargetLike} target The DOMElement, event target, Node.js\r\n     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.\r\n     * @param {string} eventName The event name of interest, being emitted by the\r\n     * `target`.\r\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\r\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\r\n     * post-process results. It takes the arguments from the event handler and\r\n     * should return a single value.\r\n     * @return {Observable<T>}\r\n     * @static true\r\n     * @name fromEvent\r\n     * @owner Observable\r\n     */\r\n    FromEventObservable.create = function (target, eventName, options, selector) {\r\n        if (isFunction_1.isFunction(options)) {\r\n            selector = options;\r\n            options = undefined;\r\n        }\r\n        return new FromEventObservable(target, eventName, selector, options);\r\n    };\r\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\r\n        var unsubscribe;\r\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\r\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\r\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\r\n            }\r\n        }\r\n        else if (isEventTarget(sourceObj)) {\r\n            var source_1 = sourceObj;\r\n            sourceObj.addEventListener(eventName, handler, options);\r\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler); };\r\n        }\r\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\r\n            var source_2 = sourceObj;\r\n            sourceObj.on(eventName, handler);\r\n            unsubscribe = function () { return source_2.off(eventName, handler); };\r\n        }\r\n        else if (isNodeStyleEventEmitter(sourceObj)) {\r\n            var source_3 = sourceObj;\r\n            sourceObj.addListener(eventName, handler);\r\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\r\n        }\r\n        else {\r\n            throw new TypeError('Invalid event target');\r\n        }\r\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\r\n    };\r\n    FromEventObservable.prototype._subscribe = function (subscriber) {\r\n        var sourceObj = this.sourceObj;\r\n        var eventName = this.eventName;\r\n        var options = this.options;\r\n        var selector = this.selector;\r\n        var handler = selector ? function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\r\n            if (result === errorObject_1.errorObject) {\r\n                subscriber.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                subscriber.next(result);\r\n            }\r\n        } : function (e) { return subscriber.next(e); };\r\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\r\n    };\r\n    return FromEventObservable;\r\n}(Observable_1.Observable));\r\nexports.FromEventObservable = FromEventObservable;\r\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromEventObservable.js\n// module id = 835\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar isFunction_1 = require('../util/isFunction');\r\nvar Observable_1 = require('../Observable');\r\nvar Subscription_1 = require('../Subscription');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar FromEventPatternObservable = (function (_super) {\r\n    __extends(FromEventPatternObservable, _super);\r\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\r\n        _super.call(this);\r\n        this.addHandler = addHandler;\r\n        this.removeHandler = removeHandler;\r\n        this.selector = selector;\r\n    }\r\n    /**\r\n     * Creates an Observable from an API based on addHandler/removeHandler\r\n     * functions.\r\n     *\r\n     * <span class=\"informal\">Converts any addHandler/removeHandler API to an\r\n     * Observable.</span>\r\n     *\r\n     * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\r\n     *\r\n     * Creates an Observable by using the `addHandler` and `removeHandler`\r\n     * functions to add and remove the handlers, with an optional selector\r\n     * function to project the event arguments to a result. The `addHandler` is\r\n     * called when the output Observable is subscribed, and `removeHandler` is\r\n     * called when the Subscription is unsubscribed.\r\n     *\r\n     * @example <caption>Emits clicks happening on the DOM document</caption>\r\n     * function addClickHandler(handler) {\r\n     *   document.addEventListener('click', handler);\r\n     * }\r\n     *\r\n     * function removeClickHandler(handler) {\r\n     *   document.removeEventListener('click', handler);\r\n     * }\r\n     *\r\n     * var clicks = Rx.Observable.fromEventPattern(\r\n     *   addClickHandler,\r\n     *   removeClickHandler\r\n     * );\r\n     * clicks.subscribe(x => console.log(x));\r\n     *\r\n     * @see {@link from}\r\n     * @see {@link fromEvent}\r\n     *\r\n     * @param {function(handler: Function): any} addHandler A function that takes\r\n     * a `handler` function as argument and attaches it somehow to the actual\r\n     * source of events.\r\n     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\r\n     * takes a `handler` function as argument and removes it in case it was\r\n     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\r\n     * removeHandler function will forward it.\r\n     * @param {function(...args: any): T} [selector] An optional function to\r\n     * post-process results. It takes the arguments from the event handler and\r\n     * should return a single value.\r\n     * @return {Observable<T>}\r\n     * @static true\r\n     * @name fromEventPattern\r\n     * @owner Observable\r\n     */\r\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\r\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\r\n    };\r\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\r\n        var _this = this;\r\n        var removeHandler = this.removeHandler;\r\n        var handler = !!this.selector ? function () {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i - 0] = arguments[_i];\r\n            }\r\n            _this._callSelector(subscriber, args);\r\n        } : function (e) { subscriber.next(e); };\r\n        var retValue = this._callAddHandler(handler, subscriber);\r\n        if (!isFunction_1.isFunction(removeHandler)) {\r\n            return;\r\n        }\r\n        subscriber.add(new Subscription_1.Subscription(function () {\r\n            //TODO: determine whether or not to forward to error handler\r\n            removeHandler(handler, retValue);\r\n        }));\r\n    };\r\n    FromEventPatternObservable.prototype._callSelector = function (subscriber, args) {\r\n        try {\r\n            var result = this.selector.apply(this, args);\r\n            subscriber.next(result);\r\n        }\r\n        catch (e) {\r\n            subscriber.error(e);\r\n        }\r\n    };\r\n    FromEventPatternObservable.prototype._callAddHandler = function (handler, errorSubscriber) {\r\n        try {\r\n            return this.addHandler(handler) || null;\r\n        }\r\n        catch (e) {\r\n            errorSubscriber.error(e);\r\n        }\r\n    };\r\n    return FromEventPatternObservable;\r\n}(Observable_1.Observable));\r\nexports.FromEventPatternObservable = FromEventPatternObservable;\r\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/FromEventPatternObservable.js\n// module id = 836\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nvar selfSelector = function (value) { return value; };\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar GenerateObservable = (function (_super) {\r\n    __extends(GenerateObservable, _super);\r\n    function GenerateObservable(initialState, condition, iterate, resultSelector, scheduler) {\r\n        _super.call(this);\r\n        this.initialState = initialState;\r\n        this.condition = condition;\r\n        this.iterate = iterate;\r\n        this.resultSelector = resultSelector;\r\n        this.scheduler = scheduler;\r\n    }\r\n    GenerateObservable.create = function (initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\r\n        if (arguments.length == 1) {\r\n            return new GenerateObservable(initialStateOrOptions.initialState, initialStateOrOptions.condition, initialStateOrOptions.iterate, initialStateOrOptions.resultSelector || selfSelector, initialStateOrOptions.scheduler);\r\n        }\r\n        if (resultSelectorOrObservable === undefined || isScheduler_1.isScheduler(resultSelectorOrObservable)) {\r\n            return new GenerateObservable(initialStateOrOptions, condition, iterate, selfSelector, resultSelectorOrObservable);\r\n        }\r\n        return new GenerateObservable(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler);\r\n    };\r\n    GenerateObservable.prototype._subscribe = function (subscriber) {\r\n        var state = this.initialState;\r\n        if (this.scheduler) {\r\n            return this.scheduler.schedule(GenerateObservable.dispatch, 0, {\r\n                subscriber: subscriber,\r\n                iterate: this.iterate,\r\n                condition: this.condition,\r\n                resultSelector: this.resultSelector,\r\n                state: state });\r\n        }\r\n        var _a = this, condition = _a.condition, resultSelector = _a.resultSelector, iterate = _a.iterate;\r\n        do {\r\n            if (condition) {\r\n                var conditionResult = void 0;\r\n                try {\r\n                    conditionResult = condition(state);\r\n                }\r\n                catch (err) {\r\n                    subscriber.error(err);\r\n                    return;\r\n                }\r\n                if (!conditionResult) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n            }\r\n            var value = void 0;\r\n            try {\r\n                value = resultSelector(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return;\r\n            }\r\n            subscriber.next(value);\r\n            if (subscriber.closed) {\r\n                break;\r\n            }\r\n            try {\r\n                state = iterate(state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return;\r\n            }\r\n        } while (true);\r\n    };\r\n    GenerateObservable.dispatch = function (state) {\r\n        var subscriber = state.subscriber, condition = state.condition;\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        if (state.needIterate) {\r\n            try {\r\n                state.state = state.iterate(state.state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            state.needIterate = true;\r\n        }\r\n        if (condition) {\r\n            var conditionResult = void 0;\r\n            try {\r\n                conditionResult = condition(state.state);\r\n            }\r\n            catch (err) {\r\n                subscriber.error(err);\r\n                return;\r\n            }\r\n            if (!conditionResult) {\r\n                subscriber.complete();\r\n                return;\r\n            }\r\n            if (subscriber.closed) {\r\n                return;\r\n            }\r\n        }\r\n        var value;\r\n        try {\r\n            value = state.resultSelector(state.state);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n            return;\r\n        }\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        subscriber.next(value);\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        return this.schedule(state);\r\n    };\r\n    return GenerateObservable;\r\n}(Observable_1.Observable));\r\nexports.GenerateObservable = GenerateObservable;\r\n//# sourceMappingURL=GenerateObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/GenerateObservable.js\n// module id = 837\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar IfObservable = (function (_super) {\r\n    __extends(IfObservable, _super);\r\n    function IfObservable(condition, thenSource, elseSource) {\r\n        _super.call(this);\r\n        this.condition = condition;\r\n        this.thenSource = thenSource;\r\n        this.elseSource = elseSource;\r\n    }\r\n    IfObservable.create = function (condition, thenSource, elseSource) {\r\n        return new IfObservable(condition, thenSource, elseSource);\r\n    };\r\n    IfObservable.prototype._subscribe = function (subscriber) {\r\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\r\n        return new IfSubscriber(subscriber, condition, thenSource, elseSource);\r\n    };\r\n    return IfObservable;\r\n}(Observable_1.Observable));\r\nexports.IfObservable = IfObservable;\r\nvar IfSubscriber = (function (_super) {\r\n    __extends(IfSubscriber, _super);\r\n    function IfSubscriber(destination, condition, thenSource, elseSource) {\r\n        _super.call(this, destination);\r\n        this.condition = condition;\r\n        this.thenSource = thenSource;\r\n        this.elseSource = elseSource;\r\n        this.tryIf();\r\n    }\r\n    IfSubscriber.prototype.tryIf = function () {\r\n        var _a = this, condition = _a.condition, thenSource = _a.thenSource, elseSource = _a.elseSource;\r\n        var result;\r\n        try {\r\n            result = condition();\r\n            var source = result ? thenSource : elseSource;\r\n            if (source) {\r\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\r\n            }\r\n            else {\r\n                this._complete();\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._error(err);\r\n        }\r\n    };\r\n    return IfSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=IfObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/IfObservable.js\n// module id = 838\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar isNumeric_1 = require('../util/isNumeric');\r\nvar Observable_1 = require('../Observable');\r\nvar async_1 = require('../scheduler/async');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar IntervalObservable = (function (_super) {\r\n    __extends(IntervalObservable, _super);\r\n    function IntervalObservable(period, scheduler) {\r\n        if (period === void 0) { period = 0; }\r\n        if (scheduler === void 0) { scheduler = async_1.async; }\r\n        _super.call(this);\r\n        this.period = period;\r\n        this.scheduler = scheduler;\r\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\r\n            this.period = 0;\r\n        }\r\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\r\n            this.scheduler = async_1.async;\r\n        }\r\n    }\r\n    /**\r\n     * Creates an Observable that emits sequential numbers every specified\r\n     * interval of time, on a specified IScheduler.\r\n     *\r\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\r\n     * </span>\r\n     *\r\n     * <img src=\"./img/interval.png\" width=\"100%\">\r\n     *\r\n     * `interval` returns an Observable that emits an infinite sequence of\r\n     * ascending integers, with a constant interval of time of your choosing\r\n     * between those emissions. The first emission is not sent immediately, but\r\n     * only after the first period has passed. By default, this operator uses the\r\n     * `async` IScheduler to provide a notion of time, but you may pass any\r\n     * IScheduler to it.\r\n     *\r\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\r\n     * var numbers = Rx.Observable.interval(1000);\r\n     * numbers.subscribe(x => console.log(x));\r\n     *\r\n     * @see {@link timer}\r\n     * @see {@link delay}\r\n     *\r\n     * @param {number} [period=0] The interval size in milliseconds (by default)\r\n     * or the time unit determined by the scheduler's clock.\r\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\r\n     * the emission of values, and providing a notion of \"time\".\r\n     * @return {Observable} An Observable that emits a sequential number each time\r\n     * interval.\r\n     * @static true\r\n     * @name interval\r\n     * @owner Observable\r\n     */\r\n    IntervalObservable.create = function (period, scheduler) {\r\n        if (period === void 0) { period = 0; }\r\n        if (scheduler === void 0) { scheduler = async_1.async; }\r\n        return new IntervalObservable(period, scheduler);\r\n    };\r\n    IntervalObservable.dispatch = function (state) {\r\n        var index = state.index, subscriber = state.subscriber, period = state.period;\r\n        subscriber.next(index);\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        state.index += 1;\r\n        this.schedule(state, period);\r\n    };\r\n    IntervalObservable.prototype._subscribe = function (subscriber) {\r\n        var index = 0;\r\n        var period = this.period;\r\n        var scheduler = this.scheduler;\r\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\r\n            index: index, subscriber: subscriber, period: period\r\n        }));\r\n    };\r\n    return IntervalObservable;\r\n}(Observable_1.Observable));\r\nexports.IntervalObservable = IntervalObservable;\r\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/IntervalObservable.js\n// module id = 839\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar noop_1 = require('../util/noop');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar NeverObservable = (function (_super) {\r\n    __extends(NeverObservable, _super);\r\n    function NeverObservable() {\r\n        _super.call(this);\r\n    }\r\n    /**\r\n     * Creates an Observable that emits no items to the Observer.\r\n     *\r\n     * <span class=\"informal\">An Observable that never emits anything.</span>\r\n     *\r\n     * <img src=\"./img/never.png\" width=\"100%\">\r\n     *\r\n     * This static operator is useful for creating a simple Observable that emits\r\n     * neither values nor errors nor the completion notification. It can be used\r\n     * for testing purposes or for composing with other Observables. Please not\r\n     * that by never emitting a complete notification, this Observable keeps the\r\n     * subscription from being disposed automatically. Subscriptions need to be\r\n     * manually disposed.\r\n     *\r\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\r\n     * function info() {\r\n     *   console.log('Will not be called');\r\n     * }\r\n     * var result = Rx.Observable.never().startWith(7);\r\n     * result.subscribe(x => console.log(x), info, info);\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link empty}\r\n     * @see {@link of}\r\n     * @see {@link throw}\r\n     *\r\n     * @return {Observable} A \"never\" Observable: never emits anything.\r\n     * @static true\r\n     * @name never\r\n     * @owner Observable\r\n     */\r\n    NeverObservable.create = function () {\r\n        return new NeverObservable();\r\n    };\r\n    NeverObservable.prototype._subscribe = function (subscriber) {\r\n        noop_1.noop();\r\n    };\r\n    return NeverObservable;\r\n}(Observable_1.Observable));\r\nexports.NeverObservable = NeverObservable;\r\n//# sourceMappingURL=NeverObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/NeverObservable.js\n// module id = 840\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nfunction dispatch(state) {\r\n    var obj = state.obj, keys = state.keys, length = state.length, index = state.index, subscriber = state.subscriber;\r\n    if (index === length) {\r\n        subscriber.complete();\r\n        return;\r\n    }\r\n    var key = keys[index];\r\n    subscriber.next([key, obj[key]]);\r\n    state.index = index + 1;\r\n    this.schedule(state);\r\n}\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar PairsObservable = (function (_super) {\r\n    __extends(PairsObservable, _super);\r\n    function PairsObservable(obj, scheduler) {\r\n        _super.call(this);\r\n        this.obj = obj;\r\n        this.scheduler = scheduler;\r\n        this.keys = Object.keys(obj);\r\n    }\r\n    /**\r\n     * Convert an object into an observable sequence of [key, value] pairs\r\n     * using an optional IScheduler to enumerate the object.\r\n     *\r\n     * @example <caption>Converts a javascript object to an Observable</caption>\r\n     * var obj = {\r\n     *   foo: 42,\r\n     *   bar: 56,\r\n     *   baz: 78\r\n     * };\r\n     *\r\n     * var source = Rx.Observable.pairs(obj);\r\n     *\r\n     * var subscription = source.subscribe(\r\n     *   function (x) {\r\n     *     console.log('Next: %s', x);\r\n     *   },\r\n     *   function (err) {\r\n     *     console.log('Error: %s', err);\r\n     *   },\r\n     *   function () {\r\n     *     console.log('Completed');\r\n     *   });\r\n     *\r\n     * @param {Object} obj The object to inspect and turn into an\r\n     * Observable sequence.\r\n     * @param {Scheduler} [scheduler] An optional IScheduler to run the\r\n     * enumeration of the input sequence on.\r\n     * @returns {(Observable<Array<string | T>>)} An observable sequence of\r\n     * [key, value] pairs from the object.\r\n     */\r\n    PairsObservable.create = function (obj, scheduler) {\r\n        return new PairsObservable(obj, scheduler);\r\n    };\r\n    PairsObservable.prototype._subscribe = function (subscriber) {\r\n        var _a = this, keys = _a.keys, scheduler = _a.scheduler;\r\n        var length = keys.length;\r\n        if (scheduler) {\r\n            return scheduler.schedule(dispatch, 0, {\r\n                obj: this.obj, keys: keys, length: length, index: 0, subscriber: subscriber\r\n            });\r\n        }\r\n        else {\r\n            for (var idx = 0; idx < length; idx++) {\r\n                var key = keys[idx];\r\n                subscriber.next([key, this.obj[key]]);\r\n            }\r\n            subscriber.complete();\r\n        }\r\n    };\r\n    return PairsObservable;\r\n}(Observable_1.Observable));\r\nexports.PairsObservable = PairsObservable;\r\n//# sourceMappingURL=PairsObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/PairsObservable.js\n// module id = 841\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar RangeObservable = (function (_super) {\r\n    __extends(RangeObservable, _super);\r\n    function RangeObservable(start, count, scheduler) {\r\n        _super.call(this);\r\n        this.start = start;\r\n        this._count = count;\r\n        this.scheduler = scheduler;\r\n    }\r\n    /**\r\n     * Creates an Observable that emits a sequence of numbers within a specified\r\n     * range.\r\n     *\r\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\r\n     *\r\n     * <img src=\"./img/range.png\" width=\"100%\">\r\n     *\r\n     * `range` operator emits a range of sequential integers, in order, where you\r\n     * select the `start` of the range and its `length`. By default, uses no\r\n     * IScheduler and just delivers the notifications synchronously, but may use\r\n     * an optional IScheduler to regulate those deliveries.\r\n     *\r\n     * @example <caption>Emits the numbers 1 to 10</caption>\r\n     * var numbers = Rx.Observable.range(1, 10);\r\n     * numbers.subscribe(x => console.log(x));\r\n     *\r\n     * @see {@link timer}\r\n     * @see {@link interval}\r\n     *\r\n     * @param {number} [start=0] The value of the first integer in the sequence.\r\n     * @param {number} [count=0] The number of sequential integers to generate.\r\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\r\n     * the emissions of the notifications.\r\n     * @return {Observable} An Observable of numbers that emits a finite range of\r\n     * sequential integers.\r\n     * @static true\r\n     * @name range\r\n     * @owner Observable\r\n     */\r\n    RangeObservable.create = function (start, count, scheduler) {\r\n        if (start === void 0) { start = 0; }\r\n        if (count === void 0) { count = 0; }\r\n        return new RangeObservable(start, count, scheduler);\r\n    };\r\n    RangeObservable.dispatch = function (state) {\r\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\r\n        if (index >= count) {\r\n            subscriber.complete();\r\n            return;\r\n        }\r\n        subscriber.next(start);\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        state.index = index + 1;\r\n        state.start = start + 1;\r\n        this.schedule(state);\r\n    };\r\n    RangeObservable.prototype._subscribe = function (subscriber) {\r\n        var index = 0;\r\n        var start = this.start;\r\n        var count = this._count;\r\n        var scheduler = this.scheduler;\r\n        if (scheduler) {\r\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\r\n                index: index, count: count, start: start, subscriber: subscriber\r\n            });\r\n        }\r\n        else {\r\n            do {\r\n                if (index++ >= count) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n                subscriber.next(start++);\r\n                if (subscriber.closed) {\r\n                    break;\r\n                }\r\n            } while (true);\r\n        }\r\n    };\r\n    return RangeObservable;\r\n}(Observable_1.Observable));\r\nexports.RangeObservable = RangeObservable;\r\n//# sourceMappingURL=RangeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/RangeObservable.js\n// module id = 842\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar asap_1 = require('../scheduler/asap');\r\nvar isNumeric_1 = require('../util/isNumeric');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar SubscribeOnObservable = (function (_super) {\r\n    __extends(SubscribeOnObservable, _super);\r\n    function SubscribeOnObservable(source, delayTime, scheduler) {\r\n        if (delayTime === void 0) { delayTime = 0; }\r\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\r\n        _super.call(this);\r\n        this.source = source;\r\n        this.delayTime = delayTime;\r\n        this.scheduler = scheduler;\r\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\r\n            this.delayTime = 0;\r\n        }\r\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\r\n            this.scheduler = asap_1.asap;\r\n        }\r\n    }\r\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\r\n        if (delay === void 0) { delay = 0; }\r\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\r\n        return new SubscribeOnObservable(source, delay, scheduler);\r\n    };\r\n    SubscribeOnObservable.dispatch = function (arg) {\r\n        var source = arg.source, subscriber = arg.subscriber;\r\n        return this.add(source.subscribe(subscriber));\r\n    };\r\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\r\n        var delay = this.delayTime;\r\n        var source = this.source;\r\n        var scheduler = this.scheduler;\r\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\r\n            source: source, subscriber: subscriber\r\n        });\r\n    };\r\n    return SubscribeOnObservable;\r\n}(Observable_1.Observable));\r\nexports.SubscribeOnObservable = SubscribeOnObservable;\r\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/SubscribeOnObservable.js\n// module id = 843\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar isNumeric_1 = require('../util/isNumeric');\r\nvar Observable_1 = require('../Observable');\r\nvar async_1 = require('../scheduler/async');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nvar isDate_1 = require('../util/isDate');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar TimerObservable = (function (_super) {\r\n    __extends(TimerObservable, _super);\r\n    function TimerObservable(dueTime, period, scheduler) {\r\n        if (dueTime === void 0) { dueTime = 0; }\r\n        _super.call(this);\r\n        this.period = -1;\r\n        this.dueTime = 0;\r\n        if (isNumeric_1.isNumeric(period)) {\r\n            this.period = Number(period) < 1 && 1 || Number(period);\r\n        }\r\n        else if (isScheduler_1.isScheduler(period)) {\r\n            scheduler = period;\r\n        }\r\n        if (!isScheduler_1.isScheduler(scheduler)) {\r\n            scheduler = async_1.async;\r\n        }\r\n        this.scheduler = scheduler;\r\n        this.dueTime = isDate_1.isDate(dueTime) ?\r\n            (+dueTime - this.scheduler.now()) :\r\n            dueTime;\r\n    }\r\n    /**\r\n     * Creates an Observable that starts emitting after an `initialDelay` and\r\n     * emits ever increasing numbers after each `period` of time thereafter.\r\n     *\r\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\r\n     * should the emissions start.</span>\r\n     *\r\n     * <img src=\"./img/timer.png\" width=\"100%\">\r\n     *\r\n     * `timer` returns an Observable that emits an infinite sequence of ascending\r\n     * integers, with a constant interval of time, `period` of your choosing\r\n     * between those emissions. The first emission happens after the specified\r\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\r\n     * operator uses the `async` IScheduler to provide a notion of time, but you\r\n     * may pass any IScheduler to it. If `period` is not specified, the output\r\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\r\n     * sequence.\r\n     *\r\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\r\n     * var numbers = Rx.Observable.timer(3000, 1000);\r\n     * numbers.subscribe(x => console.log(x));\r\n     *\r\n     * @example <caption>Emits one number after five seconds</caption>\r\n     * var numbers = Rx.Observable.timer(5000);\r\n     * numbers.subscribe(x => console.log(x));\r\n     *\r\n     * @see {@link interval}\r\n     * @see {@link delay}\r\n     *\r\n     * @param {number|Date} initialDelay The initial delay time to wait before\r\n     * emitting the first value of `0`.\r\n     * @param {number} [period] The period of time between emissions of the\r\n     * subsequent numbers.\r\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\r\n     * the emission of values, and providing a notion of \"time\".\r\n     * @return {Observable} An Observable that emits a `0` after the\r\n     * `initialDelay` and ever increasing numbers after each `period` of time\r\n     * thereafter.\r\n     * @static true\r\n     * @name timer\r\n     * @owner Observable\r\n     */\r\n    TimerObservable.create = function (initialDelay, period, scheduler) {\r\n        if (initialDelay === void 0) { initialDelay = 0; }\r\n        return new TimerObservable(initialDelay, period, scheduler);\r\n    };\r\n    TimerObservable.dispatch = function (state) {\r\n        var index = state.index, period = state.period, subscriber = state.subscriber;\r\n        var action = this;\r\n        subscriber.next(index);\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        else if (period === -1) {\r\n            return subscriber.complete();\r\n        }\r\n        state.index = index + 1;\r\n        action.schedule(state, period);\r\n    };\r\n    TimerObservable.prototype._subscribe = function (subscriber) {\r\n        var index = 0;\r\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\r\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\r\n            index: index, period: period, subscriber: subscriber\r\n        });\r\n    };\r\n    return TimerObservable;\r\n}(Observable_1.Observable));\r\nexports.TimerObservable = TimerObservable;\r\n//# sourceMappingURL=TimerObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/TimerObservable.js\n// module id = 844\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar UsingObservable = (function (_super) {\r\n    __extends(UsingObservable, _super);\r\n    function UsingObservable(resourceFactory, observableFactory) {\r\n        _super.call(this);\r\n        this.resourceFactory = resourceFactory;\r\n        this.observableFactory = observableFactory;\r\n    }\r\n    UsingObservable.create = function (resourceFactory, observableFactory) {\r\n        return new UsingObservable(resourceFactory, observableFactory);\r\n    };\r\n    UsingObservable.prototype._subscribe = function (subscriber) {\r\n        var _a = this, resourceFactory = _a.resourceFactory, observableFactory = _a.observableFactory;\r\n        var resource;\r\n        try {\r\n            resource = resourceFactory();\r\n            return new UsingSubscriber(subscriber, resource, observableFactory);\r\n        }\r\n        catch (err) {\r\n            subscriber.error(err);\r\n        }\r\n    };\r\n    return UsingObservable;\r\n}(Observable_1.Observable));\r\nexports.UsingObservable = UsingObservable;\r\nvar UsingSubscriber = (function (_super) {\r\n    __extends(UsingSubscriber, _super);\r\n    function UsingSubscriber(destination, resource, observableFactory) {\r\n        _super.call(this, destination);\r\n        this.resource = resource;\r\n        this.observableFactory = observableFactory;\r\n        destination.add(resource);\r\n        this.tryUse();\r\n    }\r\n    UsingSubscriber.prototype.tryUse = function () {\r\n        try {\r\n            var source = this.observableFactory.call(this, this.resource);\r\n            if (source) {\r\n                this.add(subscribeToResult_1.subscribeToResult(this, source));\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._error(err);\r\n        }\r\n    };\r\n    return UsingSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=UsingObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/UsingObservable.js\n// module id = 845\n// module chunks = 4","\"use strict\";\r\nvar BoundCallbackObservable_1 = require('./BoundCallbackObservable');\r\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\r\n//# sourceMappingURL=bindCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/bindCallback.js\n// module id = 846\n// module chunks = 4","\"use strict\";\r\nvar BoundNodeCallbackObservable_1 = require('./BoundNodeCallbackObservable');\r\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\r\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/bindNodeCallback.js\n// module id = 847\n// module chunks = 4","\"use strict\";\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nvar isArray_1 = require('../util/isArray');\r\nvar ArrayObservable_1 = require('./ArrayObservable');\r\nvar combineLatest_1 = require('../operator/combineLatest');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Combines multiple Observables to create an Observable whose values are\r\n * calculated from the latest values of each of its input Observables.\r\n *\r\n * <span class=\"informal\">Whenever any input Observable emits a value, it\r\n * computes a formula using the latest values from all the inputs, then emits\r\n * the output of that formula.</span>\r\n *\r\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\r\n *\r\n * `combineLatest` combines the values from all the Observables passed as\r\n * arguments. This is done by subscribing to each Observable in order and,\r\n * whenever any Observable emits, collecting an array of the most recent\r\n * values from each Observable. So if you pass `n` Observables to operator,\r\n * returned Observable will always emit an array of `n` values, in order\r\n * corresponding to order of passed Observables (value from the first Observable\r\n * on the first place and so on).\r\n *\r\n * Static version of `combineLatest` accepts either an array of Observables\r\n * or each Observable can be put directly as an argument. Note that array of\r\n * Observables is good choice, if you don't know beforehand how many Observables\r\n * you will combine. Passing empty array will result in Observable that\r\n * completes immediately.\r\n *\r\n * To ensure output array has always the same length, `combineLatest` will\r\n * actually wait for all input Observables to emit at least once,\r\n * before it starts emitting results. This means if some Observable emits\r\n * values before other Observables started emitting, all that values but last\r\n * will be lost. On the other hand, is some Observable does not emit value but\r\n * completes, resulting Observable will complete at the same moment without\r\n * emitting anything, since it will be now impossible to include value from\r\n * completed Observable in resulting array. Also, if some input Observable does\r\n * not emit any value and never completes, `combineLatest` will also never emit\r\n * and never complete, since, again, it will wait for all streams to emit some\r\n * value.\r\n *\r\n * If at least one Observable was passed to `combineLatest` and all passed Observables\r\n * emitted something, resulting Observable will complete when all combined\r\n * streams complete. So even if some Observable completes, result of\r\n * `combineLatest` will still emit values when other Observables do. In case\r\n * of completed Observable, its value from now on will always be the last\r\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\r\n * will error immediately as well, and all other Observables will be unsubscribed.\r\n *\r\n * `combineLatest` accepts as optional parameter `project` function, which takes\r\n * as arguments all values that would normally be emitted by resulting Observable.\r\n * `project` can return any kind of value, which will be then emitted by Observable\r\n * instead of default array. Note that `project` does not take as argument that array\r\n * of values, but values themselves. That means default `project` can be imagined\r\n * as function that takes all its arguments and puts them into an array.\r\n *\r\n *\r\n * @example <caption>Combine two timer Observables</caption>\r\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\r\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\r\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\r\n * combinedTimers.subscribe(value => console.log(value));\r\n * // Logs\r\n * // [0, 0] after 0.5s\r\n * // [1, 0] after 1s\r\n * // [1, 1] after 1.5s\r\n * // [2, 1] after 2s\r\n *\r\n *\r\n * @example <caption>Combine an array of Observables</caption>\r\n * const observables = [1, 5, 10].map(\r\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\r\n * );\r\n * const combined = Rx.Observable.combineLatest(observables);\r\n * combined.subscribe(value => console.log(value));\r\n * // Logs\r\n * // [0, 0, 0] immediately\r\n * // [1, 0, 0] after 1s\r\n * // [1, 5, 0] after 5s\r\n * // [1, 5, 10] after 10s\r\n *\r\n *\r\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\r\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\r\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\r\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\r\n * bmi.subscribe(x => console.log('BMI is ' + x));\r\n *\r\n * // With output to console:\r\n * // BMI is 24.212293388429753\r\n * // BMI is 23.93948099205209\r\n * // BMI is 23.671253629592222\r\n *\r\n *\r\n * @see {@link combineAll}\r\n * @see {@link merge}\r\n * @see {@link withLatestFrom}\r\n *\r\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\r\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\r\n * More than one input Observables may be given as arguments\r\n * or an array of Observables may be given as the first argument.\r\n * @param {function} [project] An optional function to project the values from\r\n * the combined latest values into a new value on the output Observable.\r\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\r\n * each input Observable.\r\n * @return {Observable} An Observable of projected values from the most recent\r\n * values from each input Observable, or an array of the most recent values from\r\n * each input Observable.\r\n * @static true\r\n * @name combineLatest\r\n * @owner Observable\r\n */\r\nfunction combineLatest() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    var project = null;\r\n    var scheduler = null;\r\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\r\n        scheduler = observables.pop();\r\n    }\r\n    if (typeof observables[observables.length - 1] === 'function') {\r\n        project = observables.pop();\r\n    }\r\n    // if the first and only other argument besides the resultSelector is an array\r\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\r\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\r\n        observables = observables[0];\r\n    }\r\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\r\n}\r\nexports.combineLatest = combineLatest;\r\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/combineLatest.js\n// module id = 848\n// module chunks = 4","\"use strict\";\r\nvar concat_1 = require('../operator/concat');\r\nexports.concat = concat_1.concatStatic;\r\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/concat.js\n// module id = 849\n// module chunks = 4","\"use strict\";\r\nvar DeferObservable_1 = require('./DeferObservable');\r\nexports.defer = DeferObservable_1.DeferObservable.create;\r\n//# sourceMappingURL=defer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/defer.js\n// module id = 850\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../../Subject');\r\nvar Subscriber_1 = require('../../Subscriber');\r\nvar Observable_1 = require('../../Observable');\r\nvar Subscription_1 = require('../../Subscription');\r\nvar root_1 = require('../../util/root');\r\nvar ReplaySubject_1 = require('../../ReplaySubject');\r\nvar tryCatch_1 = require('../../util/tryCatch');\r\nvar errorObject_1 = require('../../util/errorObject');\r\nvar assign_1 = require('../../util/assign');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar WebSocketSubject = (function (_super) {\r\n    __extends(WebSocketSubject, _super);\r\n    function WebSocketSubject(urlConfigOrSource, destination) {\r\n        if (urlConfigOrSource instanceof Observable_1.Observable) {\r\n            _super.call(this, destination, urlConfigOrSource);\r\n        }\r\n        else {\r\n            _super.call(this);\r\n            this.WebSocketCtor = root_1.root.WebSocket;\r\n            this._output = new Subject_1.Subject();\r\n            if (typeof urlConfigOrSource === 'string') {\r\n                this.url = urlConfigOrSource;\r\n            }\r\n            else {\r\n                // WARNING: config object could override important members here.\r\n                assign_1.assign(this, urlConfigOrSource);\r\n            }\r\n            if (!this.WebSocketCtor) {\r\n                throw new Error('no WebSocket constructor can be found');\r\n            }\r\n            this.destination = new ReplaySubject_1.ReplaySubject();\r\n        }\r\n    }\r\n    WebSocketSubject.prototype.resultSelector = function (e) {\r\n        return JSON.parse(e.data);\r\n    };\r\n    /**\r\n     * Wrapper around the w3c-compatible WebSocket object provided by the browser.\r\n     *\r\n     * @example <caption>Wraps browser WebSocket</caption>\r\n     *\r\n     * let socket$ = Observable.webSocket('ws://localhost:8081');\r\n     *\r\n     * socket$.subscribe(\r\n     *    (msg) => console.log('message received: ' + msg),\r\n     *    (err) => console.log(err),\r\n     *    () => console.log('complete')\r\n     *  );\r\n     *\r\n     * socket$.next(JSON.stringify({ op: 'hello' }));\r\n     *\r\n     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>\r\n     *\r\n     * import { w3cwebsocket } from 'websocket';\r\n     *\r\n     * let socket$ = Observable.webSocket({\r\n     *   url: 'ws://localhost:8081',\r\n     *   WebSocketCtor: w3cwebsocket\r\n     * });\r\n     *\r\n     * socket$.subscribe(\r\n     *    (msg) => console.log('message received: ' + msg),\r\n     *    (err) => console.log(err),\r\n     *    () => console.log('complete')\r\n     *  );\r\n     *\r\n     * socket$.next(JSON.stringify({ op: 'hello' }));\r\n     *\r\n     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object\r\n     * @return {WebSocketSubject}\r\n     * @static true\r\n     * @name webSocket\r\n     * @owner Observable\r\n     */\r\n    WebSocketSubject.create = function (urlConfigOrSource) {\r\n        return new WebSocketSubject(urlConfigOrSource);\r\n    };\r\n    WebSocketSubject.prototype.lift = function (operator) {\r\n        var sock = new WebSocketSubject(this, this.destination);\r\n        sock.operator = operator;\r\n        return sock;\r\n    };\r\n    WebSocketSubject.prototype._resetState = function () {\r\n        this.socket = null;\r\n        if (!this.source) {\r\n            this.destination = new ReplaySubject_1.ReplaySubject();\r\n        }\r\n        this._output = new Subject_1.Subject();\r\n    };\r\n    // TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures\r\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\r\n        var self = this;\r\n        return new Observable_1.Observable(function (observer) {\r\n            var result = tryCatch_1.tryCatch(subMsg)();\r\n            if (result === errorObject_1.errorObject) {\r\n                observer.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                self.next(result);\r\n            }\r\n            var subscription = self.subscribe(function (x) {\r\n                var result = tryCatch_1.tryCatch(messageFilter)(x);\r\n                if (result === errorObject_1.errorObject) {\r\n                    observer.error(errorObject_1.errorObject.e);\r\n                }\r\n                else if (result) {\r\n                    observer.next(x);\r\n                }\r\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\r\n            return function () {\r\n                var result = tryCatch_1.tryCatch(unsubMsg)();\r\n                if (result === errorObject_1.errorObject) {\r\n                    observer.error(errorObject_1.errorObject.e);\r\n                }\r\n                else {\r\n                    self.next(result);\r\n                }\r\n                subscription.unsubscribe();\r\n            };\r\n        });\r\n    };\r\n    WebSocketSubject.prototype._connectSocket = function () {\r\n        var _this = this;\r\n        var WebSocketCtor = this.WebSocketCtor;\r\n        var observer = this._output;\r\n        var socket = null;\r\n        try {\r\n            socket = this.protocol ?\r\n                new WebSocketCtor(this.url, this.protocol) :\r\n                new WebSocketCtor(this.url);\r\n            this.socket = socket;\r\n            if (this.binaryType) {\r\n                this.socket.binaryType = this.binaryType;\r\n            }\r\n        }\r\n        catch (e) {\r\n            observer.error(e);\r\n            return;\r\n        }\r\n        var subscription = new Subscription_1.Subscription(function () {\r\n            _this.socket = null;\r\n            if (socket && socket.readyState === 1) {\r\n                socket.close();\r\n            }\r\n        });\r\n        socket.onopen = function (e) {\r\n            var openObserver = _this.openObserver;\r\n            if (openObserver) {\r\n                openObserver.next(e);\r\n            }\r\n            var queue = _this.destination;\r\n            _this.destination = Subscriber_1.Subscriber.create(function (x) { return socket.readyState === 1 && socket.send(x); }, function (e) {\r\n                var closingObserver = _this.closingObserver;\r\n                if (closingObserver) {\r\n                    closingObserver.next(undefined);\r\n                }\r\n                if (e && e.code) {\r\n                    socket.close(e.code, e.reason);\r\n                }\r\n                else {\r\n                    observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, ' +\r\n                        'and an optional reason: { code: number, reason: string }'));\r\n                }\r\n                _this._resetState();\r\n            }, function () {\r\n                var closingObserver = _this.closingObserver;\r\n                if (closingObserver) {\r\n                    closingObserver.next(undefined);\r\n                }\r\n                socket.close();\r\n                _this._resetState();\r\n            });\r\n            if (queue && queue instanceof ReplaySubject_1.ReplaySubject) {\r\n                subscription.add(queue.subscribe(_this.destination));\r\n            }\r\n        };\r\n        socket.onerror = function (e) {\r\n            _this._resetState();\r\n            observer.error(e);\r\n        };\r\n        socket.onclose = function (e) {\r\n            _this._resetState();\r\n            var closeObserver = _this.closeObserver;\r\n            if (closeObserver) {\r\n                closeObserver.next(e);\r\n            }\r\n            if (e.wasClean) {\r\n                observer.complete();\r\n            }\r\n            else {\r\n                observer.error(e);\r\n            }\r\n        };\r\n        socket.onmessage = function (e) {\r\n            var result = tryCatch_1.tryCatch(_this.resultSelector)(e);\r\n            if (result === errorObject_1.errorObject) {\r\n                observer.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                observer.next(result);\r\n            }\r\n        };\r\n    };\r\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\r\n        var _this = this;\r\n        var source = this.source;\r\n        if (source) {\r\n            return source.subscribe(subscriber);\r\n        }\r\n        if (!this.socket) {\r\n            this._connectSocket();\r\n        }\r\n        var subscription = new Subscription_1.Subscription();\r\n        subscription.add(this._output.subscribe(subscriber));\r\n        subscription.add(function () {\r\n            var socket = _this.socket;\r\n            if (_this._output.observers.length === 0) {\r\n                if (socket && socket.readyState === 1) {\r\n                    socket.close();\r\n                }\r\n                _this._resetState();\r\n            }\r\n        });\r\n        return subscription;\r\n    };\r\n    WebSocketSubject.prototype.unsubscribe = function () {\r\n        var _a = this, source = _a.source, socket = _a.socket;\r\n        if (socket && socket.readyState === 1) {\r\n            socket.close();\r\n            this._resetState();\r\n        }\r\n        _super.prototype.unsubscribe.call(this);\r\n        if (!source) {\r\n            this.destination = new ReplaySubject_1.ReplaySubject();\r\n        }\r\n    };\r\n    return WebSocketSubject;\r\n}(Subject_1.AnonymousSubject));\r\nexports.WebSocketSubject = WebSocketSubject;\r\n//# sourceMappingURL=WebSocketSubject.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/WebSocketSubject.js\n// module id = 851\n// module chunks = 4","\"use strict\";\r\nvar AjaxObservable_1 = require('./AjaxObservable');\r\nexports.ajax = AjaxObservable_1.AjaxObservable.create;\r\n//# sourceMappingURL=ajax.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/ajax.js\n// module id = 852\n// module chunks = 4","\"use strict\";\r\nvar WebSocketSubject_1 = require('./WebSocketSubject');\r\nexports.webSocket = WebSocketSubject_1.WebSocketSubject.create;\r\n//# sourceMappingURL=webSocket.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/dom/webSocket.js\n// module id = 853\n// module chunks = 4","\"use strict\";\r\nvar FromEventObservable_1 = require('./FromEventObservable');\r\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\r\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromEvent.js\n// module id = 854\n// module chunks = 4","\"use strict\";\r\nvar FromEventPatternObservable_1 = require('./FromEventPatternObservable');\r\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\r\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/fromEventPattern.js\n// module id = 855\n// module chunks = 4","\"use strict\";\r\nvar IfObservable_1 = require('./IfObservable');\r\nexports._if = IfObservable_1.IfObservable.create;\r\n//# sourceMappingURL=if.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/if.js\n// module id = 856\n// module chunks = 4","\"use strict\";\r\nvar IntervalObservable_1 = require('./IntervalObservable');\r\nexports.interval = IntervalObservable_1.IntervalObservable.create;\r\n//# sourceMappingURL=interval.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/interval.js\n// module id = 857\n// module chunks = 4","\"use strict\";\r\nvar NeverObservable_1 = require('./NeverObservable');\r\nexports.never = NeverObservable_1.NeverObservable.create;\r\n//# sourceMappingURL=never.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/never.js\n// module id = 858\n// module chunks = 4","\"use strict\";\r\nvar PairsObservable_1 = require('./PairsObservable');\r\nexports.pairs = PairsObservable_1.PairsObservable.create;\r\n//# sourceMappingURL=pairs.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/pairs.js\n// module id = 859\n// module chunks = 4","\"use strict\";\r\nvar RangeObservable_1 = require('./RangeObservable');\r\nexports.range = RangeObservable_1.RangeObservable.create;\r\n//# sourceMappingURL=range.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/range.js\n// module id = 860\n// module chunks = 4","\"use strict\";\r\nvar ErrorObservable_1 = require('./ErrorObservable');\r\nexports._throw = ErrorObservable_1.ErrorObservable.create;\r\n//# sourceMappingURL=throw.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/throw.js\n// module id = 861\n// module chunks = 4","\"use strict\";\r\nvar TimerObservable_1 = require('./TimerObservable');\r\nexports.timer = TimerObservable_1.TimerObservable.create;\r\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/timer.js\n// module id = 862\n// module chunks = 4","\"use strict\";\r\nvar UsingObservable_1 = require('./UsingObservable');\r\nexports.using = UsingObservable_1.UsingObservable.create;\r\n//# sourceMappingURL=using.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/using.js\n// module id = 863\n// module chunks = 4","\"use strict\";\r\nvar zip_1 = require('../operator/zip');\r\nexports.zip = zip_1.zipStatic;\r\n//# sourceMappingURL=zip.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/observable/zip.js\n// module id = 864\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Ignores source values for a duration determined by another Observable, then\r\n * emits the most recent value from the source Observable, then repeats this\r\n * process.\r\n *\r\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\r\n * duration is determined by a second Observable.</span>\r\n *\r\n * <img src=\"./img/audit.png\" width=\"100%\">\r\n *\r\n * `audit` is similar to `throttle`, but emits the last value from the silenced\r\n * time window, instead of the first value. `audit` emits the most recent value\r\n * from the source Observable on the output Observable as soon as its internal\r\n * timer becomes disabled, and ignores source values while the timer is enabled.\r\n * Initially, the timer is disabled. As soon as the first source value arrives,\r\n * the timer is enabled by calling the `durationSelector` function with the\r\n * source value, which returns the \"duration\" Observable. When the duration\r\n * Observable emits a value or completes, the timer is disabled, then the most\r\n * recent source value is emitted on the output Observable, and this process\r\n * repeats for the next source value.\r\n *\r\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounce}\r\n * @see {@link delayWhen}\r\n * @see {@link sample}\r\n * @see {@link throttle}\r\n *\r\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\r\n * that receives a value from the source Observable, for computing the silencing\r\n * duration, returned as an Observable or a Promise.\r\n * @return {Observable<T>} An Observable that performs rate-limiting of\r\n * emissions from the source Observable.\r\n * @method audit\r\n * @owner Observable\r\n */\r\nfunction audit(durationSelector) {\r\n    return this.lift(new AuditOperator(durationSelector));\r\n}\r\nexports.audit = audit;\r\nvar AuditOperator = (function () {\r\n    function AuditOperator(durationSelector) {\r\n        this.durationSelector = durationSelector;\r\n    }\r\n    AuditOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\r\n    };\r\n    return AuditOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar AuditSubscriber = (function (_super) {\r\n    __extends(AuditSubscriber, _super);\r\n    function AuditSubscriber(destination, durationSelector) {\r\n        _super.call(this, destination);\r\n        this.durationSelector = durationSelector;\r\n        this.hasValue = false;\r\n    }\r\n    AuditSubscriber.prototype._next = function (value) {\r\n        this.value = value;\r\n        this.hasValue = true;\r\n        if (!this.throttled) {\r\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\r\n            if (duration === errorObject_1.errorObject) {\r\n                this.destination.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\r\n            }\r\n        }\r\n    };\r\n    AuditSubscriber.prototype.clearThrottle = function () {\r\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\r\n        if (throttled) {\r\n            this.remove(throttled);\r\n            this.throttled = null;\r\n            throttled.unsubscribe();\r\n        }\r\n        if (hasValue) {\r\n            this.value = null;\r\n            this.hasValue = false;\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\r\n        this.clearThrottle();\r\n    };\r\n    AuditSubscriber.prototype.notifyComplete = function () {\r\n        this.clearThrottle();\r\n    };\r\n    return AuditSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=audit.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/audit.js\n// module id = 865\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Ignores source values for `duration` milliseconds, then emits the most recent\r\n * value from the source Observable, then repeats this process.\r\n *\r\n * <span class=\"informal\">When it sees a source values, it ignores that plus\r\n * the next ones for `duration` milliseconds, and then it emits the most recent\r\n * value from the source.</span>\r\n *\r\n * <img src=\"./img/auditTime.png\" width=\"100%\">\r\n *\r\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\r\n * silenced time window, instead of the first value. `auditTime` emits the most\r\n * recent value from the source Observable on the output Observable as soon as\r\n * its internal timer becomes disabled, and ignores source values while the\r\n * timer is enabled. Initially, the timer is disabled. As soon as the first\r\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\r\n * the time unit determined internally by the optional `scheduler`) has passed,\r\n * the timer is disabled, then the most recent source value is emitted on the\r\n * output Observable, and this process repeats for the next source value.\r\n * Optionally takes a {@link IScheduler} for managing timers.\r\n *\r\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.auditTime(1000);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sampleTime}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} duration Time to wait before emitting the most recent source\r\n * value, measured in milliseconds or the time unit determined internally\r\n * by the optional `scheduler`.\r\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\r\n * managing the timers that handle the rate-limiting behavior.\r\n * @return {Observable<T>} An Observable that performs rate-limiting of\r\n * emissions from the source Observable.\r\n * @method auditTime\r\n * @owner Observable\r\n */\r\nfunction auditTime(duration, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    return this.lift(new AuditTimeOperator(duration, scheduler));\r\n}\r\nexports.auditTime = auditTime;\r\nvar AuditTimeOperator = (function () {\r\n    function AuditTimeOperator(duration, scheduler) {\r\n        this.duration = duration;\r\n        this.scheduler = scheduler;\r\n    }\r\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new AuditTimeSubscriber(subscriber, this.duration, this.scheduler));\r\n    };\r\n    return AuditTimeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar AuditTimeSubscriber = (function (_super) {\r\n    __extends(AuditTimeSubscriber, _super);\r\n    function AuditTimeSubscriber(destination, duration, scheduler) {\r\n        _super.call(this, destination);\r\n        this.duration = duration;\r\n        this.scheduler = scheduler;\r\n        this.hasValue = false;\r\n    }\r\n    AuditTimeSubscriber.prototype._next = function (value) {\r\n        this.value = value;\r\n        this.hasValue = true;\r\n        if (!this.throttled) {\r\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, this));\r\n        }\r\n    };\r\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\r\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\r\n        if (throttled) {\r\n            this.remove(throttled);\r\n            this.throttled = null;\r\n            throttled.unsubscribe();\r\n        }\r\n        if (hasValue) {\r\n            this.value = null;\r\n            this.hasValue = false;\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    return AuditTimeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nfunction dispatchNext(subscriber) {\r\n    subscriber.clearThrottle();\r\n}\r\n//# sourceMappingURL=auditTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/auditTime.js\n// module id = 866\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Buffers the source Observable values until `closingNotifier` emits.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when another Observable emits.</span>\r\n *\r\n * <img src=\"./img/buffer.png\" width=\"100%\">\r\n *\r\n * Buffers the incoming Observable values until the given `closingNotifier`\r\n * Observable emits a value, at which point it emits the buffer on the output\r\n * Observable and starts a new buffer internally, awaiting the next time\r\n * `closingNotifier` emits.\r\n *\r\n * @example <caption>On every click, emit array of most recent interval events</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var interval = Rx.Observable.interval(1000);\r\n * var buffered = interval.buffer(clicks);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link window}\r\n *\r\n * @param {Observable<any>} closingNotifier An Observable that signals the\r\n * buffer to be emitted on the output Observable.\r\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\r\n * values.\r\n * @method buffer\r\n * @owner Observable\r\n */\r\nfunction buffer(closingNotifier) {\r\n    return this.lift(new BufferOperator(closingNotifier));\r\n}\r\nexports.buffer = buffer;\r\nvar BufferOperator = (function () {\r\n    function BufferOperator(closingNotifier) {\r\n        this.closingNotifier = closingNotifier;\r\n    }\r\n    BufferOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\r\n    };\r\n    return BufferOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferSubscriber = (function (_super) {\r\n    __extends(BufferSubscriber, _super);\r\n    function BufferSubscriber(destination, closingNotifier) {\r\n        _super.call(this, destination);\r\n        this.buffer = [];\r\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\r\n    }\r\n    BufferSubscriber.prototype._next = function (value) {\r\n        this.buffer.push(value);\r\n    };\r\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var buffer = this.buffer;\r\n        this.buffer = [];\r\n        this.destination.next(buffer);\r\n    };\r\n    return BufferSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=buffer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/buffer.js\n// module id = 867\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Buffers the source Observable values until the size hits the maximum\r\n * `bufferSize` given.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * that array only when its size reaches `bufferSize`.</span>\r\n *\r\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\r\n *\r\n * Buffers a number of values from the source Observable by `bufferSize` then\r\n * emits the buffer and clears it, and starts a new buffer each\r\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\r\n * `null`, then new buffers are started immediately at the start of the source\r\n * and when each buffer closes and is emitted.\r\n *\r\n * @example <caption>Emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>On every click, emit the last two click events as an array</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferCount(2, 1);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link pairwise}\r\n * @see {@link windowCount}\r\n *\r\n * @param {number} bufferSize The maximum size of the buffer emitted.\r\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\r\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\r\n * on every other value from the source. A new buffer is started at the\r\n * beginning of the source by default.\r\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\r\n * @method bufferCount\r\n * @owner Observable\r\n */\r\nfunction bufferCount(bufferSize, startBufferEvery) {\r\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\r\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\r\n}\r\nexports.bufferCount = bufferCount;\r\nvar BufferCountOperator = (function () {\r\n    function BufferCountOperator(bufferSize, startBufferEvery) {\r\n        this.bufferSize = bufferSize;\r\n        this.startBufferEvery = startBufferEvery;\r\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\r\n            this.subscriberClass = BufferCountSubscriber;\r\n        }\r\n        else {\r\n            this.subscriberClass = BufferSkipCountSubscriber;\r\n        }\r\n    }\r\n    BufferCountOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\r\n    };\r\n    return BufferCountOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferCountSubscriber = (function (_super) {\r\n    __extends(BufferCountSubscriber, _super);\r\n    function BufferCountSubscriber(destination, bufferSize) {\r\n        _super.call(this, destination);\r\n        this.bufferSize = bufferSize;\r\n        this.buffer = [];\r\n    }\r\n    BufferCountSubscriber.prototype._next = function (value) {\r\n        var buffer = this.buffer;\r\n        buffer.push(value);\r\n        if (buffer.length == this.bufferSize) {\r\n            this.destination.next(buffer);\r\n            this.buffer = [];\r\n        }\r\n    };\r\n    BufferCountSubscriber.prototype._complete = function () {\r\n        var buffer = this.buffer;\r\n        if (buffer.length > 0) {\r\n            this.destination.next(buffer);\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    return BufferCountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferSkipCountSubscriber = (function (_super) {\r\n    __extends(BufferSkipCountSubscriber, _super);\r\n    function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {\r\n        _super.call(this, destination);\r\n        this.bufferSize = bufferSize;\r\n        this.startBufferEvery = startBufferEvery;\r\n        this.buffers = [];\r\n        this.count = 0;\r\n    }\r\n    BufferSkipCountSubscriber.prototype._next = function (value) {\r\n        var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;\r\n        this.count++;\r\n        if (count % startBufferEvery === 0) {\r\n            buffers.push([]);\r\n        }\r\n        for (var i = buffers.length; i--;) {\r\n            var buffer = buffers[i];\r\n            buffer.push(value);\r\n            if (buffer.length === bufferSize) {\r\n                buffers.splice(i, 1);\r\n                this.destination.next(buffer);\r\n            }\r\n        }\r\n    };\r\n    BufferSkipCountSubscriber.prototype._complete = function () {\r\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\r\n        while (buffers.length > 0) {\r\n            var buffer = buffers.shift();\r\n            if (buffer.length > 0) {\r\n                destination.next(buffer);\r\n            }\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    return BufferSkipCountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=bufferCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferCount.js\n// module id = 868\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Buffers the source Observable values for a specific time period.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array, and emits\r\n * those arrays periodically in time.</span>\r\n *\r\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\r\n *\r\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\r\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\r\n * resets the buffer every `bufferTimeSpan` milliseconds. If\r\n * `bufferCreationInterval` is given, this operator opens the buffer every\r\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\r\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\r\n * `maxBufferSize` is specified, the buffer will be closed either after\r\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\r\n *\r\n * @example <caption>Every second, emit an array of the recent click events</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferTime(1000);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferTime(2000, 5000);\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferToggle}\r\n * @see {@link bufferWhen}\r\n * @see {@link windowTime}\r\n *\r\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\r\n * @param {number} [bufferCreationInterval] The interval at which to start new\r\n * buffers.\r\n * @param {number} [maxBufferSize] The maximum buffer size.\r\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\r\n * intervals that determine buffer boundaries.\r\n * @return {Observable<T[]>} An observable of arrays of buffered values.\r\n * @method bufferTime\r\n * @owner Observable\r\n */\r\nfunction bufferTime(bufferTimeSpan) {\r\n    var length = arguments.length;\r\n    var scheduler = async_1.async;\r\n    if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {\r\n        scheduler = arguments[arguments.length - 1];\r\n        length--;\r\n    }\r\n    var bufferCreationInterval = null;\r\n    if (length >= 2) {\r\n        bufferCreationInterval = arguments[1];\r\n    }\r\n    var maxBufferSize = Number.POSITIVE_INFINITY;\r\n    if (length >= 3) {\r\n        maxBufferSize = arguments[2];\r\n    }\r\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\r\n}\r\nexports.bufferTime = bufferTime;\r\nvar BufferTimeOperator = (function () {\r\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\r\n        this.bufferTimeSpan = bufferTimeSpan;\r\n        this.bufferCreationInterval = bufferCreationInterval;\r\n        this.maxBufferSize = maxBufferSize;\r\n        this.scheduler = scheduler;\r\n    }\r\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\r\n    };\r\n    return BufferTimeOperator;\r\n}());\r\nvar Context = (function () {\r\n    function Context() {\r\n        this.buffer = [];\r\n    }\r\n    return Context;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferTimeSubscriber = (function (_super) {\r\n    __extends(BufferTimeSubscriber, _super);\r\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\r\n        _super.call(this, destination);\r\n        this.bufferTimeSpan = bufferTimeSpan;\r\n        this.bufferCreationInterval = bufferCreationInterval;\r\n        this.maxBufferSize = maxBufferSize;\r\n        this.scheduler = scheduler;\r\n        this.contexts = [];\r\n        var context = this.openContext();\r\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\r\n        if (this.timespanOnly) {\r\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\r\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\r\n        }\r\n        else {\r\n            var closeState = { subscriber: this, context: context };\r\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\r\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\r\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\r\n        }\r\n    }\r\n    BufferTimeSubscriber.prototype._next = function (value) {\r\n        var contexts = this.contexts;\r\n        var len = contexts.length;\r\n        var filledBufferContext;\r\n        for (var i = 0; i < len; i++) {\r\n            var context = contexts[i];\r\n            var buffer = context.buffer;\r\n            buffer.push(value);\r\n            if (buffer.length == this.maxBufferSize) {\r\n                filledBufferContext = context;\r\n            }\r\n        }\r\n        if (filledBufferContext) {\r\n            this.onBufferFull(filledBufferContext);\r\n        }\r\n    };\r\n    BufferTimeSubscriber.prototype._error = function (err) {\r\n        this.contexts.length = 0;\r\n        _super.prototype._error.call(this, err);\r\n    };\r\n    BufferTimeSubscriber.prototype._complete = function () {\r\n        var _a = this, contexts = _a.contexts, destination = _a.destination;\r\n        while (contexts.length > 0) {\r\n            var context = contexts.shift();\r\n            destination.next(context.buffer);\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\r\n        this.contexts = null;\r\n    };\r\n    BufferTimeSubscriber.prototype.onBufferFull = function (context) {\r\n        this.closeContext(context);\r\n        var closeAction = context.closeAction;\r\n        closeAction.unsubscribe();\r\n        this.remove(closeAction);\r\n        if (!this.closed && this.timespanOnly) {\r\n            context = this.openContext();\r\n            var bufferTimeSpan = this.bufferTimeSpan;\r\n            var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };\r\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\r\n        }\r\n    };\r\n    BufferTimeSubscriber.prototype.openContext = function () {\r\n        var context = new Context();\r\n        this.contexts.push(context);\r\n        return context;\r\n    };\r\n    BufferTimeSubscriber.prototype.closeContext = function (context) {\r\n        this.destination.next(context.buffer);\r\n        var contexts = this.contexts;\r\n        var spliceIndex = contexts ? contexts.indexOf(context) : -1;\r\n        if (spliceIndex >= 0) {\r\n            contexts.splice(contexts.indexOf(context), 1);\r\n        }\r\n    };\r\n    return BufferTimeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nfunction dispatchBufferTimeSpanOnly(state) {\r\n    var subscriber = state.subscriber;\r\n    var prevContext = state.context;\r\n    if (prevContext) {\r\n        subscriber.closeContext(prevContext);\r\n    }\r\n    if (!subscriber.closed) {\r\n        state.context = subscriber.openContext();\r\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\r\n    }\r\n}\r\nfunction dispatchBufferCreation(state) {\r\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\r\n    var context = subscriber.openContext();\r\n    var action = this;\r\n    if (!subscriber.closed) {\r\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));\r\n        action.schedule(state, bufferCreationInterval);\r\n    }\r\n}\r\nfunction dispatchBufferClose(arg) {\r\n    var subscriber = arg.subscriber, context = arg.context;\r\n    subscriber.closeContext(context);\r\n}\r\n//# sourceMappingURL=bufferTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferTime.js\n// module id = 869\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscription_1 = require('../Subscription');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * Buffers the source Observable values starting from an emission from\r\n * `openings` and ending when the output of `closingSelector` emits.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array. Starts\r\n * collecting only when `opening` emits, and calls the `closingSelector`\r\n * function to get an Observable that tells when to close the buffer.</span>\r\n *\r\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\r\n *\r\n * Buffers values from the source by opening the buffer via signals from an\r\n * Observable provided to `openings`, and closing and sending the buffers when\r\n * a Subscribable or Promise returned by the `closingSelector` function emits.\r\n *\r\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var openings = Rx.Observable.interval(1000);\r\n * var buffered = clicks.bufferToggle(openings, i =>\r\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\r\n * );\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferWhen}\r\n * @see {@link windowToggle}\r\n *\r\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\r\n * buffers.\r\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\r\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\r\n * which, when it emits, signals that the associated buffer should be emitted\r\n * and cleared.\r\n * @return {Observable<T[]>} An observable of arrays of buffered values.\r\n * @method bufferToggle\r\n * @owner Observable\r\n */\r\nfunction bufferToggle(openings, closingSelector) {\r\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\r\n}\r\nexports.bufferToggle = bufferToggle;\r\nvar BufferToggleOperator = (function () {\r\n    function BufferToggleOperator(openings, closingSelector) {\r\n        this.openings = openings;\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\r\n    };\r\n    return BufferToggleOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferToggleSubscriber = (function (_super) {\r\n    __extends(BufferToggleSubscriber, _super);\r\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\r\n        _super.call(this, destination);\r\n        this.openings = openings;\r\n        this.closingSelector = closingSelector;\r\n        this.contexts = [];\r\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\r\n    }\r\n    BufferToggleSubscriber.prototype._next = function (value) {\r\n        var contexts = this.contexts;\r\n        var len = contexts.length;\r\n        for (var i = 0; i < len; i++) {\r\n            contexts[i].buffer.push(value);\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype._error = function (err) {\r\n        var contexts = this.contexts;\r\n        while (contexts.length > 0) {\r\n            var context = contexts.shift();\r\n            context.subscription.unsubscribe();\r\n            context.buffer = null;\r\n            context.subscription = null;\r\n        }\r\n        this.contexts = null;\r\n        _super.prototype._error.call(this, err);\r\n    };\r\n    BufferToggleSubscriber.prototype._complete = function () {\r\n        var contexts = this.contexts;\r\n        while (contexts.length > 0) {\r\n            var context = contexts.shift();\r\n            this.destination.next(context.buffer);\r\n            context.subscription.unsubscribe();\r\n            context.buffer = null;\r\n            context.subscription = null;\r\n        }\r\n        this.contexts = null;\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\r\n    };\r\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.closeBuffer(innerSub.context);\r\n    };\r\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\r\n        try {\r\n            var closingSelector = this.closingSelector;\r\n            var closingNotifier = closingSelector.call(this, value);\r\n            if (closingNotifier) {\r\n                this.trySubscribe(closingNotifier);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this._error(err);\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\r\n        var contexts = this.contexts;\r\n        if (contexts && context) {\r\n            var buffer = context.buffer, subscription = context.subscription;\r\n            this.destination.next(buffer);\r\n            contexts.splice(contexts.indexOf(context), 1);\r\n            this.remove(subscription);\r\n            subscription.unsubscribe();\r\n        }\r\n    };\r\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\r\n        var contexts = this.contexts;\r\n        var buffer = [];\r\n        var subscription = new Subscription_1.Subscription();\r\n        var context = { buffer: buffer, subscription: subscription };\r\n        contexts.push(context);\r\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\r\n        if (!innerSubscription || innerSubscription.closed) {\r\n            this.closeBuffer(context);\r\n        }\r\n        else {\r\n            innerSubscription.context = context;\r\n            this.add(innerSubscription);\r\n            subscription.add(innerSubscription);\r\n        }\r\n    };\r\n    return BufferToggleSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=bufferToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferToggle.js\n// module id = 870\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscription_1 = require('../Subscription');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Buffers the source Observable values, using a factory function of closing\r\n * Observables to determine when to close, emit, and reset the buffer.\r\n *\r\n * <span class=\"informal\">Collects values from the past as an array. When it\r\n * starts collecting values, it calls a function that returns an Observable that\r\n * tells when to close the buffer and restart collecting.</span>\r\n *\r\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\r\n *\r\n * Opens a buffer immediately, then closes the buffer when the observable\r\n * returned by calling `closingSelector` function emits a value. When it closes\r\n * the buffer, it immediately opens a new buffer and repeats the process.\r\n *\r\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var buffered = clicks.bufferWhen(() =>\r\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\r\n * );\r\n * buffered.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n * @see {@link bufferTime}\r\n * @see {@link bufferToggle}\r\n * @see {@link windowWhen}\r\n *\r\n * @param {function(): Observable} closingSelector A function that takes no\r\n * arguments and returns an Observable that signals buffer closure.\r\n * @return {Observable<T[]>} An observable of arrays of buffered values.\r\n * @method bufferWhen\r\n * @owner Observable\r\n */\r\nfunction bufferWhen(closingSelector) {\r\n    return this.lift(new BufferWhenOperator(closingSelector));\r\n}\r\nexports.bufferWhen = bufferWhen;\r\nvar BufferWhenOperator = (function () {\r\n    function BufferWhenOperator(closingSelector) {\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\r\n    };\r\n    return BufferWhenOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar BufferWhenSubscriber = (function (_super) {\r\n    __extends(BufferWhenSubscriber, _super);\r\n    function BufferWhenSubscriber(destination, closingSelector) {\r\n        _super.call(this, destination);\r\n        this.closingSelector = closingSelector;\r\n        this.subscribing = false;\r\n        this.openBuffer();\r\n    }\r\n    BufferWhenSubscriber.prototype._next = function (value) {\r\n        this.buffer.push(value);\r\n    };\r\n    BufferWhenSubscriber.prototype._complete = function () {\r\n        var buffer = this.buffer;\r\n        if (buffer) {\r\n            this.destination.next(buffer);\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\r\n        this.buffer = null;\r\n        this.subscribing = false;\r\n    };\r\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.openBuffer();\r\n    };\r\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\r\n        if (this.subscribing) {\r\n            this.complete();\r\n        }\r\n        else {\r\n            this.openBuffer();\r\n        }\r\n    };\r\n    BufferWhenSubscriber.prototype.openBuffer = function () {\r\n        var closingSubscription = this.closingSubscription;\r\n        if (closingSubscription) {\r\n            this.remove(closingSubscription);\r\n            closingSubscription.unsubscribe();\r\n        }\r\n        var buffer = this.buffer;\r\n        if (this.buffer) {\r\n            this.destination.next(buffer);\r\n        }\r\n        this.buffer = [];\r\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\r\n        if (closingNotifier === errorObject_1.errorObject) {\r\n            this.error(errorObject_1.errorObject.e);\r\n        }\r\n        else {\r\n            closingSubscription = new Subscription_1.Subscription();\r\n            this.closingSubscription = closingSubscription;\r\n            this.add(closingSubscription);\r\n            this.subscribing = true;\r\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\r\n            this.subscribing = false;\r\n        }\r\n    };\r\n    return BufferWhenSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=bufferWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/bufferWhen.js\n// module id = 871\n// module chunks = 4","\"use strict\";\r\nvar combineLatest_1 = require('./combineLatest');\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by waiting\r\n * for the outer Observable to complete, then applying {@link combineLatest}.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\r\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\r\n *\r\n * <img src=\"./img/combineAll.png\" width=\"100%\">\r\n *\r\n * Takes an Observable of Observables, and collects all Observables from it.\r\n * Once the outer Observable completes, it subscribes to all collected\r\n * Observables and combines their values using the {@link combineLatest}\r\n * strategy, such that:\r\n * - Every time an inner Observable emits, the output Observable emits.\r\n * - When the returned observable emits, it emits all of the latest values by:\r\n *   - If a `project` function is provided, it is called with each recent value\r\n *     from each inner Observable in whatever order they arrived, and the result\r\n *     of the `project` function is what is emitted by the output Observable.\r\n *   - If there is no `project` function, an array of all of the most recent\r\n *     values is emitted by the output Observable.\r\n *\r\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var higherOrder = clicks.map(ev =>\r\n *   Rx.Observable.interval(Math.random()*2000).take(3)\r\n * ).take(2);\r\n * var result = higherOrder.combineAll();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link combineLatest}\r\n * @see {@link mergeAll}\r\n *\r\n * @param {function} [project] An optional function to map the most recent\r\n * values from each inner Observable into a new result. Takes each of the most\r\n * recent values from each collected inner Observable as arguments, in order.\r\n * @return {Observable} An Observable of projected results or arrays of recent\r\n * values.\r\n * @method combineAll\r\n * @owner Observable\r\n */\r\nfunction combineAll(project) {\r\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\r\n}\r\nexports.combineAll = combineAll;\r\n//# sourceMappingURL=combineAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/combineAll.js\n// module id = 872\n// module chunks = 4","\"use strict\";\r\nvar mergeMapTo_1 = require('./mergeMapTo');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Projects each source value to the same Observable which is merged multiple\r\n * times in a serialized fashion on the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\r\n * always to the same inner Observable.</span>\r\n *\r\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then flattens those resulting Observables into one\r\n * single Observable, which is the output Observable. Each new `innerObservable`\r\n * instance emitted on the output Observable is concatenated with the previous\r\n * `innerObservable` instance.\r\n *\r\n * __Warning:__ if source values arrive endlessly and faster than their\r\n * corresponding inner Observables can complete, it will result in memory issues\r\n * as inner Observables amass in an unbounded buffer waiting for their turn to\r\n * be subscribed to.\r\n *\r\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\r\n * set to `1`.\r\n *\r\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // (results are not concurrent)\r\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\r\n * // on a 1000ms interval\r\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\r\n *\r\n * @see {@link concat}\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link mergeMapTo}\r\n * @see {@link switchMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\r\n * A function to produce the value on the output Observable based on the values\r\n * and the indices of the source (outer) emission and the inner Observable\r\n * emission. The arguments passed to this function are:\r\n * - `outerValue`: the value that came from the source\r\n * - `innerValue`: the value that came from the projected Observable\r\n * - `outerIndex`: the \"index\" of the value that came from the source\r\n * - `innerIndex`: the \"index\" of the value from the projected Observable\r\n * @return {Observable} An observable of values merged together by joining the\r\n * passed observable with itself, one after the other, for each value emitted\r\n * from the source.\r\n * @method concatMapTo\r\n * @owner Observable\r\n */\r\nfunction concatMapTo(innerObservable, resultSelector) {\r\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\r\n}\r\nexports.concatMapTo = concatMapTo;\r\n//# sourceMappingURL=concatMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/concatMapTo.js\n// module id = 873\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Counts the number of emissions on the source and emits that number when the\r\n * source completes.\r\n *\r\n * <span class=\"informal\">Tells how many values were emitted, when the source\r\n * completes.</span>\r\n *\r\n * <img src=\"./img/count.png\" width=\"100%\">\r\n *\r\n * `count` transforms an Observable that emits values into an Observable that\r\n * emits a single value that represents the number of values emitted by the\r\n * source Observable. If the source Observable terminates with an error, `count`\r\n * will pass this error notification along without emitting a value first. If\r\n * the source Observable does not terminate at all, `count` will neither emit\r\n * a value nor terminate. This operator takes an optional `predicate` function\r\n * as argument, in which case the output emission will represent the number of\r\n * source values that matched `true` with the `predicate`.\r\n *\r\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\r\n * var seconds = Rx.Observable.interval(1000);\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var secondsBeforeClick = seconds.takeUntil(clicks);\r\n * var result = secondsBeforeClick.count();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\r\n * var numbers = Rx.Observable.range(1, 7);\r\n * var result = numbers.count(i => i % 2 === 1);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // 4\r\n *\r\n * @see {@link max}\r\n * @see {@link min}\r\n * @see {@link reduce}\r\n *\r\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\r\n * boolean function to select what values are to be counted. It is provided with\r\n * arguments of:\r\n * - `value`: the value from the source Observable.\r\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\r\n * - `source`: the source Observable instance itself.\r\n * @return {Observable} An Observable of one number that represents the count as\r\n * described above.\r\n * @method count\r\n * @owner Observable\r\n */\r\nfunction count(predicate) {\r\n    return this.lift(new CountOperator(predicate, this));\r\n}\r\nexports.count = count;\r\nvar CountOperator = (function () {\r\n    function CountOperator(predicate, source) {\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n    }\r\n    CountOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\r\n    };\r\n    return CountOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar CountSubscriber = (function (_super) {\r\n    __extends(CountSubscriber, _super);\r\n    function CountSubscriber(destination, predicate, source) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.count = 0;\r\n        this.index = 0;\r\n    }\r\n    CountSubscriber.prototype._next = function (value) {\r\n        if (this.predicate) {\r\n            this._tryPredicate(value);\r\n        }\r\n        else {\r\n            this.count++;\r\n        }\r\n    };\r\n    CountSubscriber.prototype._tryPredicate = function (value) {\r\n        var result;\r\n        try {\r\n            result = this.predicate(value, this.index++, this.source);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        if (result) {\r\n            this.count++;\r\n        }\r\n    };\r\n    CountSubscriber.prototype._complete = function () {\r\n        this.destination.next(this.count);\r\n        this.destination.complete();\r\n    };\r\n    return CountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/count.js\n// module id = 874\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Emits a value from the source Observable only after a particular time span\r\n * determined by another Observable has passed without another source emission.\r\n *\r\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\r\n * emission silence is determined by a second Observable.</span>\r\n *\r\n * <img src=\"./img/debounce.png\" width=\"100%\">\r\n *\r\n * `debounce` delays values emitted by the source Observable, but drops previous\r\n * pending delayed emissions if a new value arrives on the source Observable.\r\n * This operator keeps track of the most recent value from the source\r\n * Observable, and spawns a duration Observable by calling the\r\n * `durationSelector` function. The value is emitted only when the duration\r\n * Observable emits a value or completes, and if no other value was emitted on\r\n * the source Observable since the duration Observable was spawned. If a new\r\n * value appears before the duration Observable emits, the previous value will\r\n * be dropped and will not be emitted on the output Observable.\r\n *\r\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\r\n * delay-like operator since output emissions do not necessarily occur at the\r\n * same time as they did on the source Observable.\r\n *\r\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounceTime}\r\n * @see {@link delayWhen}\r\n * @see {@link throttle}\r\n *\r\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\r\n * that receives a value from the source Observable, for computing the timeout\r\n * duration for each source value, returned as an Observable or a Promise.\r\n * @return {Observable} An Observable that delays the emissions of the source\r\n * Observable by the specified duration Observable returned by\r\n * `durationSelector`, and may drop some values if they occur too frequently.\r\n * @method debounce\r\n * @owner Observable\r\n */\r\nfunction debounce(durationSelector) {\r\n    return this.lift(new DebounceOperator(durationSelector));\r\n}\r\nexports.debounce = debounce;\r\nvar DebounceOperator = (function () {\r\n    function DebounceOperator(durationSelector) {\r\n        this.durationSelector = durationSelector;\r\n    }\r\n    DebounceOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\r\n    };\r\n    return DebounceOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DebounceSubscriber = (function (_super) {\r\n    __extends(DebounceSubscriber, _super);\r\n    function DebounceSubscriber(destination, durationSelector) {\r\n        _super.call(this, destination);\r\n        this.durationSelector = durationSelector;\r\n        this.hasValue = false;\r\n        this.durationSubscription = null;\r\n    }\r\n    DebounceSubscriber.prototype._next = function (value) {\r\n        try {\r\n            var result = this.durationSelector.call(this, value);\r\n            if (result) {\r\n                this._tryNext(value, result);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    DebounceSubscriber.prototype._complete = function () {\r\n        this.emitValue();\r\n        this.destination.complete();\r\n    };\r\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\r\n        var subscription = this.durationSubscription;\r\n        this.value = value;\r\n        this.hasValue = true;\r\n        if (subscription) {\r\n            subscription.unsubscribe();\r\n            this.remove(subscription);\r\n        }\r\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\r\n        if (!subscription.closed) {\r\n            this.add(this.durationSubscription = subscription);\r\n        }\r\n    };\r\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.emitValue();\r\n    };\r\n    DebounceSubscriber.prototype.notifyComplete = function () {\r\n        this.emitValue();\r\n    };\r\n    DebounceSubscriber.prototype.emitValue = function () {\r\n        if (this.hasValue) {\r\n            var value = this.value;\r\n            var subscription = this.durationSubscription;\r\n            if (subscription) {\r\n                this.durationSubscription = null;\r\n                subscription.unsubscribe();\r\n                this.remove(subscription);\r\n            }\r\n            this.value = null;\r\n            this.hasValue = false;\r\n            _super.prototype._next.call(this, value);\r\n        }\r\n    };\r\n    return DebounceSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=debounce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/debounce.js\n// module id = 875\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Emits a given value if the source Observable completes without emitting any\r\n * `next` value, otherwise mirrors the source Observable.\r\n *\r\n * <span class=\"informal\">If the source Observable turns out to be empty, then\r\n * this operator will emit a default value.</span>\r\n *\r\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\r\n *\r\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\r\n * specified default value if the source Observable is empty (completes without\r\n * having emitted any `next` value).\r\n *\r\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\r\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link empty}\r\n * @see {@link last}\r\n *\r\n * @param {any} [defaultValue=null] The default value used if the source\r\n * Observable is empty.\r\n * @return {Observable} An Observable that emits either the specified\r\n * `defaultValue` if the source Observable emits no items, or the values emitted\r\n * by the source Observable.\r\n * @method defaultIfEmpty\r\n * @owner Observable\r\n */\r\nfunction defaultIfEmpty(defaultValue) {\r\n    if (defaultValue === void 0) { defaultValue = null; }\r\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\r\n}\r\nexports.defaultIfEmpty = defaultIfEmpty;\r\nvar DefaultIfEmptyOperator = (function () {\r\n    function DefaultIfEmptyOperator(defaultValue) {\r\n        this.defaultValue = defaultValue;\r\n    }\r\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\r\n    };\r\n    return DefaultIfEmptyOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DefaultIfEmptySubscriber = (function (_super) {\r\n    __extends(DefaultIfEmptySubscriber, _super);\r\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\r\n        _super.call(this, destination);\r\n        this.defaultValue = defaultValue;\r\n        this.isEmpty = true;\r\n    }\r\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\r\n        this.isEmpty = false;\r\n        this.destination.next(value);\r\n    };\r\n    DefaultIfEmptySubscriber.prototype._complete = function () {\r\n        if (this.isEmpty) {\r\n            this.destination.next(this.defaultValue);\r\n        }\r\n        this.destination.complete();\r\n    };\r\n    return DefaultIfEmptySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/defaultIfEmpty.js\n// module id = 877\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar isDate_1 = require('../util/isDate');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Notification_1 = require('../Notification');\r\n/**\r\n * Delays the emission of items from the source Observable by a given timeout or\r\n * until a given Date.\r\n *\r\n * <span class=\"informal\">Time shifts each item by some specified amount of\r\n * milliseconds.</span>\r\n *\r\n * <img src=\"./img/delay.png\" width=\"100%\">\r\n *\r\n * If the delay argument is a Number, this operator time shifts the source\r\n * Observable by that amount of time expressed in milliseconds. The relative\r\n * time intervals between the values are preserved.\r\n *\r\n * If the delay argument is a Date, this operator time shifts the start of the\r\n * Observable execution until the given date occurs.\r\n *\r\n * @example <caption>Delay each click by one second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Delay all clicks until a future date happens</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\r\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @see {@link debounceTime}\r\n * @see {@link delayWhen}\r\n *\r\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\r\n * a `Date` until which the emission of the source items is delayed.\r\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\r\n * managing the timers that handle the time-shift for each item.\r\n * @return {Observable} An Observable that delays the emissions of the source\r\n * Observable by the specified timeout or Date.\r\n * @method delay\r\n * @owner Observable\r\n */\r\nfunction delay(delay, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    var absoluteDelay = isDate_1.isDate(delay);\r\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\r\n    return this.lift(new DelayOperator(delayFor, scheduler));\r\n}\r\nexports.delay = delay;\r\nvar DelayOperator = (function () {\r\n    function DelayOperator(delay, scheduler) {\r\n        this.delay = delay;\r\n        this.scheduler = scheduler;\r\n    }\r\n    DelayOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\r\n    };\r\n    return DelayOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DelaySubscriber = (function (_super) {\r\n    __extends(DelaySubscriber, _super);\r\n    function DelaySubscriber(destination, delay, scheduler) {\r\n        _super.call(this, destination);\r\n        this.delay = delay;\r\n        this.scheduler = scheduler;\r\n        this.queue = [];\r\n        this.active = false;\r\n        this.errored = false;\r\n    }\r\n    DelaySubscriber.dispatch = function (state) {\r\n        var source = state.source;\r\n        var queue = source.queue;\r\n        var scheduler = state.scheduler;\r\n        var destination = state.destination;\r\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\r\n            queue.shift().notification.observe(destination);\r\n        }\r\n        if (queue.length > 0) {\r\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\r\n            this.schedule(state, delay_1);\r\n        }\r\n        else {\r\n            source.active = false;\r\n        }\r\n    };\r\n    DelaySubscriber.prototype._schedule = function (scheduler) {\r\n        this.active = true;\r\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\r\n            source: this, destination: this.destination, scheduler: scheduler\r\n        }));\r\n    };\r\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\r\n        if (this.errored === true) {\r\n            return;\r\n        }\r\n        var scheduler = this.scheduler;\r\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\r\n        this.queue.push(message);\r\n        if (this.active === false) {\r\n            this._schedule(scheduler);\r\n        }\r\n    };\r\n    DelaySubscriber.prototype._next = function (value) {\r\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\r\n    };\r\n    DelaySubscriber.prototype._error = function (err) {\r\n        this.errored = true;\r\n        this.queue = [];\r\n        this.destination.error(err);\r\n    };\r\n    DelaySubscriber.prototype._complete = function () {\r\n        this.scheduleNotification(Notification_1.Notification.createComplete());\r\n    };\r\n    return DelaySubscriber;\r\n}(Subscriber_1.Subscriber));\r\nvar DelayMessage = (function () {\r\n    function DelayMessage(time, notification) {\r\n        this.time = time;\r\n        this.notification = notification;\r\n    }\r\n    return DelayMessage;\r\n}());\r\n//# sourceMappingURL=delay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/delay.js\n// module id = 878\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Observable_1 = require('../Observable');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Delays the emission of items from the source Observable by a given time span\r\n * determined by the emissions of another Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\r\n * delay duration is determined by a second Observable.</span>\r\n *\r\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\r\n *\r\n * `delayWhen` time shifts each emitted value from the source Observable by a\r\n * time span determined by another Observable. When the source emits a value,\r\n * the `delayDurationSelector` function is called with the source value as\r\n * argument, and should return an Observable, called the \"duration\" Observable.\r\n * The source value is emitted on the output Observable only when the duration\r\n * Observable emits a value or completes.\r\n *\r\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\r\n * is an Observable. When `subscriptionDelay` emits its first value or\r\n * completes, the source Observable is subscribed to and starts behaving like\r\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\r\n * `delayWhen` will subscribe to the source Observable as soon as the output\r\n * Observable is subscribed.\r\n *\r\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var delayedClicks = clicks.delayWhen(event =>\r\n *   Rx.Observable.interval(Math.random() * 5000)\r\n * );\r\n * delayedClicks.subscribe(x => console.log(x));\r\n *\r\n * @see {@link debounce}\r\n * @see {@link delay}\r\n *\r\n * @param {function(value: T): Observable} delayDurationSelector A function that\r\n * returns an Observable for each value emitted by the source Observable, which\r\n * is then used to delay the emission of that item on the output Observable\r\n * until the Observable returned from this function emits a value.\r\n * @param {Observable} subscriptionDelay An Observable that triggers the\r\n * subscription to the source Observable once it emits any value.\r\n * @return {Observable} An Observable that delays the emissions of the source\r\n * Observable by an amount of time specified by the Observable returned by\r\n * `delayDurationSelector`.\r\n * @method delayWhen\r\n * @owner Observable\r\n */\r\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\r\n    if (subscriptionDelay) {\r\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\r\n            .lift(new DelayWhenOperator(delayDurationSelector));\r\n    }\r\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\r\n}\r\nexports.delayWhen = delayWhen;\r\nvar DelayWhenOperator = (function () {\r\n    function DelayWhenOperator(delayDurationSelector) {\r\n        this.delayDurationSelector = delayDurationSelector;\r\n    }\r\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\r\n    };\r\n    return DelayWhenOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DelayWhenSubscriber = (function (_super) {\r\n    __extends(DelayWhenSubscriber, _super);\r\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\r\n        _super.call(this, destination);\r\n        this.delayDurationSelector = delayDurationSelector;\r\n        this.completed = false;\r\n        this.delayNotifierSubscriptions = [];\r\n        this.values = [];\r\n    }\r\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.destination.next(outerValue);\r\n        this.removeSubscription(innerSub);\r\n        this.tryComplete();\r\n    };\r\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this._error(error);\r\n    };\r\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        var value = this.removeSubscription(innerSub);\r\n        if (value) {\r\n            this.destination.next(value);\r\n        }\r\n        this.tryComplete();\r\n    };\r\n    DelayWhenSubscriber.prototype._next = function (value) {\r\n        try {\r\n            var delayNotifier = this.delayDurationSelector(value);\r\n            if (delayNotifier) {\r\n                this.tryDelay(delayNotifier, value);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    DelayWhenSubscriber.prototype._complete = function () {\r\n        this.completed = true;\r\n        this.tryComplete();\r\n    };\r\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\r\n        subscription.unsubscribe();\r\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\r\n        var value = null;\r\n        if (subscriptionIdx !== -1) {\r\n            value = this.values[subscriptionIdx];\r\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\r\n            this.values.splice(subscriptionIdx, 1);\r\n        }\r\n        return value;\r\n    };\r\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\r\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\r\n        this.add(notifierSubscription);\r\n        this.delayNotifierSubscriptions.push(notifierSubscription);\r\n        this.values.push(value);\r\n    };\r\n    DelayWhenSubscriber.prototype.tryComplete = function () {\r\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return DelayWhenSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SubscriptionDelayObservable = (function (_super) {\r\n    __extends(SubscriptionDelayObservable, _super);\r\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\r\n        _super.call(this);\r\n        this.source = source;\r\n        this.subscriptionDelay = subscriptionDelay;\r\n    }\r\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\r\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\r\n    };\r\n    return SubscriptionDelayObservable;\r\n}(Observable_1.Observable));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SubscriptionDelaySubscriber = (function (_super) {\r\n    __extends(SubscriptionDelaySubscriber, _super);\r\n    function SubscriptionDelaySubscriber(parent, source) {\r\n        _super.call(this);\r\n        this.parent = parent;\r\n        this.source = source;\r\n        this.sourceSubscribed = false;\r\n    }\r\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\r\n        this.subscribeToSource();\r\n    };\r\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\r\n        this.unsubscribe();\r\n        this.parent.error(err);\r\n    };\r\n    SubscriptionDelaySubscriber.prototype._complete = function () {\r\n        this.subscribeToSource();\r\n    };\r\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\r\n        if (!this.sourceSubscribed) {\r\n            this.sourceSubscribed = true;\r\n            this.unsubscribe();\r\n            this.source.subscribe(this.parent);\r\n        }\r\n    };\r\n    return SubscriptionDelaySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=delayWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/delayWhen.js\n// module id = 879\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Converts an Observable of {@link Notification} objects into the emissions\r\n * that they represent.\r\n *\r\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\r\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\r\n *\r\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\r\n *\r\n * `dematerialize` is assumed to operate an Observable that only emits\r\n * {@link Notification} objects as `next` emissions, and does not emit any\r\n * `error`. Such Observable is the output of a `materialize` operation. Those\r\n * notifications are then unwrapped using the metadata they contain, and emitted\r\n * as `next`, `error`, and `complete` on the output Observable.\r\n *\r\n * Use this operator in conjunction with {@link materialize}.\r\n *\r\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\r\n * var notifA = new Rx.Notification('N', 'A');\r\n * var notifB = new Rx.Notification('N', 'B');\r\n * var notifE = new Rx.Notification('E', void 0,\r\n *   new TypeError('x.toUpperCase is not a function')\r\n * );\r\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\r\n * var upperCase = materialized.dematerialize();\r\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\r\n *\r\n * // Results in:\r\n * // A\r\n * // B\r\n * // TypeError: x.toUpperCase is not a function\r\n *\r\n * @see {@link Notification}\r\n * @see {@link materialize}\r\n *\r\n * @return {Observable} An Observable that emits items and notifications\r\n * embedded in Notification objects emitted by the source Observable.\r\n * @method dematerialize\r\n * @owner Observable\r\n */\r\nfunction dematerialize() {\r\n    return this.lift(new DeMaterializeOperator());\r\n}\r\nexports.dematerialize = dematerialize;\r\nvar DeMaterializeOperator = (function () {\r\n    function DeMaterializeOperator() {\r\n    }\r\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\r\n    };\r\n    return DeMaterializeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DeMaterializeSubscriber = (function (_super) {\r\n    __extends(DeMaterializeSubscriber, _super);\r\n    function DeMaterializeSubscriber(destination) {\r\n        _super.call(this, destination);\r\n    }\r\n    DeMaterializeSubscriber.prototype._next = function (value) {\r\n        value.observe(this.destination);\r\n    };\r\n    return DeMaterializeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=dematerialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/dematerialize.js\n// module id = 880\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar Set_1 = require('../util/Set');\r\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\r\n *\r\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\r\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\r\n * source observable directly with an equality check against previous values.\r\n *\r\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\r\n *\r\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\r\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\r\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\r\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\r\n *\r\n * @example <caption>A simple example with numbers</caption>\r\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\r\n *   .distinct()\r\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\r\n *\r\n * @example <caption>An example using a keySelector function</caption>\r\n * interface Person {\r\n *    age: number,\r\n *    name: string\r\n * }\r\n *\r\n * Observable.of<Person>(\r\n *     { age: 4, name: 'Foo'},\r\n *     { age: 7, name: 'Bar'},\r\n *     { age: 5, name: 'Foo'})\r\n *     .distinct((p: Person) => p.name)\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n *\r\n * @see {@link distinctUntilChanged}\r\n * @see {@link distinctUntilKeyChanged}\r\n *\r\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\r\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\r\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\r\n * @method distinct\r\n * @owner Observable\r\n */\r\nfunction distinct(keySelector, flushes) {\r\n    return this.lift(new DistinctOperator(keySelector, flushes));\r\n}\r\nexports.distinct = distinct;\r\nvar DistinctOperator = (function () {\r\n    function DistinctOperator(keySelector, flushes) {\r\n        this.keySelector = keySelector;\r\n        this.flushes = flushes;\r\n    }\r\n    DistinctOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\r\n    };\r\n    return DistinctOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DistinctSubscriber = (function (_super) {\r\n    __extends(DistinctSubscriber, _super);\r\n    function DistinctSubscriber(destination, keySelector, flushes) {\r\n        _super.call(this, destination);\r\n        this.keySelector = keySelector;\r\n        this.values = new Set_1.Set();\r\n        if (flushes) {\r\n            this.add(subscribeToResult_1.subscribeToResult(this, flushes));\r\n        }\r\n    }\r\n    DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.values.clear();\r\n    };\r\n    DistinctSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this._error(error);\r\n    };\r\n    DistinctSubscriber.prototype._next = function (value) {\r\n        if (this.keySelector) {\r\n            this._useKeySelector(value);\r\n        }\r\n        else {\r\n            this._finalizeNext(value, value);\r\n        }\r\n    };\r\n    DistinctSubscriber.prototype._useKeySelector = function (value) {\r\n        var key;\r\n        var destination = this.destination;\r\n        try {\r\n            key = this.keySelector(value);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        this._finalizeNext(key, value);\r\n    };\r\n    DistinctSubscriber.prototype._finalizeNext = function (key, value) {\r\n        var values = this.values;\r\n        if (!values.has(key)) {\r\n            values.add(key);\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    return DistinctSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.DistinctSubscriber = DistinctSubscriber;\r\n//# sourceMappingURL=distinct.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/distinct.js\n// module id = 881\n// module chunks = 4","\"use strict\";\r\nvar distinctUntilChanged_1 = require('./distinctUntilChanged');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\r\n * using a property accessed by using the key provided to check if the two items are distinct.\r\n *\r\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\r\n *\r\n * If a comparator function is not provided, an equality check is used by default.\r\n *\r\n * @example <caption>An example comparing the name of persons</caption>\r\n *\r\n *  interface Person {\r\n *     age: number,\r\n *     name: string\r\n *  }\r\n *\r\n * Observable.of<Person>(\r\n *     { age: 4, name: 'Foo'},\r\n *     { age: 7, name: 'Bar'},\r\n *     { age: 5, name: 'Foo'},\r\n *     { age: 6, name: 'Foo'})\r\n *     .distinctUntilKeyChanged('name')\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo' }\r\n *\r\n * @example <caption>An example comparing the first letters of the name</caption>\r\n *\r\n * interface Person {\r\n *     age: number,\r\n *     name: string\r\n *  }\r\n *\r\n * Observable.of<Person>(\r\n *     { age: 4, name: 'Foo1'},\r\n *     { age: 7, name: 'Bar'},\r\n *     { age: 5, name: 'Foo2'},\r\n *     { age: 6, name: 'Foo3'})\r\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\r\n *     .subscribe(x => console.log(x));\r\n *\r\n * // displays:\r\n * // { age: 4, name: 'Foo1' }\r\n * // { age: 7, name: 'Bar' }\r\n * // { age: 5, name: 'Foo2' }\r\n *\r\n * @see {@link distinct}\r\n * @see {@link distinctUntilChanged}\r\n *\r\n * @param {string} key String key for object property lookup on each item.\r\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\r\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\r\n * @method distinctUntilKeyChanged\r\n * @owner Observable\r\n */\r\nfunction distinctUntilKeyChanged(key, compare) {\r\n    return distinctUntilChanged_1.distinctUntilChanged.call(this, function (x, y) {\r\n        if (compare) {\r\n            return compare(x[key], y[key]);\r\n        }\r\n        return x[key] === y[key];\r\n    });\r\n}\r\nexports.distinctUntilKeyChanged = distinctUntilKeyChanged;\r\n//# sourceMappingURL=distinctUntilKeyChanged.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/distinctUntilKeyChanged.js\n// module id = 882\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Perform a side effect for every emission on the source Observable, but return\r\n * an Observable that is identical to the source.\r\n *\r\n * <span class=\"informal\">Intercepts each emission on the source and runs a\r\n * function, but returns an output which is identical to the source.</span>\r\n *\r\n * <img src=\"./img/do.png\" width=\"100%\">\r\n *\r\n * Returns a mirrored Observable of the source Observable, but modified so that\r\n * the provided Observer is called to perform a side effect for every value,\r\n * error, and completion emitted by the source. Any errors that are thrown in\r\n * the aforementioned Observer or handlers are safely sent down the error path\r\n * of the output Observable.\r\n *\r\n * This operator is useful for debugging your Observables for the correct values\r\n * or performing other side effects.\r\n *\r\n * Note: this is different to a `subscribe` on the Observable. If the Observable\r\n * returned by `do` is not subscribed, the side effects specified by the\r\n * Observer will never happen. `do` therefore simply spies on existing\r\n * execution, it does not trigger an execution to happen like `subscribe` does.\r\n *\r\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var positions = clicks\r\n *   .do(ev => console.log(ev))\r\n *   .map(ev => ev.clientX);\r\n * positions.subscribe(x => console.log(x));\r\n *\r\n * @see {@link map}\r\n * @see {@link subscribe}\r\n *\r\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\r\n * callback for `next`.\r\n * @param {function} [error] Callback for errors in the source.\r\n * @param {function} [complete] Callback for the completion of the source.\r\n * @return {Observable} An Observable identical to the source, but runs the\r\n * specified Observer or callback(s) for each item.\r\n * @method do\r\n * @name do\r\n * @owner Observable\r\n */\r\nfunction _do(nextOrObserver, error, complete) {\r\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\r\n}\r\nexports._do = _do;\r\nvar DoOperator = (function () {\r\n    function DoOperator(nextOrObserver, error, complete) {\r\n        this.nextOrObserver = nextOrObserver;\r\n        this.error = error;\r\n        this.complete = complete;\r\n    }\r\n    DoOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\r\n    };\r\n    return DoOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar DoSubscriber = (function (_super) {\r\n    __extends(DoSubscriber, _super);\r\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\r\n        _super.call(this, destination);\r\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\r\n        safeSubscriber.syncErrorThrowable = true;\r\n        this.add(safeSubscriber);\r\n        this.safeSubscriber = safeSubscriber;\r\n    }\r\n    DoSubscriber.prototype._next = function (value) {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.next(value);\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    DoSubscriber.prototype._error = function (err) {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.error(err);\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    DoSubscriber.prototype._complete = function () {\r\n        var safeSubscriber = this.safeSubscriber;\r\n        safeSubscriber.complete();\r\n        if (safeSubscriber.syncErrorThrown) {\r\n            this.destination.error(safeSubscriber.syncErrorValue);\r\n        }\r\n        else {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return DoSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=do.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/do.js\n// module id = 883\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\r\n/**\r\n * Emits the single value at the specified `index` in a sequence of emissions\r\n * from the source Observable.\r\n *\r\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\r\n *\r\n * <img src=\"./img/elementAt.png\" width=\"100%\">\r\n *\r\n * `elementAt` returns an Observable that emits the item at the specified\r\n * `index` in the source Observable, or a default value if that `index` is out\r\n * of range and the `default` argument is provided. If the `default` argument is\r\n * not given and the `index` is out of range, the output Observable will emit an\r\n * `ArgumentOutOfRangeError` error.\r\n *\r\n * @example <caption>Emit only the third click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.elementAt(2);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // Results in:\r\n * // click 1 = nothing\r\n * // click 2 = nothing\r\n * // click 3 = MouseEvent object logged to console\r\n *\r\n * @see {@link first}\r\n * @see {@link last}\r\n * @see {@link skip}\r\n * @see {@link single}\r\n * @see {@link take}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\r\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\r\n * Observable has completed before emitting the i-th `next` notification.\r\n *\r\n * @param {number} index Is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {T} [defaultValue] The default value returned for missing indices.\r\n * @return {Observable} An Observable that emits a single item, if it is found.\r\n * Otherwise, will emit the default value if given. If not, then emits an error.\r\n * @method elementAt\r\n * @owner Observable\r\n */\r\nfunction elementAt(index, defaultValue) {\r\n    return this.lift(new ElementAtOperator(index, defaultValue));\r\n}\r\nexports.elementAt = elementAt;\r\nvar ElementAtOperator = (function () {\r\n    function ElementAtOperator(index, defaultValue) {\r\n        this.index = index;\r\n        this.defaultValue = defaultValue;\r\n        if (index < 0) {\r\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\n        }\r\n    }\r\n    ElementAtOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ElementAtSubscriber(subscriber, this.index, this.defaultValue));\r\n    };\r\n    return ElementAtOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ElementAtSubscriber = (function (_super) {\r\n    __extends(ElementAtSubscriber, _super);\r\n    function ElementAtSubscriber(destination, index, defaultValue) {\r\n        _super.call(this, destination);\r\n        this.index = index;\r\n        this.defaultValue = defaultValue;\r\n    }\r\n    ElementAtSubscriber.prototype._next = function (x) {\r\n        if (this.index-- === 0) {\r\n            this.destination.next(x);\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    ElementAtSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        if (this.index >= 0) {\r\n            if (typeof this.defaultValue !== 'undefined') {\r\n                destination.next(this.defaultValue);\r\n            }\r\n            else {\r\n                destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError);\r\n            }\r\n        }\r\n        destination.complete();\r\n    };\r\n    return ElementAtSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=elementAt.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/elementAt.js\n// module id = 884\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by dropping\r\n * inner Observables while the previous inner Observable has not yet completed.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\r\n * next inner Observables while the current inner is still executing.</span>\r\n *\r\n * <img src=\"./img/exhaust.png\" width=\"100%\">\r\n *\r\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\r\n * higher-order Observable. Each time it observes one of these emitted inner\r\n * Observables, the output Observable begins emitting the items emitted by that\r\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\r\n * `exhaust` ignores every new inner Observable if the previous Observable has\r\n * not yet completed. Once that one completes, it will accept and flatten the\r\n * next inner Observable and repeat this process.\r\n *\r\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\r\n * var result = higherOrder.exhaust();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link combineAll}\r\n * @see {@link concatAll}\r\n * @see {@link switch}\r\n * @see {@link mergeAll}\r\n * @see {@link exhaustMap}\r\n * @see {@link zipAll}\r\n *\r\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\r\n * exclusively until it completes before subscribing to the next.\r\n * @method exhaust\r\n * @owner Observable\r\n */\r\nfunction exhaust() {\r\n    return this.lift(new SwitchFirstOperator());\r\n}\r\nexports.exhaust = exhaust;\r\nvar SwitchFirstOperator = (function () {\r\n    function SwitchFirstOperator() {\r\n    }\r\n    SwitchFirstOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\r\n    };\r\n    return SwitchFirstOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SwitchFirstSubscriber = (function (_super) {\r\n    __extends(SwitchFirstSubscriber, _super);\r\n    function SwitchFirstSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.hasCompleted = false;\r\n        this.hasSubscription = false;\r\n    }\r\n    SwitchFirstSubscriber.prototype._next = function (value) {\r\n        if (!this.hasSubscription) {\r\n            this.hasSubscription = true;\r\n            this.add(subscribeToResult_1.subscribeToResult(this, value));\r\n        }\r\n    };\r\n    SwitchFirstSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (!this.hasSubscription) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.remove(innerSub);\r\n        this.hasSubscription = false;\r\n        if (this.hasCompleted) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return SwitchFirstSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=exhaust.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/exhaust.js\n// module id = 885\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Projects each source value to an Observable which is merged in the output\r\n * Observable only if the previous projected Observable has completed.\r\n *\r\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\r\n * these inner Observables using {@link exhaust}.</span>\r\n *\r\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an (so-called \"inner\") Observable. When it projects a source value to\r\n * an Observable, the output Observable begins emitting the items emitted by\r\n * that projected Observable. However, `exhaustMap` ignores every new projected\r\n * Observable if the previous projected Observable has not yet completed. Once\r\n * that one completes, it will accept and flatten the next projected Observable\r\n * and repeat this process.\r\n *\r\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link concatMap}\r\n * @see {@link exhaust}\r\n * @see {@link mergeMap}\r\n * @see {@link switchMap}\r\n *\r\n * @param {function(value: T, ?index: number): ObservableInput} project A function\r\n * that, when applied to an item emitted by the source Observable, returns an\r\n * Observable.\r\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\r\n * A function to produce the value on the output Observable based on the values\r\n * and the indices of the source (outer) emission and the inner Observable\r\n * emission. The arguments passed to this function are:\r\n * - `outerValue`: the value that came from the source\r\n * - `innerValue`: the value that came from the projected Observable\r\n * - `outerIndex`: the \"index\" of the value that came from the source\r\n * - `innerIndex`: the \"index\" of the value from the projected Observable\r\n * @return {Observable} An Observable containing projected Observables\r\n * of each item of the source, ignoring projected Observables that start before\r\n * their preceding Observable has completed.\r\n * @method exhaustMap\r\n * @owner Observable\r\n */\r\nfunction exhaustMap(project, resultSelector) {\r\n    return this.lift(new SwitchFirstMapOperator(project, resultSelector));\r\n}\r\nexports.exhaustMap = exhaustMap;\r\nvar SwitchFirstMapOperator = (function () {\r\n    function SwitchFirstMapOperator(project, resultSelector) {\r\n        this.project = project;\r\n        this.resultSelector = resultSelector;\r\n    }\r\n    SwitchFirstMapOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SwitchFirstMapSubscriber(subscriber, this.project, this.resultSelector));\r\n    };\r\n    return SwitchFirstMapOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SwitchFirstMapSubscriber = (function (_super) {\r\n    __extends(SwitchFirstMapSubscriber, _super);\r\n    function SwitchFirstMapSubscriber(destination, project, resultSelector) {\r\n        _super.call(this, destination);\r\n        this.project = project;\r\n        this.resultSelector = resultSelector;\r\n        this.hasSubscription = false;\r\n        this.hasCompleted = false;\r\n        this.index = 0;\r\n    }\r\n    SwitchFirstMapSubscriber.prototype._next = function (value) {\r\n        if (!this.hasSubscription) {\r\n            this.tryNext(value);\r\n        }\r\n    };\r\n    SwitchFirstMapSubscriber.prototype.tryNext = function (value) {\r\n        var index = this.index++;\r\n        var destination = this.destination;\r\n        try {\r\n            var result = this.project(value, index);\r\n            this.hasSubscription = true;\r\n            this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n        }\r\n    };\r\n    SwitchFirstMapSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (!this.hasSubscription) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    SwitchFirstMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        if (resultSelector) {\r\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\r\n        }\r\n        else {\r\n            destination.next(innerValue);\r\n        }\r\n    };\r\n    SwitchFirstMapSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        try {\r\n            var result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\r\n            destination.next(result);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n        }\r\n    };\r\n    SwitchFirstMapSubscriber.prototype.notifyError = function (err) {\r\n        this.destination.error(err);\r\n    };\r\n    SwitchFirstMapSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.remove(innerSub);\r\n        this.hasSubscription = false;\r\n        if (this.hasCompleted) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return SwitchFirstMapSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=exhaustMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/exhaustMap.js\n// module id = 886\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Recursively projects each source value to an Observable which is merged in\r\n * the output Observable.\r\n *\r\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\r\n * projection function to every source value as well as every output value.\r\n * It's recursive.</span>\r\n *\r\n * <img src=\"./img/expand.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits items based on applying a function that you\r\n * supply to each item emitted by the source Observable, where that function\r\n * returns an Observable, and then merging those resulting Observables and\r\n * emitting the results of this merger. *Expand* will re-emit on the output\r\n * Observable every source value. Then, each output value is given to the\r\n * `project` function which returns an inner Observable to be merged on the\r\n * output Observable. Those output values resulting from the projection are also\r\n * given to the `project` function to produce new output values. This is how\r\n * *expand* behaves recursively.\r\n *\r\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var powersOfTwo = clicks\r\n *   .mapTo(1)\r\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\r\n *   .take(10);\r\n * powersOfTwo.subscribe(x => console.log(x));\r\n *\r\n * @see {@link mergeMap}\r\n * @see {@link mergeScan}\r\n *\r\n * @param {function(value: T, index: number) => Observable} project A function\r\n * that, when applied to an item emitted by the source or the output Observable,\r\n * returns an Observable.\r\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\r\n * Observables being subscribed to concurrently.\r\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\r\n * each projected inner Observable.\r\n * @return {Observable} An Observable that emits the source values and also\r\n * result of applying the projection function to each value emitted on the\r\n * output Observable and and merging the results of the Observables obtained\r\n * from this transformation.\r\n * @method expand\r\n * @owner Observable\r\n */\r\nfunction expand(project, concurrent, scheduler) {\r\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n    if (scheduler === void 0) { scheduler = undefined; }\r\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\r\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\r\n}\r\nexports.expand = expand;\r\nvar ExpandOperator = (function () {\r\n    function ExpandOperator(project, concurrent, scheduler) {\r\n        this.project = project;\r\n        this.concurrent = concurrent;\r\n        this.scheduler = scheduler;\r\n    }\r\n    ExpandOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\r\n    };\r\n    return ExpandOperator;\r\n}());\r\nexports.ExpandOperator = ExpandOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ExpandSubscriber = (function (_super) {\r\n    __extends(ExpandSubscriber, _super);\r\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\r\n        _super.call(this, destination);\r\n        this.project = project;\r\n        this.concurrent = concurrent;\r\n        this.scheduler = scheduler;\r\n        this.index = 0;\r\n        this.active = 0;\r\n        this.hasCompleted = false;\r\n        if (concurrent < Number.POSITIVE_INFINITY) {\r\n            this.buffer = [];\r\n        }\r\n    }\r\n    ExpandSubscriber.dispatch = function (arg) {\r\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\r\n        subscriber.subscribeToProjection(result, value, index);\r\n    };\r\n    ExpandSubscriber.prototype._next = function (value) {\r\n        var destination = this.destination;\r\n        if (destination.closed) {\r\n            this._complete();\r\n            return;\r\n        }\r\n        var index = this.index++;\r\n        if (this.active < this.concurrent) {\r\n            destination.next(value);\r\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\r\n            if (result === errorObject_1.errorObject) {\r\n                destination.error(errorObject_1.errorObject.e);\r\n            }\r\n            else if (!this.scheduler) {\r\n                this.subscribeToProjection(result, value, index);\r\n            }\r\n            else {\r\n                var state = { subscriber: this, result: result, value: value, index: index };\r\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\r\n            }\r\n        }\r\n        else {\r\n            this.buffer.push(value);\r\n        }\r\n    };\r\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\r\n        this.active++;\r\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\r\n    };\r\n    ExpandSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.hasCompleted && this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this._next(innerValue);\r\n    };\r\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        var buffer = this.buffer;\r\n        this.remove(innerSub);\r\n        this.active--;\r\n        if (buffer && buffer.length > 0) {\r\n            this._next(buffer.shift());\r\n        }\r\n        if (this.hasCompleted && this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return ExpandSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.ExpandSubscriber = ExpandSubscriber;\r\n//# sourceMappingURL=expand.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/expand.js\n// module id = 887\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Subscription_1 = require('../Subscription');\r\n/**\r\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\r\n * the source terminates on complete or error.\r\n * @param {function} callback Function to be called when source terminates.\r\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\r\n * @method finally\r\n * @owner Observable\r\n */\r\nfunction _finally(callback) {\r\n    return this.lift(new FinallyOperator(callback));\r\n}\r\nexports._finally = _finally;\r\nvar FinallyOperator = (function () {\r\n    function FinallyOperator(callback) {\r\n        this.callback = callback;\r\n    }\r\n    FinallyOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\r\n    };\r\n    return FinallyOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar FinallySubscriber = (function (_super) {\r\n    __extends(FinallySubscriber, _super);\r\n    function FinallySubscriber(destination, callback) {\r\n        _super.call(this, destination);\r\n        this.add(new Subscription_1.Subscription(callback));\r\n    }\r\n    return FinallySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=finally.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/finally.js\n// module id = 888\n// module chunks = 4","\"use strict\";\r\nvar find_1 = require('./find');\r\n/**\r\n * Emits only the index of the first value emitted by the source Observable that\r\n * meets some condition.\r\n *\r\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\r\n * found value, not the value itself.</span>\r\n *\r\n * <img src=\"./img/findIndex.png\" width=\"100%\">\r\n *\r\n * `findIndex` searches for the first item in the source Observable that matches\r\n * the specified condition embodied by the `predicate`, and returns the\r\n * (zero-based) index of the first occurrence in the source. Unlike\r\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\r\n * an error if a valid value is not found.\r\n *\r\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link filter}\r\n * @see {@link find}\r\n * @see {@link first}\r\n * @see {@link take}\r\n *\r\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\r\n * A function called with each item to test for condition matching.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {Observable} An Observable of the index of the first item that\r\n * matches the condition.\r\n * @method find\r\n * @owner Observable\r\n */\r\nfunction findIndex(predicate, thisArg) {\r\n    return this.lift(new find_1.FindValueOperator(predicate, this, true, thisArg));\r\n}\r\nexports.findIndex = findIndex;\r\n//# sourceMappingURL=findIndex.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/findIndex.js\n// module id = 889\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Subscription_1 = require('../Subscription');\r\nvar Observable_1 = require('../Observable');\r\nvar Subject_1 = require('../Subject');\r\nvar Map_1 = require('../util/Map');\r\nvar FastMap_1 = require('../util/FastMap');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Groups the items emitted by an Observable according to a specified criterion,\r\n * and emits these grouped items as `GroupedObservables`, one\r\n * {@link GroupedObservable} per group.\r\n *\r\n * <img src=\"./img/groupBy.png\" width=\"100%\">\r\n *\r\n * @example <caption>Group objects by id and return as array</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs3'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *     )\r\n *     .groupBy(p => p.id)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // [ { id: 1, name: 'aze1' },\r\n * //   { id: 1, name: 'erg1' },\r\n * //   { id: 1, name: 'df1' } ]\r\n * //\r\n * // [ { id: 2, name: 'sf2' },\r\n * //   { id: 2, name: 'dg2' },\r\n * //   { id: 2, name: 'sfqfb2' },\r\n * //   { id: 2, name: 'qsgqsfg2' } ]\r\n * //\r\n * // [ { id: 3, name: 'qfs3' } ]\r\n *\r\n * @example <caption>Pivot data on the id field</caption>\r\n * Observable.of<Obj>({id: 1, name: 'aze1'},\r\n *                    {id: 2, name: 'sf2'},\r\n *                    {id: 2, name: 'dg2'},\r\n *                    {id: 1, name: 'erg1'},\r\n *                    {id: 1, name: 'df1'},\r\n *                    {id: 2, name: 'sfqfb2'},\r\n *                    {id: 3, name: 'qfs1'},\r\n *                    {id: 2, name: 'qsgqsfg2'}\r\n *                   )\r\n *     .groupBy(p => p.id, p => p.anme)\r\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\r\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\r\n *     .subscribe(p => console.log(p));\r\n *\r\n * // displays:\r\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\r\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\r\n * // { id: 3, values: [ 'qfs1' ] }\r\n *\r\n * @param {function(value: T): K} keySelector A function that extracts the key\r\n * for each item.\r\n * @param {function(value: T): R} [elementSelector] A function that extracts the\r\n * return element for each item.\r\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\r\n * A function that returns an Observable to determine how long each group should\r\n * exist.\r\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\r\n * GroupedObservables, each of which corresponds to a unique key value and each\r\n * of which emits those items from the source Observable that share that key\r\n * value.\r\n * @method groupBy\r\n * @owner Observable\r\n */\r\nfunction groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\r\n    return this.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\r\n}\r\nexports.groupBy = groupBy;\r\nvar GroupByOperator = (function () {\r\n    function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {\r\n        this.keySelector = keySelector;\r\n        this.elementSelector = elementSelector;\r\n        this.durationSelector = durationSelector;\r\n        this.subjectSelector = subjectSelector;\r\n    }\r\n    GroupByOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\r\n    };\r\n    return GroupByOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar GroupBySubscriber = (function (_super) {\r\n    __extends(GroupBySubscriber, _super);\r\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\r\n        _super.call(this, destination);\r\n        this.keySelector = keySelector;\r\n        this.elementSelector = elementSelector;\r\n        this.durationSelector = durationSelector;\r\n        this.subjectSelector = subjectSelector;\r\n        this.groups = null;\r\n        this.attemptedToUnsubscribe = false;\r\n        this.count = 0;\r\n    }\r\n    GroupBySubscriber.prototype._next = function (value) {\r\n        var key;\r\n        try {\r\n            key = this.keySelector(value);\r\n        }\r\n        catch (err) {\r\n            this.error(err);\r\n            return;\r\n        }\r\n        this._group(value, key);\r\n    };\r\n    GroupBySubscriber.prototype._group = function (value, key) {\r\n        var groups = this.groups;\r\n        if (!groups) {\r\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\r\n        }\r\n        var group = groups.get(key);\r\n        var element;\r\n        if (this.elementSelector) {\r\n            try {\r\n                element = this.elementSelector(value);\r\n            }\r\n            catch (err) {\r\n                this.error(err);\r\n            }\r\n        }\r\n        else {\r\n            element = value;\r\n        }\r\n        if (!group) {\r\n            group = this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject();\r\n            groups.set(key, group);\r\n            var groupedObservable = new GroupedObservable(key, group, this);\r\n            this.destination.next(groupedObservable);\r\n            if (this.durationSelector) {\r\n                var duration = void 0;\r\n                try {\r\n                    duration = this.durationSelector(new GroupedObservable(key, group));\r\n                }\r\n                catch (err) {\r\n                    this.error(err);\r\n                    return;\r\n                }\r\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\r\n            }\r\n        }\r\n        if (!group.closed) {\r\n            group.next(element);\r\n        }\r\n    };\r\n    GroupBySubscriber.prototype._error = function (err) {\r\n        var groups = this.groups;\r\n        if (groups) {\r\n            groups.forEach(function (group, key) {\r\n                group.error(err);\r\n            });\r\n            groups.clear();\r\n        }\r\n        this.destination.error(err);\r\n    };\r\n    GroupBySubscriber.prototype._complete = function () {\r\n        var groups = this.groups;\r\n        if (groups) {\r\n            groups.forEach(function (group, key) {\r\n                group.complete();\r\n            });\r\n            groups.clear();\r\n        }\r\n        this.destination.complete();\r\n    };\r\n    GroupBySubscriber.prototype.removeGroup = function (key) {\r\n        this.groups.delete(key);\r\n    };\r\n    GroupBySubscriber.prototype.unsubscribe = function () {\r\n        if (!this.closed) {\r\n            this.attemptedToUnsubscribe = true;\r\n            if (this.count === 0) {\r\n                _super.prototype.unsubscribe.call(this);\r\n            }\r\n        }\r\n    };\r\n    return GroupBySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar GroupDurationSubscriber = (function (_super) {\r\n    __extends(GroupDurationSubscriber, _super);\r\n    function GroupDurationSubscriber(key, group, parent) {\r\n        _super.call(this);\r\n        this.key = key;\r\n        this.group = group;\r\n        this.parent = parent;\r\n    }\r\n    GroupDurationSubscriber.prototype._next = function (value) {\r\n        this._complete();\r\n    };\r\n    GroupDurationSubscriber.prototype._error = function (err) {\r\n        var group = this.group;\r\n        if (!group.closed) {\r\n            group.error(err);\r\n        }\r\n        this.parent.removeGroup(this.key);\r\n    };\r\n    GroupDurationSubscriber.prototype._complete = function () {\r\n        var group = this.group;\r\n        if (!group.closed) {\r\n            group.complete();\r\n        }\r\n        this.parent.removeGroup(this.key);\r\n    };\r\n    return GroupDurationSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n/**\r\n * An Observable representing values belonging to the same group represented by\r\n * a common key. The values emitted by a GroupedObservable come from the source\r\n * Observable. The common key is available as the field `key` on a\r\n * GroupedObservable instance.\r\n *\r\n * @class GroupedObservable<K, T>\r\n */\r\nvar GroupedObservable = (function (_super) {\r\n    __extends(GroupedObservable, _super);\r\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\r\n        _super.call(this);\r\n        this.key = key;\r\n        this.groupSubject = groupSubject;\r\n        this.refCountSubscription = refCountSubscription;\r\n    }\r\n    GroupedObservable.prototype._subscribe = function (subscriber) {\r\n        var subscription = new Subscription_1.Subscription();\r\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\r\n        if (refCountSubscription && !refCountSubscription.closed) {\r\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\r\n        }\r\n        subscription.add(groupSubject.subscribe(subscriber));\r\n        return subscription;\r\n    };\r\n    return GroupedObservable;\r\n}(Observable_1.Observable));\r\nexports.GroupedObservable = GroupedObservable;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar InnerRefCountSubscription = (function (_super) {\r\n    __extends(InnerRefCountSubscription, _super);\r\n    function InnerRefCountSubscription(parent) {\r\n        _super.call(this);\r\n        this.parent = parent;\r\n        parent.count++;\r\n    }\r\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\r\n        var parent = this.parent;\r\n        if (!parent.closed && !this.closed) {\r\n            _super.prototype.unsubscribe.call(this);\r\n            parent.count -= 1;\r\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\r\n                parent.unsubscribe();\r\n            }\r\n        }\r\n    };\r\n    return InnerRefCountSubscription;\r\n}(Subscription_1.Subscription));\r\n//# sourceMappingURL=groupBy.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/groupBy.js\n// module id = 890\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.\r\n *\r\n * <img src=\"./img/isEmpty.png\" width=\"100%\">\r\n *\r\n * @return {Observable} An Observable that emits a Boolean.\r\n * @method isEmpty\r\n * @owner Observable\r\n */\r\nfunction isEmpty() {\r\n    return this.lift(new IsEmptyOperator());\r\n}\r\nexports.isEmpty = isEmpty;\r\nvar IsEmptyOperator = (function () {\r\n    function IsEmptyOperator() {\r\n    }\r\n    IsEmptyOperator.prototype.call = function (observer, source) {\r\n        return source.subscribe(new IsEmptySubscriber(observer));\r\n    };\r\n    return IsEmptyOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar IsEmptySubscriber = (function (_super) {\r\n    __extends(IsEmptySubscriber, _super);\r\n    function IsEmptySubscriber(destination) {\r\n        _super.call(this, destination);\r\n    }\r\n    IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {\r\n        var destination = this.destination;\r\n        destination.next(isEmpty);\r\n        destination.complete();\r\n    };\r\n    IsEmptySubscriber.prototype._next = function (value) {\r\n        this.notifyComplete(false);\r\n    };\r\n    IsEmptySubscriber.prototype._complete = function () {\r\n        this.notifyComplete(true);\r\n    };\r\n    return IsEmptySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=isEmpty.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/isEmpty.js\n// module id = 891\n// module chunks = 4","\"use strict\";\r\n/**\r\n * @param func\r\n * @return {Observable<R>}\r\n * @method let\r\n * @owner Observable\r\n */\r\nfunction letProto(func) {\r\n    return func(this);\r\n}\r\nexports.letProto = letProto;\r\n//# sourceMappingURL=let.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/let.js\n// module id = 892\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Emits the given constant value on the output Observable every time the source\r\n * Observable emits a value.\r\n *\r\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\r\n * the same output value every time.</span>\r\n *\r\n * <img src=\"./img/mapTo.png\" width=\"100%\">\r\n *\r\n * Takes a constant `value` as argument, and emits that whenever the source\r\n * Observable emits a value. In other words, ignores the actual source value,\r\n * and simply uses the emission moment to know when to emit the given `value`.\r\n *\r\n * @example <caption>Map every every click to the string 'Hi'</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var greetings = clicks.mapTo('Hi');\r\n * greetings.subscribe(x => console.log(x));\r\n *\r\n * @see {@link map}\r\n *\r\n * @param {any} value The value to map each source value to.\r\n * @return {Observable} An Observable that emits the given `value` every time\r\n * the source Observable emits something.\r\n * @method mapTo\r\n * @owner Observable\r\n */\r\nfunction mapTo(value) {\r\n    return this.lift(new MapToOperator(value));\r\n}\r\nexports.mapTo = mapTo;\r\nvar MapToOperator = (function () {\r\n    function MapToOperator(value) {\r\n        this.value = value;\r\n    }\r\n    MapToOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\r\n    };\r\n    return MapToOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MapToSubscriber = (function (_super) {\r\n    __extends(MapToSubscriber, _super);\r\n    function MapToSubscriber(destination, value) {\r\n        _super.call(this, destination);\r\n        this.value = value;\r\n    }\r\n    MapToSubscriber.prototype._next = function (x) {\r\n        this.destination.next(this.value);\r\n    };\r\n    return MapToSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=mapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mapTo.js\n// module id = 893\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Notification_1 = require('../Notification');\r\n/**\r\n * Represents all of the notifications from the source Observable as `next`\r\n * emissions marked with their original types within {@link Notification}\r\n * objects.\r\n *\r\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\r\n * {@link Notification} objects, emitted as `next` on the output Observable.\r\n * </span>\r\n *\r\n * <img src=\"./img/materialize.png\" width=\"100%\">\r\n *\r\n * `materialize` returns an Observable that emits a `next` notification for each\r\n * `next`, `error`, or `complete` emission of the source Observable. When the\r\n * source Observable emits `complete`, the output Observable will emit `next` as\r\n * a Notification of type \"complete\", and then it will emit `complete` as well.\r\n * When the source Observable emits `error`, the output will emit `next` as a\r\n * Notification of type \"error\", and then `complete`.\r\n *\r\n * This operator is useful for producing metadata of the source Observable, to\r\n * be consumed as `next` emissions. Use it in conjunction with\r\n * {@link dematerialize}.\r\n *\r\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\r\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\r\n * var upperCase = letters.map(x => x.toUpperCase());\r\n * var materialized = upperCase.materialize();\r\n * materialized.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\r\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\r\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\r\n * //   [as project] (http://1…, hasValue: false}\r\n *\r\n * @see {@link Notification}\r\n * @see {@link dematerialize}\r\n *\r\n * @return {Observable<Notification<T>>} An Observable that emits\r\n * {@link Notification} objects that wrap the original emissions from the source\r\n * Observable with metadata.\r\n * @method materialize\r\n * @owner Observable\r\n */\r\nfunction materialize() {\r\n    return this.lift(new MaterializeOperator());\r\n}\r\nexports.materialize = materialize;\r\nvar MaterializeOperator = (function () {\r\n    function MaterializeOperator() {\r\n    }\r\n    MaterializeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new MaterializeSubscriber(subscriber));\r\n    };\r\n    return MaterializeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MaterializeSubscriber = (function (_super) {\r\n    __extends(MaterializeSubscriber, _super);\r\n    function MaterializeSubscriber(destination) {\r\n        _super.call(this, destination);\r\n    }\r\n    MaterializeSubscriber.prototype._next = function (value) {\r\n        this.destination.next(Notification_1.Notification.createNext(value));\r\n    };\r\n    MaterializeSubscriber.prototype._error = function (err) {\r\n        var destination = this.destination;\r\n        destination.next(Notification_1.Notification.createError(err));\r\n        destination.complete();\r\n    };\r\n    MaterializeSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        destination.next(Notification_1.Notification.createComplete());\r\n        destination.complete();\r\n    };\r\n    return MaterializeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=materialize.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/materialize.js\n// module id = 894\n// module chunks = 4","\"use strict\";\r\nvar reduce_1 = require('./reduce');\r\n/**\r\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the largest value.\r\n *\r\n * <img src=\"./img/max.png\" width=\"100%\">\r\n *\r\n * @example <caption>Get the maximal value of a series of numbers</caption>\r\n * Rx.Observable.of(5, 4, 7, 2, 8)\r\n *   .max()\r\n *   .subscribe(x => console.log(x)); // -> 8\r\n *\r\n * @example <caption>Use a comparer function to get the maximal item</caption>\r\n * interface Person {\r\n *   age: number,\r\n *   name: string\r\n * }\r\n * Observable.of<Person>({age: 7, name: 'Foo'},\r\n *                       {age: 5, name: 'Bar'},\r\n *                       {age: 9, name: 'Beer'})\r\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\r\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\r\n * }\r\n *\r\n * @see {@link min}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return {Observable} An Observable that emits item with the largest value.\r\n * @method max\r\n * @owner Observable\r\n */\r\nfunction max(comparer) {\r\n    var max = (typeof comparer === 'function')\r\n        ? function (x, y) { return comparer(x, y) > 0 ? x : y; }\r\n        : function (x, y) { return x > y ? x : y; };\r\n    return this.lift(new reduce_1.ReduceOperator(max));\r\n}\r\nexports.max = max;\r\n//# sourceMappingURL=max.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/max.js\n// module id = 895\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\n/**\r\n * Applies an accumulator function over the source Observable where the\r\n * accumulator function itself returns an Observable, then each intermediate\r\n * Observable returned is merged into the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\r\n * by the accumulator are merged into the outer Observable.</span>\r\n *\r\n * @example <caption>Count the number of click events</caption>\r\n * const click$ = Rx.Observable.fromEvent(document, 'click');\r\n * const one$ = click$.mapTo(1);\r\n * const seed = 0;\r\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\r\n * count$.subscribe(x => console.log(x));\r\n *\r\n * // Results:\r\n * 1\r\n * 2\r\n * 3\r\n * 4\r\n * // ...and so on for each click\r\n *\r\n * @param {function(acc: R, value: T): Observable<R>} accumulator\r\n * The accumulator function called on each source value.\r\n * @param seed The initial accumulation value.\r\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\r\n * input Observables being subscribed to concurrently.\r\n * @return {Observable<R>} An observable of the accumulated values.\r\n * @method mergeScan\r\n * @owner Observable\r\n */\r\nfunction mergeScan(accumulator, seed, concurrent) {\r\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\r\n    return this.lift(new MergeScanOperator(accumulator, seed, concurrent));\r\n}\r\nexports.mergeScan = mergeScan;\r\nvar MergeScanOperator = (function () {\r\n    function MergeScanOperator(accumulator, seed, concurrent) {\r\n        this.accumulator = accumulator;\r\n        this.seed = seed;\r\n        this.concurrent = concurrent;\r\n    }\r\n    MergeScanOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\r\n    };\r\n    return MergeScanOperator;\r\n}());\r\nexports.MergeScanOperator = MergeScanOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar MergeScanSubscriber = (function (_super) {\r\n    __extends(MergeScanSubscriber, _super);\r\n    function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\r\n        _super.call(this, destination);\r\n        this.accumulator = accumulator;\r\n        this.acc = acc;\r\n        this.concurrent = concurrent;\r\n        this.hasValue = false;\r\n        this.hasCompleted = false;\r\n        this.buffer = [];\r\n        this.active = 0;\r\n        this.index = 0;\r\n    }\r\n    MergeScanSubscriber.prototype._next = function (value) {\r\n        if (this.active < this.concurrent) {\r\n            var index = this.index++;\r\n            var ish = tryCatch_1.tryCatch(this.accumulator)(this.acc, value);\r\n            var destination = this.destination;\r\n            if (ish === errorObject_1.errorObject) {\r\n                destination.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                this.active++;\r\n                this._innerSub(ish, value, index);\r\n            }\r\n        }\r\n        else {\r\n            this.buffer.push(value);\r\n        }\r\n    };\r\n    MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {\r\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\r\n    };\r\n    MergeScanSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.active === 0 && this.buffer.length === 0) {\r\n            if (this.hasValue === false) {\r\n                this.destination.next(this.acc);\r\n            }\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var destination = this.destination;\r\n        this.acc = innerValue;\r\n        this.hasValue = true;\r\n        destination.next(innerValue);\r\n    };\r\n    MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        var buffer = this.buffer;\r\n        this.remove(innerSub);\r\n        this.active--;\r\n        if (buffer.length > 0) {\r\n            this._next(buffer.shift());\r\n        }\r\n        else if (this.active === 0 && this.hasCompleted) {\r\n            if (this.hasValue === false) {\r\n                this.destination.next(this.acc);\r\n            }\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return MergeScanSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\nexports.MergeScanSubscriber = MergeScanSubscriber;\r\n//# sourceMappingURL=mergeScan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/mergeScan.js\n// module id = 896\n// module chunks = 4","\"use strict\";\r\nvar reduce_1 = require('./reduce');\r\n/**\r\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\r\n * and when source Observable completes it emits a single item: the item with the smallest value.\r\n *\r\n * <img src=\"./img/min.png\" width=\"100%\">\r\n *\r\n * @example <caption>Get the minimal value of a series of numbers</caption>\r\n * Rx.Observable.of(5, 4, 7, 2, 8)\r\n *   .min()\r\n *   .subscribe(x => console.log(x)); // -> 2\r\n *\r\n * @example <caption>Use a comparer function to get the minimal item</caption>\r\n * interface Person {\r\n *   age: number,\r\n *   name: string\r\n * }\r\n * Observable.of<Person>({age: 7, name: 'Foo'},\r\n *                       {age: 5, name: 'Bar'},\r\n *                       {age: 9, name: 'Beer'})\r\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\r\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\r\n * }\r\n *\r\n * @see {@link max}\r\n *\r\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\r\n * value of two items.\r\n * @return {Observable<R>} An Observable that emits item with the smallest value.\r\n * @method min\r\n * @owner Observable\r\n */\r\nfunction min(comparer) {\r\n    var min = (typeof comparer === 'function')\r\n        ? function (x, y) { return comparer(x, y) < 0 ? x : y; }\r\n        : function (x, y) { return x < y ? x : y; };\r\n    return this.lift(new reduce_1.ReduceOperator(min));\r\n}\r\nexports.min = min;\r\n//# sourceMappingURL=min.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/min.js\n// module id = 897\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Groups pairs of consecutive emissions together and emits them as an array of\r\n * two values.\r\n *\r\n * <span class=\"informal\">Puts the current value and previous value together as\r\n * an array, and emits that.</span>\r\n *\r\n * <img src=\"./img/pairwise.png\" width=\"100%\">\r\n *\r\n * The Nth emission from the source Observable will cause the output Observable\r\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\r\n * pair. For this reason, `pairwise` emits on the second and subsequent\r\n * emissions from the source Observable, but not on the first emission, because\r\n * there is no previous value in that case.\r\n *\r\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var pairs = clicks.pairwise();\r\n * var distance = pairs.map(pair => {\r\n *   var x0 = pair[0].clientX;\r\n *   var y0 = pair[0].clientY;\r\n *   var x1 = pair[1].clientX;\r\n *   var y1 = pair[1].clientY;\r\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\r\n * });\r\n * distance.subscribe(x => console.log(x));\r\n *\r\n * @see {@link buffer}\r\n * @see {@link bufferCount}\r\n *\r\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\r\n * consecutive values from the source Observable.\r\n * @method pairwise\r\n * @owner Observable\r\n */\r\nfunction pairwise() {\r\n    return this.lift(new PairwiseOperator());\r\n}\r\nexports.pairwise = pairwise;\r\nvar PairwiseOperator = (function () {\r\n    function PairwiseOperator() {\r\n    }\r\n    PairwiseOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new PairwiseSubscriber(subscriber));\r\n    };\r\n    return PairwiseOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar PairwiseSubscriber = (function (_super) {\r\n    __extends(PairwiseSubscriber, _super);\r\n    function PairwiseSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.hasPrev = false;\r\n    }\r\n    PairwiseSubscriber.prototype._next = function (value) {\r\n        if (this.hasPrev) {\r\n            this.destination.next([this.prev, value]);\r\n        }\r\n        else {\r\n            this.hasPrev = true;\r\n        }\r\n        this.prev = value;\r\n    };\r\n    return PairwiseSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=pairwise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/pairwise.js\n// module id = 898\n// module chunks = 4","\"use strict\";\r\nvar not_1 = require('../util/not');\r\nvar filter_1 = require('./filter');\r\n/**\r\n * Splits the source Observable into two, one with values that satisfy a\r\n * predicate, and another with values that don't satisfy the predicate.\r\n *\r\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\r\n * one like the output of {@link filter}, and the other with values that did not\r\n * pass the condition.</span>\r\n *\r\n * <img src=\"./img/partition.png\" width=\"100%\">\r\n *\r\n * `partition` outputs an array with two Observables that partition the values\r\n * from the source Observable through the given `predicate` function. The first\r\n * Observable in that array emits source values for which the predicate argument\r\n * returns true. The second Observable emits source values for which the\r\n * predicate returns false. The first behaves like {@link filter} and the second\r\n * behaves like {@link filter} with the predicate negated.\r\n *\r\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\r\n * var clicksOnDivs = parts[0];\r\n * var clicksElsewhere = parts[1];\r\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\r\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\r\n *\r\n * @see {@link filter}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates each value emitted by the source Observable. If it returns `true`,\r\n * the value is emitted on the first Observable in the returned array, if\r\n * `false` the value is emitted on the second Observable in the array. The\r\n * `index` parameter is the number `i` for the i-th source emission that has\r\n * happened since the subscription, starting from the number `0`.\r\n * @param {any} [thisArg] An optional argument to determine the value of `this`\r\n * in the `predicate` function.\r\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\r\n * with values that passed the predicate, and another with values that did not\r\n * pass the predicate.\r\n * @method partition\r\n * @owner Observable\r\n */\r\nfunction partition(predicate, thisArg) {\r\n    return [\r\n        filter_1.filter.call(this, predicate, thisArg),\r\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\r\n    ];\r\n}\r\nexports.partition = partition;\r\n//# sourceMappingURL=partition.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/partition.js\n// module id = 899\n// module chunks = 4","\"use strict\";\r\nvar Subject_1 = require('../Subject');\r\nvar multicast_1 = require('./multicast');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\r\n * before it begins emitting items to those Observers that have subscribed to it.\r\n *\r\n * <img src=\"./img/publish.png\" width=\"100%\">\r\n *\r\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\r\n * as needed, without causing multiple subscriptions to the source sequence.\r\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\r\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\r\n * @method publish\r\n * @owner Observable\r\n */\r\nfunction publish(selector) {\r\n    return selector ? multicast_1.multicast.call(this, function () { return new Subject_1.Subject(); }, selector) :\r\n        multicast_1.multicast.call(this, new Subject_1.Subject());\r\n}\r\nexports.publish = publish;\r\n//# sourceMappingURL=publish.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publish.js\n// module id = 900\n// module chunks = 4","\"use strict\";\r\nvar BehaviorSubject_1 = require('../BehaviorSubject');\r\nvar multicast_1 = require('./multicast');\r\n/**\r\n * @param value\r\n * @return {ConnectableObservable<T>}\r\n * @method publishBehavior\r\n * @owner Observable\r\n */\r\nfunction publishBehavior(value) {\r\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\r\n}\r\nexports.publishBehavior = publishBehavior;\r\n//# sourceMappingURL=publishBehavior.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishBehavior.js\n// module id = 901\n// module chunks = 4","\"use strict\";\r\nvar AsyncSubject_1 = require('../AsyncSubject');\r\nvar multicast_1 = require('./multicast');\r\n/**\r\n * @return {ConnectableObservable<T>}\r\n * @method publishLast\r\n * @owner Observable\r\n */\r\nfunction publishLast() {\r\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\r\n}\r\nexports.publishLast = publishLast;\r\n//# sourceMappingURL=publishLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishLast.js\n// module id = 902\n// module chunks = 4","\"use strict\";\r\nvar ReplaySubject_1 = require('../ReplaySubject');\r\nvar multicast_1 = require('./multicast');\r\n/**\r\n * @param bufferSize\r\n * @param windowTime\r\n * @param scheduler\r\n * @return {ConnectableObservable<T>}\r\n * @method publishReplay\r\n * @owner Observable\r\n */\r\nfunction publishReplay(bufferSize, windowTime, scheduler) {\r\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\r\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\r\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\r\n}\r\nexports.publishReplay = publishReplay;\r\n//# sourceMappingURL=publishReplay.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/publishReplay.js\n// module id = 903\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\n/**\r\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\r\n *\r\n * <img src=\"./img/repeat.png\" width=\"100%\">\r\n *\r\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\r\n * an empty Observable.\r\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\r\n * count times.\r\n * @method repeat\r\n * @owner Observable\r\n */\r\nfunction repeat(count) {\r\n    if (count === void 0) { count = -1; }\r\n    if (count === 0) {\r\n        return new EmptyObservable_1.EmptyObservable();\r\n    }\r\n    else if (count < 0) {\r\n        return this.lift(new RepeatOperator(-1, this));\r\n    }\r\n    else {\r\n        return this.lift(new RepeatOperator(count - 1, this));\r\n    }\r\n}\r\nexports.repeat = repeat;\r\nvar RepeatOperator = (function () {\r\n    function RepeatOperator(count, source) {\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RepeatOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\r\n    };\r\n    return RepeatOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RepeatSubscriber = (function (_super) {\r\n    __extends(RepeatSubscriber, _super);\r\n    function RepeatSubscriber(destination, count, source) {\r\n        _super.call(this, destination);\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RepeatSubscriber.prototype.complete = function () {\r\n        if (!this.isStopped) {\r\n            var _a = this, source = _a.source, count = _a.count;\r\n            if (count === 0) {\r\n                return _super.prototype.complete.call(this);\r\n            }\r\n            else if (count > -1) {\r\n                this.count = count - 1;\r\n            }\r\n            source.subscribe(this._unsubscribeAndRecycle());\r\n        }\r\n    };\r\n    return RepeatSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=repeat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/repeat.js\n// module id = 904\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\r\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\r\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\r\n * this method will resubscribe to the source Observable.\r\n *\r\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\r\n *\r\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\r\n * which a user can `complete` or `error`, aborting the repetition.\r\n * @return {Observable} The source Observable modified with repeat logic.\r\n * @method repeatWhen\r\n * @owner Observable\r\n */\r\nfunction repeatWhen(notifier) {\r\n    return this.lift(new RepeatWhenOperator(notifier));\r\n}\r\nexports.repeatWhen = repeatWhen;\r\nvar RepeatWhenOperator = (function () {\r\n    function RepeatWhenOperator(notifier) {\r\n        this.notifier = notifier;\r\n    }\r\n    RepeatWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\r\n    };\r\n    return RepeatWhenOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RepeatWhenSubscriber = (function (_super) {\r\n    __extends(RepeatWhenSubscriber, _super);\r\n    function RepeatWhenSubscriber(destination, notifier, source) {\r\n        _super.call(this, destination);\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n        this.sourceIsBeingSubscribedTo = true;\r\n    }\r\n    RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.sourceIsBeingSubscribedTo = true;\r\n        this.source.subscribe(this);\r\n    };\r\n    RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        if (this.sourceIsBeingSubscribedTo === false) {\r\n            return _super.prototype.complete.call(this);\r\n        }\r\n    };\r\n    RepeatWhenSubscriber.prototype.complete = function () {\r\n        this.sourceIsBeingSubscribedTo = false;\r\n        if (!this.isStopped) {\r\n            if (!this.retries) {\r\n                this.subscribeToRetries();\r\n            }\r\n            else if (this.retriesSubscription.closed) {\r\n                return _super.prototype.complete.call(this);\r\n            }\r\n            this._unsubscribeAndRecycle();\r\n            this.notifications.next();\r\n        }\r\n    };\r\n    RepeatWhenSubscriber.prototype._unsubscribe = function () {\r\n        var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;\r\n        if (notifications) {\r\n            notifications.unsubscribe();\r\n            this.notifications = null;\r\n        }\r\n        if (retriesSubscription) {\r\n            retriesSubscription.unsubscribe();\r\n            this.retriesSubscription = null;\r\n        }\r\n        this.retries = null;\r\n    };\r\n    RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {\r\n        var _a = this, notifications = _a.notifications, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\r\n        this.notifications = null;\r\n        this.retries = null;\r\n        this.retriesSubscription = null;\r\n        _super.prototype._unsubscribeAndRecycle.call(this);\r\n        this.notifications = notifications;\r\n        this.retries = retries;\r\n        this.retriesSubscription = retriesSubscription;\r\n        return this;\r\n    };\r\n    RepeatWhenSubscriber.prototype.subscribeToRetries = function () {\r\n        this.notifications = new Subject_1.Subject();\r\n        var retries = tryCatch_1.tryCatch(this.notifier)(this.notifications);\r\n        if (retries === errorObject_1.errorObject) {\r\n            return _super.prototype.complete.call(this);\r\n        }\r\n        this.retries = retries;\r\n        this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\r\n    };\r\n    return RepeatWhenSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=repeatWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/repeatWhen.js\n// module id = 905\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\r\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\r\n * as a number parameter) rather than propagating the `error` call.\r\n *\r\n * <img src=\"./img/retry.png\" width=\"100%\">\r\n *\r\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\r\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\r\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\r\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\r\n * @param {number} count - Number of retry attempts before failing.\r\n * @return {Observable} The source Observable modified with the retry logic.\r\n * @method retry\r\n * @owner Observable\r\n */\r\nfunction retry(count) {\r\n    if (count === void 0) { count = -1; }\r\n    return this.lift(new RetryOperator(count, this));\r\n}\r\nexports.retry = retry;\r\nvar RetryOperator = (function () {\r\n    function RetryOperator(count, source) {\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RetryOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\r\n    };\r\n    return RetryOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RetrySubscriber = (function (_super) {\r\n    __extends(RetrySubscriber, _super);\r\n    function RetrySubscriber(destination, count, source) {\r\n        _super.call(this, destination);\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RetrySubscriber.prototype.error = function (err) {\r\n        if (!this.isStopped) {\r\n            var _a = this, source = _a.source, count = _a.count;\r\n            if (count === 0) {\r\n                return _super.prototype.error.call(this, err);\r\n            }\r\n            else if (count > -1) {\r\n                this.count = count - 1;\r\n            }\r\n            source.subscribe(this._unsubscribeAndRecycle());\r\n        }\r\n    };\r\n    return RetrySubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=retry.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/retry.js\n// module id = 906\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\r\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\r\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\r\n * subscription. Otherwise this method will resubscribe to the source Observable.\r\n *\r\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\r\n *\r\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\r\n * user can `complete` or `error`, aborting the retry.\r\n * @return {Observable} The source Observable modified with retry logic.\r\n * @method retryWhen\r\n * @owner Observable\r\n */\r\nfunction retryWhen(notifier) {\r\n    return this.lift(new RetryWhenOperator(notifier, this));\r\n}\r\nexports.retryWhen = retryWhen;\r\nvar RetryWhenOperator = (function () {\r\n    function RetryWhenOperator(notifier, source) {\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\r\n    };\r\n    return RetryWhenOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar RetryWhenSubscriber = (function (_super) {\r\n    __extends(RetryWhenSubscriber, _super);\r\n    function RetryWhenSubscriber(destination, notifier, source) {\r\n        _super.call(this, destination);\r\n        this.notifier = notifier;\r\n        this.source = source;\r\n    }\r\n    RetryWhenSubscriber.prototype.error = function (err) {\r\n        if (!this.isStopped) {\r\n            var errors = this.errors;\r\n            var retries = this.retries;\r\n            var retriesSubscription = this.retriesSubscription;\r\n            if (!retries) {\r\n                errors = new Subject_1.Subject();\r\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\r\n                if (retries === errorObject_1.errorObject) {\r\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\r\n                }\r\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\r\n            }\r\n            else {\r\n                this.errors = null;\r\n                this.retriesSubscription = null;\r\n            }\r\n            this._unsubscribeAndRecycle();\r\n            this.errors = errors;\r\n            this.retries = retries;\r\n            this.retriesSubscription = retriesSubscription;\r\n            errors.next(err);\r\n        }\r\n    };\r\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\r\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\r\n        if (errors) {\r\n            errors.unsubscribe();\r\n            this.errors = null;\r\n        }\r\n        if (retriesSubscription) {\r\n            retriesSubscription.unsubscribe();\r\n            this.retriesSubscription = null;\r\n        }\r\n        this.retries = null;\r\n    };\r\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\r\n        this.errors = null;\r\n        this.retries = null;\r\n        this.retriesSubscription = null;\r\n        this._unsubscribeAndRecycle();\r\n        this.errors = errors;\r\n        this.retries = retries;\r\n        this.retriesSubscription = retriesSubscription;\r\n        this.source.subscribe(this);\r\n    };\r\n    return RetryWhenSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=retryWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/retryWhen.js\n// module id = 907\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Emits the most recently emitted value from the source Observable whenever\r\n * another Observable, the `notifier`, emits.\r\n *\r\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\r\n * the `notifier` Observable emits something.</span>\r\n *\r\n * <img src=\"./img/sample.png\" width=\"100%\">\r\n *\r\n * Whenever the `notifier` Observable emits a value or completes, `sample`\r\n * looks at the source Observable and emits whichever value it has most recently\r\n * emitted since the previous sampling, unless the source has not emitted\r\n * anything since the previous sampling. The `notifier` is subscribed to as soon\r\n * as the output Observable is subscribed.\r\n *\r\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\r\n * var seconds = Rx.Observable.interval(1000);\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = seconds.sample(clicks);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounce}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n *\r\n * @param {Observable<any>} notifier The Observable to use for sampling the\r\n * source Observable.\r\n * @return {Observable<T>} An Observable that emits the results of sampling the\r\n * values emitted by the source Observable whenever the notifier Observable\r\n * emits value or completes.\r\n * @method sample\r\n * @owner Observable\r\n */\r\nfunction sample(notifier) {\r\n    return this.lift(new SampleOperator(notifier));\r\n}\r\nexports.sample = sample;\r\nvar SampleOperator = (function () {\r\n    function SampleOperator(notifier) {\r\n        this.notifier = notifier;\r\n    }\r\n    SampleOperator.prototype.call = function (subscriber, source) {\r\n        var sampleSubscriber = new SampleSubscriber(subscriber);\r\n        var subscription = source.subscribe(sampleSubscriber);\r\n        subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber, this.notifier));\r\n        return subscription;\r\n    };\r\n    return SampleOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SampleSubscriber = (function (_super) {\r\n    __extends(SampleSubscriber, _super);\r\n    function SampleSubscriber() {\r\n        _super.apply(this, arguments);\r\n        this.hasValue = false;\r\n    }\r\n    SampleSubscriber.prototype._next = function (value) {\r\n        this.value = value;\r\n        this.hasValue = true;\r\n    };\r\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.emitValue();\r\n    };\r\n    SampleSubscriber.prototype.notifyComplete = function () {\r\n        this.emitValue();\r\n    };\r\n    SampleSubscriber.prototype.emitValue = function () {\r\n        if (this.hasValue) {\r\n            this.hasValue = false;\r\n            this.destination.next(this.value);\r\n        }\r\n    };\r\n    return SampleSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=sample.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sample.js\n// module id = 908\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar async_1 = require('../scheduler/async');\r\n/**\r\n * Emits the most recently emitted value from the source Observable within\r\n * periodic time intervals.\r\n *\r\n * <span class=\"informal\">Samples the source Observable at periodic time\r\n * intervals, emitting what it samples.</span>\r\n *\r\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\r\n *\r\n * `sampleTime` periodically looks at the source Observable and emits whichever\r\n * value it has most recently emitted since the previous sampling, unless the\r\n * source has not emitted anything since the previous sampling. The sampling\r\n * happens periodically in time every `period` milliseconds (or the time unit\r\n * defined by the optional `scheduler` argument). The sampling starts as soon as\r\n * the output Observable is subscribed.\r\n *\r\n * @example <caption>Every second, emit the most recent click at most once</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.sampleTime(1000);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sample}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {number} period The sampling period expressed in milliseconds or the\r\n * time unit determined internally by the optional `scheduler`.\r\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\r\n * managing the timers that handle the sampling.\r\n * @return {Observable<T>} An Observable that emits the results of sampling the\r\n * values emitted by the source Observable at the specified time interval.\r\n * @method sampleTime\r\n * @owner Observable\r\n */\r\nfunction sampleTime(period, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    return this.lift(new SampleTimeOperator(period, scheduler));\r\n}\r\nexports.sampleTime = sampleTime;\r\nvar SampleTimeOperator = (function () {\r\n    function SampleTimeOperator(period, scheduler) {\r\n        this.period = period;\r\n        this.scheduler = scheduler;\r\n    }\r\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\r\n    };\r\n    return SampleTimeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SampleTimeSubscriber = (function (_super) {\r\n    __extends(SampleTimeSubscriber, _super);\r\n    function SampleTimeSubscriber(destination, period, scheduler) {\r\n        _super.call(this, destination);\r\n        this.period = period;\r\n        this.scheduler = scheduler;\r\n        this.hasValue = false;\r\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period: period }));\r\n    }\r\n    SampleTimeSubscriber.prototype._next = function (value) {\r\n        this.lastValue = value;\r\n        this.hasValue = true;\r\n    };\r\n    SampleTimeSubscriber.prototype.notifyNext = function () {\r\n        if (this.hasValue) {\r\n            this.hasValue = false;\r\n            this.destination.next(this.lastValue);\r\n        }\r\n    };\r\n    return SampleTimeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nfunction dispatchNotification(state) {\r\n    var subscriber = state.subscriber, period = state.period;\r\n    subscriber.notifyNext();\r\n    this.schedule(state, period);\r\n}\r\n//# sourceMappingURL=sampleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sampleTime.js\n// module id = 909\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\n/**\r\n * Compares all values of two observables in sequence using an optional comparor function\r\n * and returns an observable of a single boolean value representing whether or not the two sequences\r\n * are equal.\r\n *\r\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\r\n *\r\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\r\n *\r\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\r\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\r\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\r\n * observables completes, the operator will wait for the other observable to complete; If the other\r\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\r\n * completes or emits after the other complets, the returned observable will never complete.\r\n *\r\n * @example <caption>figure out if the Konami code matches</caption>\r\n * var code = Rx.Observable.from([\r\n *  \"ArrowUp\",\r\n *  \"ArrowUp\",\r\n *  \"ArrowDown\",\r\n *  \"ArrowDown\",\r\n *  \"ArrowLeft\",\r\n *  \"ArrowRight\",\r\n *  \"ArrowLeft\",\r\n *  \"ArrowRight\",\r\n *  \"KeyB\",\r\n *  \"KeyA\",\r\n *  \"Enter\" // no start key, clearly.\r\n * ]);\r\n *\r\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\r\n *  .map(e => e.code);\r\n * var matches = keys.bufferCount(11, 1)\r\n *  .mergeMap(\r\n *    last11 =>\r\n *      Rx.Observable.from(last11)\r\n *        .sequenceEqual(code)\r\n *   );\r\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\r\n *\r\n * @see {@link combineLatest}\r\n * @see {@link zip}\r\n * @see {@link withLatestFrom}\r\n *\r\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\r\n * @param {function} [comparor] An optional function to compare each value pair\r\n * @return {Observable} An Observable of a single boolean value representing whether or not\r\n * the values emitted by both observables were equal in sequence.\r\n * @method sequenceEqual\r\n * @owner Observable\r\n */\r\nfunction sequenceEqual(compareTo, comparor) {\r\n    return this.lift(new SequenceEqualOperator(compareTo, comparor));\r\n}\r\nexports.sequenceEqual = sequenceEqual;\r\nvar SequenceEqualOperator = (function () {\r\n    function SequenceEqualOperator(compareTo, comparor) {\r\n        this.compareTo = compareTo;\r\n        this.comparor = comparor;\r\n    }\r\n    SequenceEqualOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\r\n    };\r\n    return SequenceEqualOperator;\r\n}());\r\nexports.SequenceEqualOperator = SequenceEqualOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SequenceEqualSubscriber = (function (_super) {\r\n    __extends(SequenceEqualSubscriber, _super);\r\n    function SequenceEqualSubscriber(destination, compareTo, comparor) {\r\n        _super.call(this, destination);\r\n        this.compareTo = compareTo;\r\n        this.comparor = comparor;\r\n        this._a = [];\r\n        this._b = [];\r\n        this._oneComplete = false;\r\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\r\n    }\r\n    SequenceEqualSubscriber.prototype._next = function (value) {\r\n        if (this._oneComplete && this._b.length === 0) {\r\n            this.emit(false);\r\n        }\r\n        else {\r\n            this._a.push(value);\r\n            this.checkValues();\r\n        }\r\n    };\r\n    SequenceEqualSubscriber.prototype._complete = function () {\r\n        if (this._oneComplete) {\r\n            this.emit(this._a.length === 0 && this._b.length === 0);\r\n        }\r\n        else {\r\n            this._oneComplete = true;\r\n        }\r\n    };\r\n    SequenceEqualSubscriber.prototype.checkValues = function () {\r\n        var _c = this, _a = _c._a, _b = _c._b, comparor = _c.comparor;\r\n        while (_a.length > 0 && _b.length > 0) {\r\n            var a = _a.shift();\r\n            var b = _b.shift();\r\n            var areEqual = false;\r\n            if (comparor) {\r\n                areEqual = tryCatch_1.tryCatch(comparor)(a, b);\r\n                if (areEqual === errorObject_1.errorObject) {\r\n                    this.destination.error(errorObject_1.errorObject.e);\r\n                }\r\n            }\r\n            else {\r\n                areEqual = a === b;\r\n            }\r\n            if (!areEqual) {\r\n                this.emit(false);\r\n            }\r\n        }\r\n    };\r\n    SequenceEqualSubscriber.prototype.emit = function (value) {\r\n        var destination = this.destination;\r\n        destination.next(value);\r\n        destination.complete();\r\n    };\r\n    SequenceEqualSubscriber.prototype.nextB = function (value) {\r\n        if (this._oneComplete && this._a.length === 0) {\r\n            this.emit(false);\r\n        }\r\n        else {\r\n            this._b.push(value);\r\n            this.checkValues();\r\n        }\r\n    };\r\n    return SequenceEqualSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nexports.SequenceEqualSubscriber = SequenceEqualSubscriber;\r\nvar SequenceEqualCompareToSubscriber = (function (_super) {\r\n    __extends(SequenceEqualCompareToSubscriber, _super);\r\n    function SequenceEqualCompareToSubscriber(destination, parent) {\r\n        _super.call(this, destination);\r\n        this.parent = parent;\r\n    }\r\n    SequenceEqualCompareToSubscriber.prototype._next = function (value) {\r\n        this.parent.nextB(value);\r\n    };\r\n    SequenceEqualCompareToSubscriber.prototype._error = function (err) {\r\n        this.parent.error(err);\r\n    };\r\n    SequenceEqualCompareToSubscriber.prototype._complete = function () {\r\n        this.parent._complete();\r\n    };\r\n    return SequenceEqualCompareToSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=sequenceEqual.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/sequenceEqual.js\n// module id = 910\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar EmptyError_1 = require('../util/EmptyError');\r\n/**\r\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\r\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\r\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\r\n *\r\n * <img src=\"./img/single.png\" width=\"100%\">\r\n *\r\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\r\n * callback if the Observable completes before any `next` notification was sent.\r\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\r\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\r\n * the predicate.\r\n .\r\n * @method single\r\n * @owner Observable\r\n */\r\nfunction single(predicate) {\r\n    return this.lift(new SingleOperator(predicate, this));\r\n}\r\nexports.single = single;\r\nvar SingleOperator = (function () {\r\n    function SingleOperator(predicate, source) {\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n    }\r\n    SingleOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\r\n    };\r\n    return SingleOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SingleSubscriber = (function (_super) {\r\n    __extends(SingleSubscriber, _super);\r\n    function SingleSubscriber(destination, predicate, source) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.source = source;\r\n        this.seenValue = false;\r\n        this.index = 0;\r\n    }\r\n    SingleSubscriber.prototype.applySingleValue = function (value) {\r\n        if (this.seenValue) {\r\n            this.destination.error('Sequence contains more than one element');\r\n        }\r\n        else {\r\n            this.seenValue = true;\r\n            this.singleValue = value;\r\n        }\r\n    };\r\n    SingleSubscriber.prototype._next = function (value) {\r\n        var index = this.index++;\r\n        if (this.predicate) {\r\n            this.tryNext(value, index);\r\n        }\r\n        else {\r\n            this.applySingleValue(value);\r\n        }\r\n    };\r\n    SingleSubscriber.prototype.tryNext = function (value, index) {\r\n        try {\r\n            if (this.predicate(value, index, this.source)) {\r\n                this.applySingleValue(value);\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    SingleSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        if (this.index > 0) {\r\n            destination.next(this.seenValue ? this.singleValue : undefined);\r\n            destination.complete();\r\n        }\r\n        else {\r\n            destination.error(new EmptyError_1.EmptyError);\r\n        }\r\n    };\r\n    return SingleSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=single.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/single.js\n// module id = 911\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\r\n *\r\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\r\n *\r\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\r\n * be mirrored by the resulting Observable.\r\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\r\n * an item, then emits the remaining items.\r\n * @method skipUntil\r\n * @owner Observable\r\n */\r\nfunction skipUntil(notifier) {\r\n    return this.lift(new SkipUntilOperator(notifier));\r\n}\r\nexports.skipUntil = skipUntil;\r\nvar SkipUntilOperator = (function () {\r\n    function SkipUntilOperator(notifier) {\r\n        this.notifier = notifier;\r\n    }\r\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\r\n    };\r\n    return SkipUntilOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SkipUntilSubscriber = (function (_super) {\r\n    __extends(SkipUntilSubscriber, _super);\r\n    function SkipUntilSubscriber(destination, notifier) {\r\n        _super.call(this, destination);\r\n        this.hasValue = false;\r\n        this.isInnerStopped = false;\r\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\r\n    }\r\n    SkipUntilSubscriber.prototype._next = function (value) {\r\n        if (this.hasValue) {\r\n            _super.prototype._next.call(this, value);\r\n        }\r\n    };\r\n    SkipUntilSubscriber.prototype._complete = function () {\r\n        if (this.isInnerStopped) {\r\n            _super.prototype._complete.call(this);\r\n        }\r\n        else {\r\n            this.unsubscribe();\r\n        }\r\n    };\r\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.hasValue = true;\r\n    };\r\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\r\n        this.isInnerStopped = true;\r\n        if (this.isStopped) {\r\n            _super.prototype._complete.call(this);\r\n        }\r\n    };\r\n    return SkipUntilSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=skipUntil.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skipUntil.js\n// module id = 912\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\r\n * true, but emits all further source items as soon as the condition becomes false.\r\n *\r\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\r\n *\r\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\r\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\r\n * specified predicate becomes false.\r\n * @method skipWhile\r\n * @owner Observable\r\n */\r\nfunction skipWhile(predicate) {\r\n    return this.lift(new SkipWhileOperator(predicate));\r\n}\r\nexports.skipWhile = skipWhile;\r\nvar SkipWhileOperator = (function () {\r\n    function SkipWhileOperator(predicate) {\r\n        this.predicate = predicate;\r\n    }\r\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\r\n    };\r\n    return SkipWhileOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SkipWhileSubscriber = (function (_super) {\r\n    __extends(SkipWhileSubscriber, _super);\r\n    function SkipWhileSubscriber(destination, predicate) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.skipping = true;\r\n        this.index = 0;\r\n    }\r\n    SkipWhileSubscriber.prototype._next = function (value) {\r\n        var destination = this.destination;\r\n        if (this.skipping) {\r\n            this.tryCallPredicate(value);\r\n        }\r\n        if (!this.skipping) {\r\n            destination.next(value);\r\n        }\r\n    };\r\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\r\n        try {\r\n            var result = this.predicate(value, this.index++);\r\n            this.skipping = Boolean(result);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n        }\r\n    };\r\n    return SkipWhileSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=skipWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/skipWhile.js\n// module id = 913\n// module chunks = 4","\"use strict\";\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\nvar concat_1 = require('./concat');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\r\n * items emitted by the source Observable.\r\n *\r\n * <img src=\"./img/startWith.png\" width=\"100%\">\r\n *\r\n * @param {...T} values - Items you want the modified Observable to emit first.\r\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\r\n * the emissions of the `next` notifications.\r\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\r\n * emitted by the source Observable.\r\n * @method startWith\r\n * @owner Observable\r\n */\r\nfunction startWith() {\r\n    var array = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        array[_i - 0] = arguments[_i];\r\n    }\r\n    var scheduler = array[array.length - 1];\r\n    if (isScheduler_1.isScheduler(scheduler)) {\r\n        array.pop();\r\n    }\r\n    else {\r\n        scheduler = null;\r\n    }\r\n    var len = array.length;\r\n    if (len === 1) {\r\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\r\n    }\r\n    else if (len > 1) {\r\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\r\n    }\r\n    else {\r\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\r\n    }\r\n}\r\nexports.startWith = startWith;\r\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/startWith.js\n// module id = 914\n// module chunks = 4","\"use strict\";\r\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\r\n/**\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n */\r\nfunction subscribeOn(scheduler, delay) {\r\n    if (delay === void 0) { delay = 0; }\r\n    return this.lift(new SubscribeOnOperator(scheduler, delay));\r\n}\r\nexports.subscribeOn = subscribeOn;\r\nvar SubscribeOnOperator = (function () {\r\n    function SubscribeOnOperator(scheduler, delay) {\r\n        this.scheduler = scheduler;\r\n        this.delay = delay;\r\n    }\r\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\r\n        return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\r\n    };\r\n    return SubscribeOnOperator;\r\n}());\r\n//# sourceMappingURL=subscribeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/subscribeOn.js\n// module id = 915\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by\r\n * subscribing to only the most recently emitted of those inner Observables.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\r\n * previous inner Observable once a new one appears.</span>\r\n *\r\n * <img src=\"./img/switch.png\" width=\"100%\">\r\n *\r\n * `switch` subscribes to an Observable that emits Observables, also known as a\r\n * higher-order Observable. Each time it observes one of these emitted inner\r\n * Observables, the output Observable subscribes to the inner Observable and\r\n * begins emitting the items emitted by that. So far, it behaves\r\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\r\n * `switch` unsubscribes from the earlier-emitted inner Observable and\r\n * subscribes to the new inner Observable and begins emitting items from it. It\r\n * continues to behave like this for subsequent inner Observables.\r\n *\r\n * @example <caption>Rerun an interval Observable on every click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * // Each click event is mapped to an Observable that ticks every second\r\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\r\n * var switched = higherOrder.switch();\r\n * // The outcome is that `switched` is essentially a timer that restarts\r\n * // on every click. The interval Observables from older clicks do not merge\r\n * // with the current interval Observable.\r\n * switched.subscribe(x => console.log(x));\r\n *\r\n * @see {@link combineAll}\r\n * @see {@link concatAll}\r\n * @see {@link exhaust}\r\n * @see {@link mergeAll}\r\n * @see {@link switchMap}\r\n * @see {@link switchMapTo}\r\n * @see {@link zipAll}\r\n *\r\n * @return {Observable<T>} An Observable that emits the items emitted by the\r\n * Observable most recently emitted by the source Observable.\r\n * @method switch\r\n * @name switch\r\n * @owner Observable\r\n */\r\nfunction _switch() {\r\n    return this.lift(new SwitchOperator());\r\n}\r\nexports._switch = _switch;\r\nvar SwitchOperator = (function () {\r\n    function SwitchOperator() {\r\n    }\r\n    SwitchOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SwitchSubscriber(subscriber));\r\n    };\r\n    return SwitchOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SwitchSubscriber = (function (_super) {\r\n    __extends(SwitchSubscriber, _super);\r\n    function SwitchSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.active = 0;\r\n        this.hasCompleted = false;\r\n    }\r\n    SwitchSubscriber.prototype._next = function (value) {\r\n        this.unsubscribeInner();\r\n        this.active++;\r\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\r\n    };\r\n    SwitchSubscriber.prototype._complete = function () {\r\n        this.hasCompleted = true;\r\n        if (this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\r\n        this.active = this.active > 0 ? this.active - 1 : 0;\r\n        var innerSubscription = this.innerSubscription;\r\n        if (innerSubscription) {\r\n            innerSubscription.unsubscribe();\r\n            this.remove(innerSubscription);\r\n        }\r\n    };\r\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.destination.next(innerValue);\r\n    };\r\n    SwitchSubscriber.prototype.notifyError = function (err) {\r\n        this.destination.error(err);\r\n    };\r\n    SwitchSubscriber.prototype.notifyComplete = function () {\r\n        this.unsubscribeInner();\r\n        if (this.hasCompleted && this.active === 0) {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return SwitchSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=switch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switch.js\n// module id = 916\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Projects each source value to the same Observable which is flattened multiple\r\n * times with {@link switch} in the output Observable.\r\n *\r\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\r\n * always to the same inner Observable.</span>\r\n *\r\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\r\n *\r\n * Maps each source value to the given Observable `innerObservable` regardless\r\n * of the source value, and then flattens those resulting Observables into one\r\n * single Observable, which is the output Observable. The output Observables\r\n * emits values only from the most recently emitted instance of\r\n * `innerObservable`.\r\n *\r\n * @example <caption>Rerun an interval Observable on every click event</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link concatMapTo}\r\n * @see {@link switch}\r\n * @see {@link switchMap}\r\n * @see {@link mergeMapTo}\r\n *\r\n * @param {ObservableInput} innerObservable An Observable to replace each value from\r\n * the source Observable.\r\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\r\n * A function to produce the value on the output Observable based on the values\r\n * and the indices of the source (outer) emission and the inner Observable\r\n * emission. The arguments passed to this function are:\r\n * - `outerValue`: the value that came from the source\r\n * - `innerValue`: the value that came from the projected Observable\r\n * - `outerIndex`: the \"index\" of the value that came from the source\r\n * - `innerIndex`: the \"index\" of the value from the projected Observable\r\n * @return {Observable} An Observable that emits items from the given\r\n * `innerObservable` (and optionally transformed through `resultSelector`) every\r\n * time a value is emitted on the source Observable, and taking only the values\r\n * from the most recently projected inner Observable.\r\n * @method switchMapTo\r\n * @owner Observable\r\n */\r\nfunction switchMapTo(innerObservable, resultSelector) {\r\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\r\n}\r\nexports.switchMapTo = switchMapTo;\r\nvar SwitchMapToOperator = (function () {\r\n    function SwitchMapToOperator(observable, resultSelector) {\r\n        this.observable = observable;\r\n        this.resultSelector = resultSelector;\r\n    }\r\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\r\n    };\r\n    return SwitchMapToOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar SwitchMapToSubscriber = (function (_super) {\r\n    __extends(SwitchMapToSubscriber, _super);\r\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\r\n        _super.call(this, destination);\r\n        this.inner = inner;\r\n        this.resultSelector = resultSelector;\r\n        this.index = 0;\r\n    }\r\n    SwitchMapToSubscriber.prototype._next = function (value) {\r\n        var innerSubscription = this.innerSubscription;\r\n        if (innerSubscription) {\r\n            innerSubscription.unsubscribe();\r\n        }\r\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\r\n    };\r\n    SwitchMapToSubscriber.prototype._complete = function () {\r\n        var innerSubscription = this.innerSubscription;\r\n        if (!innerSubscription || innerSubscription.closed) {\r\n            _super.prototype._complete.call(this);\r\n        }\r\n    };\r\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\r\n        this.innerSubscription = null;\r\n    };\r\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.remove(innerSub);\r\n        this.innerSubscription = null;\r\n        if (this.isStopped) {\r\n            _super.prototype._complete.call(this);\r\n        }\r\n    };\r\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        if (resultSelector) {\r\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\r\n        }\r\n        else {\r\n            destination.next(innerValue);\r\n        }\r\n    };\r\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\r\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\r\n        var result;\r\n        try {\r\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        destination.next(result);\r\n    };\r\n    return SwitchMapToSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=switchMapTo.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/switchMapTo.js\n// module id = 917\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\n/**\r\n * Emits only the first `count` values emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Takes the first `count` values from the source, then\r\n * completes.</span>\r\n *\r\n * <img src=\"./img/take.png\" width=\"100%\">\r\n *\r\n * `take` returns an Observable that emits only the first `count` values emitted\r\n * by the source Observable. If the source emits fewer than `count` values then\r\n * all of its values are emitted. After that, it completes, regardless if the\r\n * source completes.\r\n *\r\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\r\n * var interval = Rx.Observable.interval(1000);\r\n * var five = interval.take(5);\r\n * five.subscribe(x => console.log(x));\r\n *\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\r\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\r\n *\r\n * @param {number} count The maximum number of `next` values to emit.\r\n * @return {Observable<T>} An Observable that emits only the first `count`\r\n * values emitted by the source Observable, or all of the values from the source\r\n * if the source emits fewer than `count` values.\r\n * @method take\r\n * @owner Observable\r\n */\r\nfunction take(count) {\r\n    if (count === 0) {\r\n        return new EmptyObservable_1.EmptyObservable();\r\n    }\r\n    else {\r\n        return this.lift(new TakeOperator(count));\r\n    }\r\n}\r\nexports.take = take;\r\nvar TakeOperator = (function () {\r\n    function TakeOperator(total) {\r\n        this.total = total;\r\n        if (this.total < 0) {\r\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\n        }\r\n    }\r\n    TakeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\r\n    };\r\n    return TakeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TakeSubscriber = (function (_super) {\r\n    __extends(TakeSubscriber, _super);\r\n    function TakeSubscriber(destination, total) {\r\n        _super.call(this, destination);\r\n        this.total = total;\r\n        this.count = 0;\r\n    }\r\n    TakeSubscriber.prototype._next = function (value) {\r\n        var total = this.total;\r\n        var count = ++this.count;\r\n        if (count <= total) {\r\n            this.destination.next(value);\r\n            if (count === total) {\r\n                this.destination.complete();\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n    };\r\n    return TakeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/take.js\n// module id = 918\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\n/**\r\n * Emits only the last `count` values emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\r\n * only when the source completes.</span>\r\n *\r\n * <img src=\"./img/takeLast.png\" width=\"100%\">\r\n *\r\n * `takeLast` returns an Observable that emits at most the last `count` values\r\n * emitted by the source Observable. If the source emits fewer than `count`\r\n * values then all of its values are emitted. This operator must wait until the\r\n * `complete` notification emission from the source in order to emit the `next`\r\n * values on the output Observable, because otherwise it is impossible to know\r\n * whether or not more values will be emitted on the source. For this reason,\r\n * all values are emitted synchronously, followed by the complete notification.\r\n *\r\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\r\n * var many = Rx.Observable.range(1, 100);\r\n * var lastThree = many.takeLast(3);\r\n * lastThree.subscribe(x => console.log(x));\r\n *\r\n * @see {@link take}\r\n * @see {@link takeUntil}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\r\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\r\n *\r\n * @param {number} count The maximum number of values to emit from the end of\r\n * the sequence of values emitted by the source Observable.\r\n * @return {Observable<T>} An Observable that emits at most the last count\r\n * values emitted by the source Observable.\r\n * @method takeLast\r\n * @owner Observable\r\n */\r\nfunction takeLast(count) {\r\n    if (count === 0) {\r\n        return new EmptyObservable_1.EmptyObservable();\r\n    }\r\n    else {\r\n        return this.lift(new TakeLastOperator(count));\r\n    }\r\n}\r\nexports.takeLast = takeLast;\r\nvar TakeLastOperator = (function () {\r\n    function TakeLastOperator(total) {\r\n        this.total = total;\r\n        if (this.total < 0) {\r\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\n        }\r\n    }\r\n    TakeLastOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\r\n    };\r\n    return TakeLastOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TakeLastSubscriber = (function (_super) {\r\n    __extends(TakeLastSubscriber, _super);\r\n    function TakeLastSubscriber(destination, total) {\r\n        _super.call(this, destination);\r\n        this.total = total;\r\n        this.ring = new Array();\r\n        this.count = 0;\r\n    }\r\n    TakeLastSubscriber.prototype._next = function (value) {\r\n        var ring = this.ring;\r\n        var total = this.total;\r\n        var count = this.count++;\r\n        if (ring.length < total) {\r\n            ring.push(value);\r\n        }\r\n        else {\r\n            var index = count % total;\r\n            ring[index] = value;\r\n        }\r\n    };\r\n    TakeLastSubscriber.prototype._complete = function () {\r\n        var destination = this.destination;\r\n        var count = this.count;\r\n        if (count > 0) {\r\n            var total = this.count >= this.total ? this.total : this.count;\r\n            var ring = this.ring;\r\n            for (var i = 0; i < total; i++) {\r\n                var idx = (count++) % total;\r\n                destination.next(ring[idx]);\r\n            }\r\n        }\r\n        destination.complete();\r\n    };\r\n    return TakeLastSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=takeLast.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeLast.js\n// module id = 919\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\n/**\r\n * Emits values emitted by the source Observable so long as each value satisfies\r\n * the given `predicate`, and then completes as soon as this `predicate` is not\r\n * satisfied.\r\n *\r\n * <span class=\"informal\">Takes values from the source only while they pass the\r\n * condition given. When the first value does not satisfy, it completes.</span>\r\n *\r\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\r\n *\r\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\r\n * emitted on the source is given to the `predicate` function which returns a\r\n * boolean, representing a condition to be satisfied by the source values. The\r\n * output Observable emits the source values until such time as the `predicate`\r\n * returns false, at which point `takeWhile` stops mirroring the source\r\n * Observable and completes the output Observable.\r\n *\r\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link skip}\r\n *\r\n * @param {function(value: T, index: number): boolean} predicate A function that\r\n * evaluates a value emitted by the source Observable and returns a boolean.\r\n * Also takes the (zero-based) index as the second argument.\r\n * @return {Observable<T>} An Observable that emits the values from the source\r\n * Observable so long as each value satisfies the condition defined by the\r\n * `predicate`, then completes.\r\n * @method takeWhile\r\n * @owner Observable\r\n */\r\nfunction takeWhile(predicate) {\r\n    return this.lift(new TakeWhileOperator(predicate));\r\n}\r\nexports.takeWhile = takeWhile;\r\nvar TakeWhileOperator = (function () {\r\n    function TakeWhileOperator(predicate) {\r\n        this.predicate = predicate;\r\n    }\r\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\r\n    };\r\n    return TakeWhileOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TakeWhileSubscriber = (function (_super) {\r\n    __extends(TakeWhileSubscriber, _super);\r\n    function TakeWhileSubscriber(destination, predicate) {\r\n        _super.call(this, destination);\r\n        this.predicate = predicate;\r\n        this.index = 0;\r\n    }\r\n    TakeWhileSubscriber.prototype._next = function (value) {\r\n        var destination = this.destination;\r\n        var result;\r\n        try {\r\n            result = this.predicate(value, this.index++);\r\n        }\r\n        catch (err) {\r\n            destination.error(err);\r\n            return;\r\n        }\r\n        this.nextOrComplete(value, result);\r\n    };\r\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\r\n        var destination = this.destination;\r\n        if (Boolean(predicateResult)) {\r\n            destination.next(value);\r\n        }\r\n        else {\r\n            destination.complete();\r\n        }\r\n    };\r\n    return TakeWhileSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=takeWhile.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/takeWhile.js\n// module id = 920\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Emits a value from the source Observable, then ignores subsequent source\r\n * values for a duration determined by another Observable, then repeats this\r\n * process.\r\n *\r\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\r\n * duration is determined by a second Observable.</span>\r\n *\r\n * <img src=\"./img/throttle.png\" width=\"100%\">\r\n *\r\n * `throttle` emits the source Observable values on the output Observable\r\n * when its internal timer is disabled, and ignores source values when the timer\r\n * is enabled. Initially, the timer is disabled. As soon as the first source\r\n * value arrives, it is forwarded to the output Observable, and then the timer\r\n * is enabled by calling the `durationSelector` function with the source value,\r\n * which returns the \"duration\" Observable. When the duration Observable emits a\r\n * value or completes, the timer is disabled, and this process repeats for the\r\n * next source value.\r\n *\r\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link audit}\r\n * @see {@link debounce}\r\n * @see {@link delayWhen}\r\n * @see {@link sample}\r\n * @see {@link throttleTime}\r\n *\r\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\r\n * that receives a value from the source Observable, for computing the silencing\r\n * duration for each source value, returned as an Observable or a Promise.\r\n * @return {Observable<T>} An Observable that performs the throttle operation to\r\n * limit the rate of emissions from the source.\r\n * @method throttle\r\n * @owner Observable\r\n */\r\nfunction throttle(durationSelector) {\r\n    return this.lift(new ThrottleOperator(durationSelector));\r\n}\r\nexports.throttle = throttle;\r\nvar ThrottleOperator = (function () {\r\n    function ThrottleOperator(durationSelector) {\r\n        this.durationSelector = durationSelector;\r\n    }\r\n    ThrottleOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\r\n    };\r\n    return ThrottleOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ThrottleSubscriber = (function (_super) {\r\n    __extends(ThrottleSubscriber, _super);\r\n    function ThrottleSubscriber(destination, durationSelector) {\r\n        _super.call(this, destination);\r\n        this.destination = destination;\r\n        this.durationSelector = durationSelector;\r\n    }\r\n    ThrottleSubscriber.prototype._next = function (value) {\r\n        if (!this.throttled) {\r\n            this.tryDurationSelector(value);\r\n        }\r\n    };\r\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\r\n        var duration = null;\r\n        try {\r\n            duration = this.durationSelector(value);\r\n        }\r\n        catch (err) {\r\n            this.destination.error(err);\r\n            return;\r\n        }\r\n        this.emitAndThrottle(value, duration);\r\n    };\r\n    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {\r\n        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\r\n        this.destination.next(value);\r\n    };\r\n    ThrottleSubscriber.prototype._unsubscribe = function () {\r\n        var throttled = this.throttled;\r\n        if (throttled) {\r\n            this.remove(throttled);\r\n            this.throttled = null;\r\n            throttled.unsubscribe();\r\n        }\r\n    };\r\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this._unsubscribe();\r\n    };\r\n    ThrottleSubscriber.prototype.notifyComplete = function () {\r\n        this._unsubscribe();\r\n    };\r\n    return ThrottleSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=throttle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/throttle.js\n// module id = 921\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar async_1 = require('../scheduler/async');\r\n/**\r\n * Emits a value from the source Observable, then ignores subsequent source\r\n * values for `duration` milliseconds, then repeats this process.\r\n *\r\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\r\n * next `duration` milliseconds.</span>\r\n *\r\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\r\n *\r\n * `throttleTime` emits the source Observable values on the output Observable\r\n * when its internal timer is disabled, and ignores source values when the timer\r\n * is enabled. Initially, the timer is disabled. As soon as the first source\r\n * value arrives, it is forwarded to the output Observable, and then the timer\r\n * is enabled. After `duration` milliseconds (or the time unit determined\r\n * internally by the optional `scheduler`) has passed, the timer is disabled,\r\n * and this process repeats for the next source value. Optionally takes a\r\n * {@link IScheduler} for managing timers.\r\n *\r\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.throttleTime(1000);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link auditTime}\r\n * @see {@link debounceTime}\r\n * @see {@link delay}\r\n * @see {@link sampleTime}\r\n * @see {@link throttle}\r\n *\r\n * @param {number} duration Time to wait before emitting another value after\r\n * emitting the last value, measured in milliseconds or the time unit determined\r\n * internally by the optional `scheduler`.\r\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\r\n * managing the timers that handle the sampling.\r\n * @return {Observable<T>} An Observable that performs the throttle operation to\r\n * limit the rate of emissions from the source.\r\n * @method throttleTime\r\n * @owner Observable\r\n */\r\nfunction throttleTime(duration, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    return this.lift(new ThrottleTimeOperator(duration, scheduler));\r\n}\r\nexports.throttleTime = throttleTime;\r\nvar ThrottleTimeOperator = (function () {\r\n    function ThrottleTimeOperator(duration, scheduler) {\r\n        this.duration = duration;\r\n        this.scheduler = scheduler;\r\n    }\r\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler));\r\n    };\r\n    return ThrottleTimeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ThrottleTimeSubscriber = (function (_super) {\r\n    __extends(ThrottleTimeSubscriber, _super);\r\n    function ThrottleTimeSubscriber(destination, duration, scheduler) {\r\n        _super.call(this, destination);\r\n        this.duration = duration;\r\n        this.scheduler = scheduler;\r\n    }\r\n    ThrottleTimeSubscriber.prototype._next = function (value) {\r\n        if (!this.throttled) {\r\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\r\n            this.destination.next(value);\r\n        }\r\n    };\r\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\r\n        var throttled = this.throttled;\r\n        if (throttled) {\r\n            throttled.unsubscribe();\r\n            this.remove(throttled);\r\n            this.throttled = null;\r\n        }\r\n    };\r\n    return ThrottleTimeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nfunction dispatchNext(arg) {\r\n    var subscriber = arg.subscriber;\r\n    subscriber.clearThrottle();\r\n}\r\n//# sourceMappingURL=throttleTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/throttleTime.js\n// module id = 922\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar isDate_1 = require('../util/isDate');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar TimeoutError_1 = require('../util/TimeoutError');\r\n/**\r\n * @param {number} due\r\n * @param {Scheduler} [scheduler]\r\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\r\n * @method timeout\r\n * @owner Observable\r\n */\r\nfunction timeout(due, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    var absoluteTimeout = isDate_1.isDate(due);\r\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\r\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, scheduler, new TimeoutError_1.TimeoutError()));\r\n}\r\nexports.timeout = timeout;\r\nvar TimeoutOperator = (function () {\r\n    function TimeoutOperator(waitFor, absoluteTimeout, scheduler, errorInstance) {\r\n        this.waitFor = waitFor;\r\n        this.absoluteTimeout = absoluteTimeout;\r\n        this.scheduler = scheduler;\r\n        this.errorInstance = errorInstance;\r\n    }\r\n    TimeoutOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.scheduler, this.errorInstance));\r\n    };\r\n    return TimeoutOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TimeoutSubscriber = (function (_super) {\r\n    __extends(TimeoutSubscriber, _super);\r\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, scheduler, errorInstance) {\r\n        _super.call(this, destination);\r\n        this.absoluteTimeout = absoluteTimeout;\r\n        this.waitFor = waitFor;\r\n        this.scheduler = scheduler;\r\n        this.errorInstance = errorInstance;\r\n        this.action = null;\r\n        this.scheduleTimeout();\r\n    }\r\n    TimeoutSubscriber.dispatchTimeout = function (subscriber) {\r\n        subscriber.error(subscriber.errorInstance);\r\n    };\r\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\r\n        var action = this.action;\r\n        if (action) {\r\n            // Recycle the action if we've already scheduled one. All the production\r\n            // Scheduler Actions mutate their state/delay time and return themeselves.\r\n            // VirtualActions are immutable, so they create and return a clone. In this\r\n            // case, we need to set the action reference to the most recent VirtualAction,\r\n            // to ensure that's the one we clone from next time.\r\n            this.action = action.schedule(this, this.waitFor);\r\n        }\r\n        else {\r\n            this.add(this.action = this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, this));\r\n        }\r\n    };\r\n    TimeoutSubscriber.prototype._next = function (value) {\r\n        if (!this.absoluteTimeout) {\r\n            this.scheduleTimeout();\r\n        }\r\n        _super.prototype._next.call(this, value);\r\n    };\r\n    TimeoutSubscriber.prototype._unsubscribe = function () {\r\n        this.action = null;\r\n        this.scheduler = null;\r\n        this.errorInstance = null;\r\n    };\r\n    return TimeoutSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=timeout.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeout.js\n// module id = 923\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar async_1 = require('../scheduler/async');\r\nvar isDate_1 = require('../util/isDate');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * @param due\r\n * @param withObservable\r\n * @param scheduler\r\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\r\n * @method timeoutWith\r\n * @owner Observable\r\n */\r\nfunction timeoutWith(due, withObservable, scheduler) {\r\n    if (scheduler === void 0) { scheduler = async_1.async; }\r\n    var absoluteTimeout = isDate_1.isDate(due);\r\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\r\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\r\n}\r\nexports.timeoutWith = timeoutWith;\r\nvar TimeoutWithOperator = (function () {\r\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\r\n        this.waitFor = waitFor;\r\n        this.absoluteTimeout = absoluteTimeout;\r\n        this.withObservable = withObservable;\r\n        this.scheduler = scheduler;\r\n    }\r\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\r\n    };\r\n    return TimeoutWithOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TimeoutWithSubscriber = (function (_super) {\r\n    __extends(TimeoutWithSubscriber, _super);\r\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\r\n        _super.call(this, destination);\r\n        this.absoluteTimeout = absoluteTimeout;\r\n        this.waitFor = waitFor;\r\n        this.withObservable = withObservable;\r\n        this.scheduler = scheduler;\r\n        this.action = null;\r\n        this.scheduleTimeout();\r\n    }\r\n    TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {\r\n        var withObservable = subscriber.withObservable;\r\n        subscriber._unsubscribeAndRecycle();\r\n        subscriber.add(subscribeToResult_1.subscribeToResult(subscriber, withObservable));\r\n    };\r\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\r\n        var action = this.action;\r\n        if (action) {\r\n            // Recycle the action if we've already scheduled one. All the production\r\n            // Scheduler Actions mutate their state/delay time and return themeselves.\r\n            // VirtualActions are immutable, so they create and return a clone. In this\r\n            // case, we need to set the action reference to the most recent VirtualAction,\r\n            // to ensure that's the one we clone from next time.\r\n            this.action = action.schedule(this, this.waitFor);\r\n        }\r\n        else {\r\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\r\n        }\r\n    };\r\n    TimeoutWithSubscriber.prototype._next = function (value) {\r\n        if (!this.absoluteTimeout) {\r\n            this.scheduleTimeout();\r\n        }\r\n        _super.prototype._next.call(this, value);\r\n    };\r\n    TimeoutWithSubscriber.prototype._unsubscribe = function () {\r\n        this.action = null;\r\n        this.scheduler = null;\r\n        this.withObservable = null;\r\n    };\r\n    return TimeoutWithSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=timeoutWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/timeoutWith.js\n// module id = 924\n// module chunks = 4","\"use strict\";\r\nvar root_1 = require('../util/root');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Converts an Observable sequence to a ES2015 compliant promise.\r\n *\r\n * @example\r\n * // Using normal ES2015\r\n * let source = Rx.Observable\r\n *   .just(42)\r\n *   .toPromise();\r\n *\r\n * source.then((value) => console.log('Value: %s', value));\r\n * // => Value: 42\r\n *\r\n * // Rejected Promise\r\n * // Using normal ES2015\r\n * let source = Rx.Observable\r\n *   .throw(new Error('woops'))\r\n *   .toPromise();\r\n *\r\n * source\r\n *   .then((value) => console.log('Value: %s', value))\r\n *   .catch((err) => console.log('Error: %s', err));\r\n * // => Error: Error: woops\r\n *\r\n * // Setting via the config\r\n * Rx.config.Promise = RSVP.Promise;\r\n *\r\n * let source = Rx.Observable\r\n *   .of(42)\r\n *   .toPromise();\r\n *\r\n * source.then((value) => console.log('Value: %s', value));\r\n * // => Value: 42\r\n *\r\n * // Setting via the method\r\n * let source = Rx.Observable\r\n *   .just(42)\r\n *   .toPromise(RSVP.Promise);\r\n *\r\n * source.then((value) => console.log('Value: %s', value));\r\n * // => Value: 42\r\n *\r\n * @param PromiseCtor promise The constructor of the promise. If not provided,\r\n * it will look for a constructor first in Rx.config.Promise then fall back to\r\n * the native Promise constructor if available.\r\n * @return {Promise<T>} An ES2015 compatible promise with the last value from\r\n * the observable sequence.\r\n * @method toPromise\r\n * @owner Observable\r\n */\r\nfunction toPromise(PromiseCtor) {\r\n    var _this = this;\r\n    if (!PromiseCtor) {\r\n        if (root_1.root.Rx && root_1.root.Rx.config && root_1.root.Rx.config.Promise) {\r\n            PromiseCtor = root_1.root.Rx.config.Promise;\r\n        }\r\n        else if (root_1.root.Promise) {\r\n            PromiseCtor = root_1.root.Promise;\r\n        }\r\n    }\r\n    if (!PromiseCtor) {\r\n        throw new Error('no Promise impl found');\r\n    }\r\n    return new PromiseCtor(function (resolve, reject) {\r\n        var value;\r\n        _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\r\n    });\r\n}\r\nexports.toPromise = toPromise;\r\n//# sourceMappingURL=toPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/toPromise.js\n// module id = 926\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Branch out the source Observable values as a nested Observable whenever\r\n * `windowBoundaries` emits.\r\n *\r\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\r\n * instead of an array.</span>\r\n *\r\n * <img src=\"./img/window.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping\r\n * windows. It emits the current window and opens a new one whenever the\r\n * Observable `windowBoundaries` emits an item. Because each window is an\r\n * Observable, the output is a higher-order Observable.\r\n *\r\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var interval = Rx.Observable.interval(1000);\r\n * var result = clicks.window(interval)\r\n *   .map(win => win.take(2)) // each window has at most 2 emissions\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link buffer}\r\n *\r\n * @param {Observable<any>} windowBoundaries An Observable that completes the\r\n * previous window and starts a new window.\r\n * @return {Observable<Observable<T>>} An Observable of windows, which are\r\n * Observables emitting values of the source Observable.\r\n * @method window\r\n * @owner Observable\r\n */\r\nfunction window(windowBoundaries) {\r\n    return this.lift(new WindowOperator(windowBoundaries));\r\n}\r\nexports.window = window;\r\nvar WindowOperator = (function () {\r\n    function WindowOperator(windowBoundaries) {\r\n        this.windowBoundaries = windowBoundaries;\r\n    }\r\n    WindowOperator.prototype.call = function (subscriber, source) {\r\n        var windowSubscriber = new WindowSubscriber(subscriber);\r\n        var sourceSubscription = source.subscribe(windowSubscriber);\r\n        if (!sourceSubscription.closed) {\r\n            windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber, this.windowBoundaries));\r\n        }\r\n        return sourceSubscription;\r\n    };\r\n    return WindowOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowSubscriber = (function (_super) {\r\n    __extends(WindowSubscriber, _super);\r\n    function WindowSubscriber(destination) {\r\n        _super.call(this, destination);\r\n        this.window = new Subject_1.Subject();\r\n        destination.next(this.window);\r\n    }\r\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.openWindow();\r\n    };\r\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this._error(error);\r\n    };\r\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this._complete();\r\n    };\r\n    WindowSubscriber.prototype._next = function (value) {\r\n        this.window.next(value);\r\n    };\r\n    WindowSubscriber.prototype._error = function (err) {\r\n        this.window.error(err);\r\n        this.destination.error(err);\r\n    };\r\n    WindowSubscriber.prototype._complete = function () {\r\n        this.window.complete();\r\n        this.destination.complete();\r\n    };\r\n    WindowSubscriber.prototype._unsubscribe = function () {\r\n        this.window = null;\r\n    };\r\n    WindowSubscriber.prototype.openWindow = function () {\r\n        var prevWindow = this.window;\r\n        if (prevWindow) {\r\n            prevWindow.complete();\r\n        }\r\n        var destination = this.destination;\r\n        var newWindow = this.window = new Subject_1.Subject();\r\n        destination.next(newWindow);\r\n    };\r\n    return WindowSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=window.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/window.js\n// module id = 927\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Subject_1 = require('../Subject');\r\n/**\r\n * Branch out the source Observable values as a nested Observable with each\r\n * nested Observable emitting at most `windowSize` values.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * <img src=\"./img/windowCount.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits windows every `startWindowEvery`\r\n * items, each containing no more than `windowSize` items. When the source\r\n * Observable completes or encounters an error, the output Observable emits\r\n * the current window and propagates the notification from the source\r\n * Observable. If `startWindowEvery` is not provided, then new windows are\r\n * started immediately at the start of the source and when each window completes\r\n * with size `windowSize`.\r\n *\r\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.windowCount(3)\r\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks.windowCount(2, 3)\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link window}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link windowWhen}\r\n * @see {@link bufferCount}\r\n *\r\n * @param {number} windowSize The maximum number of values emitted by each\r\n * window.\r\n * @param {number} [startWindowEvery] Interval at which to start a new window.\r\n * For example if `startWindowEvery` is `2`, then a new window will be started\r\n * on every other value from the source. A new window is started at the\r\n * beginning of the source by default.\r\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\r\n * are Observable of values.\r\n * @method windowCount\r\n * @owner Observable\r\n */\r\nfunction windowCount(windowSize, startWindowEvery) {\r\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\r\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\r\n}\r\nexports.windowCount = windowCount;\r\nvar WindowCountOperator = (function () {\r\n    function WindowCountOperator(windowSize, startWindowEvery) {\r\n        this.windowSize = windowSize;\r\n        this.startWindowEvery = startWindowEvery;\r\n    }\r\n    WindowCountOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\r\n    };\r\n    return WindowCountOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowCountSubscriber = (function (_super) {\r\n    __extends(WindowCountSubscriber, _super);\r\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\r\n        _super.call(this, destination);\r\n        this.destination = destination;\r\n        this.windowSize = windowSize;\r\n        this.startWindowEvery = startWindowEvery;\r\n        this.windows = [new Subject_1.Subject()];\r\n        this.count = 0;\r\n        destination.next(this.windows[0]);\r\n    }\r\n    WindowCountSubscriber.prototype._next = function (value) {\r\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\r\n        var destination = this.destination;\r\n        var windowSize = this.windowSize;\r\n        var windows = this.windows;\r\n        var len = windows.length;\r\n        for (var i = 0; i < len && !this.closed; i++) {\r\n            windows[i].next(value);\r\n        }\r\n        var c = this.count - windowSize + 1;\r\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\r\n            windows.shift().complete();\r\n        }\r\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\r\n            var window_1 = new Subject_1.Subject();\r\n            windows.push(window_1);\r\n            destination.next(window_1);\r\n        }\r\n    };\r\n    WindowCountSubscriber.prototype._error = function (err) {\r\n        var windows = this.windows;\r\n        if (windows) {\r\n            while (windows.length > 0 && !this.closed) {\r\n                windows.shift().error(err);\r\n            }\r\n        }\r\n        this.destination.error(err);\r\n    };\r\n    WindowCountSubscriber.prototype._complete = function () {\r\n        var windows = this.windows;\r\n        if (windows) {\r\n            while (windows.length > 0 && !this.closed) {\r\n                windows.shift().complete();\r\n            }\r\n        }\r\n        this.destination.complete();\r\n    };\r\n    WindowCountSubscriber.prototype._unsubscribe = function () {\r\n        this.count = 0;\r\n        this.windows = null;\r\n    };\r\n    return WindowCountSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=windowCount.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowCount.js\n// module id = 928\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar async_1 = require('../scheduler/async');\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar isNumeric_1 = require('../util/isNumeric');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nfunction windowTime(windowTimeSpan) {\r\n    var scheduler = async_1.async;\r\n    var windowCreationInterval = null;\r\n    var maxWindowSize = Number.POSITIVE_INFINITY;\r\n    if (isScheduler_1.isScheduler(arguments[3])) {\r\n        scheduler = arguments[3];\r\n    }\r\n    if (isScheduler_1.isScheduler(arguments[2])) {\r\n        scheduler = arguments[2];\r\n    }\r\n    else if (isNumeric_1.isNumeric(arguments[2])) {\r\n        maxWindowSize = arguments[2];\r\n    }\r\n    if (isScheduler_1.isScheduler(arguments[1])) {\r\n        scheduler = arguments[1];\r\n    }\r\n    else if (isNumeric_1.isNumeric(arguments[1])) {\r\n        windowCreationInterval = arguments[1];\r\n    }\r\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\r\n}\r\nexports.windowTime = windowTime;\r\nvar WindowTimeOperator = (function () {\r\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\r\n        this.windowTimeSpan = windowTimeSpan;\r\n        this.windowCreationInterval = windowCreationInterval;\r\n        this.maxWindowSize = maxWindowSize;\r\n        this.scheduler = scheduler;\r\n    }\r\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\r\n    };\r\n    return WindowTimeOperator;\r\n}());\r\nvar CountedSubject = (function (_super) {\r\n    __extends(CountedSubject, _super);\r\n    function CountedSubject() {\r\n        _super.apply(this, arguments);\r\n        this._numberOfNextedValues = 0;\r\n    }\r\n    CountedSubject.prototype.next = function (value) {\r\n        this._numberOfNextedValues++;\r\n        _super.prototype.next.call(this, value);\r\n    };\r\n    Object.defineProperty(CountedSubject.prototype, \"numberOfNextedValues\", {\r\n        get: function () {\r\n            return this._numberOfNextedValues;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return CountedSubject;\r\n}(Subject_1.Subject));\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowTimeSubscriber = (function (_super) {\r\n    __extends(WindowTimeSubscriber, _super);\r\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\r\n        _super.call(this, destination);\r\n        this.destination = destination;\r\n        this.windowTimeSpan = windowTimeSpan;\r\n        this.windowCreationInterval = windowCreationInterval;\r\n        this.maxWindowSize = maxWindowSize;\r\n        this.scheduler = scheduler;\r\n        this.windows = [];\r\n        var window = this.openWindow();\r\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\r\n            var closeState = { subscriber: this, window: window, context: null };\r\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\r\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\r\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\r\n        }\r\n        else {\r\n            var timeSpanOnlyState = { subscriber: this, window: window, windowTimeSpan: windowTimeSpan };\r\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\r\n        }\r\n    }\r\n    WindowTimeSubscriber.prototype._next = function (value) {\r\n        var windows = this.windows;\r\n        var len = windows.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var window_1 = windows[i];\r\n            if (!window_1.closed) {\r\n                window_1.next(value);\r\n                if (window_1.numberOfNextedValues >= this.maxWindowSize) {\r\n                    this.closeWindow(window_1);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    WindowTimeSubscriber.prototype._error = function (err) {\r\n        var windows = this.windows;\r\n        while (windows.length > 0) {\r\n            windows.shift().error(err);\r\n        }\r\n        this.destination.error(err);\r\n    };\r\n    WindowTimeSubscriber.prototype._complete = function () {\r\n        var windows = this.windows;\r\n        while (windows.length > 0) {\r\n            var window_2 = windows.shift();\r\n            if (!window_2.closed) {\r\n                window_2.complete();\r\n            }\r\n        }\r\n        this.destination.complete();\r\n    };\r\n    WindowTimeSubscriber.prototype.openWindow = function () {\r\n        var window = new CountedSubject();\r\n        this.windows.push(window);\r\n        var destination = this.destination;\r\n        destination.next(window);\r\n        return window;\r\n    };\r\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\r\n        window.complete();\r\n        var windows = this.windows;\r\n        windows.splice(windows.indexOf(window), 1);\r\n    };\r\n    return WindowTimeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nfunction dispatchWindowTimeSpanOnly(state) {\r\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\r\n    if (window) {\r\n        subscriber.closeWindow(window);\r\n    }\r\n    state.window = subscriber.openWindow();\r\n    this.schedule(state, windowTimeSpan);\r\n}\r\nfunction dispatchWindowCreation(state) {\r\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\r\n    var window = subscriber.openWindow();\r\n    var action = this;\r\n    var context = { action: action, subscription: null };\r\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\r\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\r\n    action.add(context.subscription);\r\n    action.schedule(state, windowCreationInterval);\r\n}\r\nfunction dispatchWindowClose(state) {\r\n    var subscriber = state.subscriber, window = state.window, context = state.context;\r\n    if (context && context.action && context.subscription) {\r\n        context.action.remove(context.subscription);\r\n    }\r\n    subscriber.closeWindow(window);\r\n}\r\n//# sourceMappingURL=windowTime.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowTime.js\n// module id = 929\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar Subscription_1 = require('../Subscription');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Branch out the source Observable values as a nested Observable starting from\r\n * an emission from `openings` and ending when the output of `closingSelector`\r\n * emits.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits windows that contain those items\r\n * emitted by the source Observable between the time when the `openings`\r\n * Observable emits an item and when the Observable returned by\r\n * `closingSelector` emits an item.\r\n *\r\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var openings = Rx.Observable.interval(1000);\r\n * var result = clicks.windowToggle(openings, i =>\r\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\r\n * ).mergeAll();\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link window}\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowWhen}\r\n * @see {@link bufferToggle}\r\n *\r\n * @param {Observable<O>} openings An observable of notifications to start new\r\n * windows.\r\n * @param {function(value: O): Observable} closingSelector A function that takes\r\n * the value emitted by the `openings` observable and returns an Observable,\r\n * which, when it emits (either `next` or `complete`), signals that the\r\n * associated window should complete.\r\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\r\n * are Observables.\r\n * @method windowToggle\r\n * @owner Observable\r\n */\r\nfunction windowToggle(openings, closingSelector) {\r\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\r\n}\r\nexports.windowToggle = windowToggle;\r\nvar WindowToggleOperator = (function () {\r\n    function WindowToggleOperator(openings, closingSelector) {\r\n        this.openings = openings;\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\r\n    };\r\n    return WindowToggleOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowToggleSubscriber = (function (_super) {\r\n    __extends(WindowToggleSubscriber, _super);\r\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\r\n        _super.call(this, destination);\r\n        this.openings = openings;\r\n        this.closingSelector = closingSelector;\r\n        this.contexts = [];\r\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\r\n    }\r\n    WindowToggleSubscriber.prototype._next = function (value) {\r\n        var contexts = this.contexts;\r\n        if (contexts) {\r\n            var len = contexts.length;\r\n            for (var i = 0; i < len; i++) {\r\n                contexts[i].window.next(value);\r\n            }\r\n        }\r\n    };\r\n    WindowToggleSubscriber.prototype._error = function (err) {\r\n        var contexts = this.contexts;\r\n        this.contexts = null;\r\n        if (contexts) {\r\n            var len = contexts.length;\r\n            var index = -1;\r\n            while (++index < len) {\r\n                var context = contexts[index];\r\n                context.window.error(err);\r\n                context.subscription.unsubscribe();\r\n            }\r\n        }\r\n        _super.prototype._error.call(this, err);\r\n    };\r\n    WindowToggleSubscriber.prototype._complete = function () {\r\n        var contexts = this.contexts;\r\n        this.contexts = null;\r\n        if (contexts) {\r\n            var len = contexts.length;\r\n            var index = -1;\r\n            while (++index < len) {\r\n                var context = contexts[index];\r\n                context.window.complete();\r\n                context.subscription.unsubscribe();\r\n            }\r\n        }\r\n        _super.prototype._complete.call(this);\r\n    };\r\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\r\n        var contexts = this.contexts;\r\n        this.contexts = null;\r\n        if (contexts) {\r\n            var len = contexts.length;\r\n            var index = -1;\r\n            while (++index < len) {\r\n                var context = contexts[index];\r\n                context.window.unsubscribe();\r\n                context.subscription.unsubscribe();\r\n            }\r\n        }\r\n    };\r\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        if (outerValue === this.openings) {\r\n            var closingSelector = this.closingSelector;\r\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\r\n            if (closingNotifier === errorObject_1.errorObject) {\r\n                return this.error(errorObject_1.errorObject.e);\r\n            }\r\n            else {\r\n                var window_1 = new Subject_1.Subject();\r\n                var subscription = new Subscription_1.Subscription();\r\n                var context = { window: window_1, subscription: subscription };\r\n                this.contexts.push(context);\r\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\r\n                if (innerSubscription.closed) {\r\n                    this.closeWindow(this.contexts.length - 1);\r\n                }\r\n                else {\r\n                    innerSubscription.context = context;\r\n                    subscription.add(innerSubscription);\r\n                }\r\n                this.destination.next(window_1);\r\n            }\r\n        }\r\n        else {\r\n            this.closeWindow(this.contexts.indexOf(outerValue));\r\n        }\r\n    };\r\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\r\n        this.error(err);\r\n    };\r\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\r\n        if (inner !== this.openSubscription) {\r\n            this.closeWindow(this.contexts.indexOf(inner.context));\r\n        }\r\n    };\r\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        var contexts = this.contexts;\r\n        var context = contexts[index];\r\n        var window = context.window, subscription = context.subscription;\r\n        contexts.splice(index, 1);\r\n        window.complete();\r\n        subscription.unsubscribe();\r\n    };\r\n    return WindowToggleSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=windowToggle.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowToggle.js\n// module id = 930\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar tryCatch_1 = require('../util/tryCatch');\r\nvar errorObject_1 = require('../util/errorObject');\r\nvar OuterSubscriber_1 = require('../OuterSubscriber');\r\nvar subscribeToResult_1 = require('../util/subscribeToResult');\r\n/**\r\n * Branch out the source Observable values as a nested Observable using a\r\n * factory function of closing Observables to determine when to start a new\r\n * window.\r\n *\r\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\r\n * Observable instead of an array.</span>\r\n *\r\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\r\n *\r\n * Returns an Observable that emits windows of items it collects from the source\r\n * Observable. The output Observable emits connected, non-overlapping windows.\r\n * It emits the current window and opens a new one whenever the Observable\r\n * produced by the specified `closingSelector` function emits an item. The first\r\n * window is opened immediately when subscribing to the output Observable.\r\n *\r\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var result = clicks\r\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\r\n *   .map(win => win.take(2)) // each window has at most 2 emissions\r\n *   .mergeAll(); // flatten the Observable-of-Observables\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * @see {@link window}\r\n * @see {@link windowCount}\r\n * @see {@link windowTime}\r\n * @see {@link windowToggle}\r\n * @see {@link bufferWhen}\r\n *\r\n * @param {function(): Observable} closingSelector A function that takes no\r\n * arguments and returns an Observable that signals (on either `next` or\r\n * `complete`) when to close the previous window and start a new one.\r\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\r\n * are Observables.\r\n * @method windowWhen\r\n * @owner Observable\r\n */\r\nfunction windowWhen(closingSelector) {\r\n    return this.lift(new WindowOperator(closingSelector));\r\n}\r\nexports.windowWhen = windowWhen;\r\nvar WindowOperator = (function () {\r\n    function WindowOperator(closingSelector) {\r\n        this.closingSelector = closingSelector;\r\n    }\r\n    WindowOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\r\n    };\r\n    return WindowOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar WindowSubscriber = (function (_super) {\r\n    __extends(WindowSubscriber, _super);\r\n    function WindowSubscriber(destination, closingSelector) {\r\n        _super.call(this, destination);\r\n        this.destination = destination;\r\n        this.closingSelector = closingSelector;\r\n        this.openWindow();\r\n    }\r\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.openWindow(innerSub);\r\n    };\r\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this._error(error);\r\n    };\r\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.openWindow(innerSub);\r\n    };\r\n    WindowSubscriber.prototype._next = function (value) {\r\n        this.window.next(value);\r\n    };\r\n    WindowSubscriber.prototype._error = function (err) {\r\n        this.window.error(err);\r\n        this.destination.error(err);\r\n        this.unsubscribeClosingNotification();\r\n    };\r\n    WindowSubscriber.prototype._complete = function () {\r\n        this.window.complete();\r\n        this.destination.complete();\r\n        this.unsubscribeClosingNotification();\r\n    };\r\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\r\n        if (this.closingNotification) {\r\n            this.closingNotification.unsubscribe();\r\n        }\r\n    };\r\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\r\n        if (innerSub === void 0) { innerSub = null; }\r\n        if (innerSub) {\r\n            this.remove(innerSub);\r\n            innerSub.unsubscribe();\r\n        }\r\n        var prevWindow = this.window;\r\n        if (prevWindow) {\r\n            prevWindow.complete();\r\n        }\r\n        var window = this.window = new Subject_1.Subject();\r\n        this.destination.next(window);\r\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\r\n        if (closingNotifier === errorObject_1.errorObject) {\r\n            var err = errorObject_1.errorObject.e;\r\n            this.destination.error(err);\r\n            this.window.error(err);\r\n        }\r\n        else {\r\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\r\n        }\r\n    };\r\n    return WindowSubscriber;\r\n}(OuterSubscriber_1.OuterSubscriber));\r\n//# sourceMappingURL=windowWhen.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/windowWhen.js\n// module id = 931\n// module chunks = 4","\"use strict\";\r\nvar zip_1 = require('./zip');\r\n/**\r\n * @param project\r\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\r\n * @method zipAll\r\n * @owner Observable\r\n */\r\nfunction zipAll(project) {\r\n    return this.lift(new zip_1.ZipOperator(project));\r\n}\r\nexports.zipAll = zipAll;\r\n//# sourceMappingURL=zipAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/zipAll.js\n// module id = 932\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AsyncAction_1 = require('./AsyncAction');\r\nvar AnimationFrame_1 = require('../util/AnimationFrame');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar AnimationFrameAction = (function (_super) {\r\n    __extends(AnimationFrameAction, _super);\r\n    function AnimationFrameAction(scheduler, work) {\r\n        _super.call(this, scheduler, work);\r\n        this.scheduler = scheduler;\r\n        this.work = work;\r\n    }\r\n    AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        // If delay is greater than 0, request as an async action.\r\n        if (delay !== null && delay > 0) {\r\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\r\n        }\r\n        // Push the action to the end of the scheduler queue.\r\n        scheduler.actions.push(this);\r\n        // If an animation frame has already been requested, don't request another\r\n        // one. If an animation frame hasn't been requested yet, request one. Return\r\n        // the current animation frame request id.\r\n        return scheduler.scheduled || (scheduler.scheduled = AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler, null)));\r\n    };\r\n    AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        // If delay exists and is greater than 0, or if the delay is null (the\r\n        // action wasn't rescheduled) but was originally scheduled as an async\r\n        // action, then recycle as an async action.\r\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\r\n        }\r\n        // If the scheduler queue is empty, cancel the requested animation frame and\r\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\r\n        // request its own.\r\n        if (scheduler.actions.length === 0) {\r\n            AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);\r\n            scheduler.scheduled = undefined;\r\n        }\r\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n        return undefined;\r\n    };\r\n    return AnimationFrameAction;\r\n}(AsyncAction_1.AsyncAction));\r\nexports.AnimationFrameAction = AnimationFrameAction;\r\n//# sourceMappingURL=AnimationFrameAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AnimationFrameAction.js\n// module id = 933\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AsyncScheduler_1 = require('./AsyncScheduler');\r\nvar AnimationFrameScheduler = (function (_super) {\r\n    __extends(AnimationFrameScheduler, _super);\r\n    function AnimationFrameScheduler() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    AnimationFrameScheduler.prototype.flush = function (action) {\r\n        this.active = true;\r\n        this.scheduled = undefined;\r\n        var actions = this.actions;\r\n        var error;\r\n        var index = -1;\r\n        var count = actions.length;\r\n        action = action || actions.shift();\r\n        do {\r\n            if (error = action.execute(action.state, action.delay)) {\r\n                break;\r\n            }\r\n        } while (++index < count && (action = actions.shift()));\r\n        this.active = false;\r\n        if (error) {\r\n            while (++index < count && (action = actions.shift())) {\r\n                action.unsubscribe();\r\n            }\r\n            throw error;\r\n        }\r\n    };\r\n    return AnimationFrameScheduler;\r\n}(AsyncScheduler_1.AsyncScheduler));\r\nexports.AnimationFrameScheduler = AnimationFrameScheduler;\r\n//# sourceMappingURL=AnimationFrameScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AnimationFrameScheduler.js\n// module id = 934\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Immediate_1 = require('../util/Immediate');\r\nvar AsyncAction_1 = require('./AsyncAction');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar AsapAction = (function (_super) {\r\n    __extends(AsapAction, _super);\r\n    function AsapAction(scheduler, work) {\r\n        _super.call(this, scheduler, work);\r\n        this.scheduler = scheduler;\r\n        this.work = work;\r\n    }\r\n    AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        // If delay is greater than 0, request as an async action.\r\n        if (delay !== null && delay > 0) {\r\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\r\n        }\r\n        // Push the action to the end of the scheduler queue.\r\n        scheduler.actions.push(this);\r\n        // If a microtask has already been scheduled, don't schedule another\r\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\r\n        // the current scheduled microtask id.\r\n        return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\r\n    };\r\n    AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        // If delay exists and is greater than 0, or if the delay is null (the\r\n        // action wasn't rescheduled) but was originally scheduled as an async\r\n        // action, then recycle as an async action.\r\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\r\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\r\n        }\r\n        // If the scheduler queue is empty, cancel the requested microtask and\r\n        // set the scheduled flag to undefined so the next AsapAction will schedule\r\n        // its own.\r\n        if (scheduler.actions.length === 0) {\r\n            Immediate_1.Immediate.clearImmediate(id);\r\n            scheduler.scheduled = undefined;\r\n        }\r\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\r\n        return undefined;\r\n    };\r\n    return AsapAction;\r\n}(AsyncAction_1.AsyncAction));\r\nexports.AsapAction = AsapAction;\r\n//# sourceMappingURL=AsapAction.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsapAction.js\n// module id = 935\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar AsyncScheduler_1 = require('./AsyncScheduler');\r\nvar AsapScheduler = (function (_super) {\r\n    __extends(AsapScheduler, _super);\r\n    function AsapScheduler() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    AsapScheduler.prototype.flush = function (action) {\r\n        this.active = true;\r\n        this.scheduled = undefined;\r\n        var actions = this.actions;\r\n        var error;\r\n        var index = -1;\r\n        var count = actions.length;\r\n        action = action || actions.shift();\r\n        do {\r\n            if (error = action.execute(action.state, action.delay)) {\r\n                break;\r\n            }\r\n        } while (++index < count && (action = actions.shift()));\r\n        this.active = false;\r\n        if (error) {\r\n            while (++index < count && (action = actions.shift())) {\r\n                action.unsubscribe();\r\n            }\r\n            throw error;\r\n        }\r\n    };\r\n    return AsapScheduler;\r\n}(AsyncScheduler_1.AsyncScheduler));\r\nexports.AsapScheduler = AsapScheduler;\r\n//# sourceMappingURL=AsapScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/AsapScheduler.js\n// module id = 936\n// module chunks = 4","\"use strict\";\r\nvar AnimationFrameAction_1 = require('./AnimationFrameAction');\r\nvar AnimationFrameScheduler_1 = require('./AnimationFrameScheduler');\r\n/**\r\n *\r\n * Animation Frame Scheduler\r\n *\r\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\r\n *\r\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\r\n * behaviour.\r\n *\r\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\r\n * It makes sure scheduled task will happen just before next browser content repaint,\r\n * thus performing animations as efficiently as possible.\r\n *\r\n * @example <caption>Schedule div height animation</caption>\r\n * const div = document.querySelector('.some-div');\r\n *\r\n * Rx.Scheduler.schedule(function(height) {\r\n *   div.style.height = height + \"px\";\r\n *\r\n *   this.schedule(height + 1);  // `this` references currently executing Action,\r\n *                               // which we reschedule with new state\r\n * }, 0, 0);\r\n *\r\n * // You will see .some-div element growing in height\r\n *\r\n *\r\n * @static true\r\n * @name animationFrame\r\n * @owner Scheduler\r\n */\r\nexports.animationFrame = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);\r\n//# sourceMappingURL=animationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/scheduler/animationFrame.js\n// module id = 937\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar Subscription_1 = require('../Subscription');\r\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\r\nvar applyMixins_1 = require('../util/applyMixins');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ColdObservable = (function (_super) {\r\n    __extends(ColdObservable, _super);\r\n    function ColdObservable(messages, scheduler) {\r\n        _super.call(this, function (subscriber) {\r\n            var observable = this;\r\n            var index = observable.logSubscribedFrame();\r\n            subscriber.add(new Subscription_1.Subscription(function () {\r\n                observable.logUnsubscribedFrame(index);\r\n            }));\r\n            observable.scheduleMessages(subscriber);\r\n            return subscriber;\r\n        });\r\n        this.messages = messages;\r\n        this.subscriptions = [];\r\n        this.scheduler = scheduler;\r\n    }\r\n    ColdObservable.prototype.scheduleMessages = function (subscriber) {\r\n        var messagesLength = this.messages.length;\r\n        for (var i = 0; i < messagesLength; i++) {\r\n            var message = this.messages[i];\r\n            subscriber.add(this.scheduler.schedule(function (_a) {\r\n                var message = _a.message, subscriber = _a.subscriber;\r\n                message.notification.observe(subscriber);\r\n            }, message.frame, { message: message, subscriber: subscriber }));\r\n        }\r\n    };\r\n    return ColdObservable;\r\n}(Observable_1.Observable));\r\nexports.ColdObservable = ColdObservable;\r\napplyMixins_1.applyMixins(ColdObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\r\n//# sourceMappingURL=ColdObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/ColdObservable.js\n// module id = 938\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subject_1 = require('../Subject');\r\nvar Subscription_1 = require('../Subscription');\r\nvar SubscriptionLoggable_1 = require('./SubscriptionLoggable');\r\nvar applyMixins_1 = require('../util/applyMixins');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar HotObservable = (function (_super) {\r\n    __extends(HotObservable, _super);\r\n    function HotObservable(messages, scheduler) {\r\n        _super.call(this);\r\n        this.messages = messages;\r\n        this.subscriptions = [];\r\n        this.scheduler = scheduler;\r\n    }\r\n    HotObservable.prototype._subscribe = function (subscriber) {\r\n        var subject = this;\r\n        var index = subject.logSubscribedFrame();\r\n        subscriber.add(new Subscription_1.Subscription(function () {\r\n            subject.logUnsubscribedFrame(index);\r\n        }));\r\n        return _super.prototype._subscribe.call(this, subscriber);\r\n    };\r\n    HotObservable.prototype.setup = function () {\r\n        var subject = this;\r\n        var messagesLength = subject.messages.length;\r\n        /* tslint:disable:no-var-keyword */\r\n        for (var i = 0; i < messagesLength; i++) {\r\n            (function () {\r\n                var message = subject.messages[i];\r\n                /* tslint:enable */\r\n                subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);\r\n            })();\r\n        }\r\n    };\r\n    return HotObservable;\r\n}(Subject_1.Subject));\r\nexports.HotObservable = HotObservable;\r\napplyMixins_1.applyMixins(HotObservable, [SubscriptionLoggable_1.SubscriptionLoggable]);\r\n//# sourceMappingURL=HotObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/HotObservable.js\n// module id = 939\n// module chunks = 4","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar Notification_1 = require('../Notification');\r\nvar ColdObservable_1 = require('./ColdObservable');\r\nvar HotObservable_1 = require('./HotObservable');\r\nvar SubscriptionLog_1 = require('./SubscriptionLog');\r\nvar VirtualTimeScheduler_1 = require('../scheduler/VirtualTimeScheduler');\r\nvar defaultMaxFrame = 750;\r\nvar TestScheduler = (function (_super) {\r\n    __extends(TestScheduler, _super);\r\n    function TestScheduler(assertDeepEqual) {\r\n        _super.call(this, VirtualTimeScheduler_1.VirtualAction, defaultMaxFrame);\r\n        this.assertDeepEqual = assertDeepEqual;\r\n        this.hotObservables = [];\r\n        this.coldObservables = [];\r\n        this.flushTests = [];\r\n    }\r\n    TestScheduler.prototype.createTime = function (marbles) {\r\n        var indexOf = marbles.indexOf('|');\r\n        if (indexOf === -1) {\r\n            throw new Error('marble diagram for time should have a completion marker \"|\"');\r\n        }\r\n        return indexOf * TestScheduler.frameTimeFactor;\r\n    };\r\n    TestScheduler.prototype.createColdObservable = function (marbles, values, error) {\r\n        if (marbles.indexOf('^') !== -1) {\r\n            throw new Error('cold observable cannot have subscription offset \"^\"');\r\n        }\r\n        if (marbles.indexOf('!') !== -1) {\r\n            throw new Error('cold observable cannot have unsubscription marker \"!\"');\r\n        }\r\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\r\n        var cold = new ColdObservable_1.ColdObservable(messages, this);\r\n        this.coldObservables.push(cold);\r\n        return cold;\r\n    };\r\n    TestScheduler.prototype.createHotObservable = function (marbles, values, error) {\r\n        if (marbles.indexOf('!') !== -1) {\r\n            throw new Error('hot observable cannot have unsubscription marker \"!\"');\r\n        }\r\n        var messages = TestScheduler.parseMarbles(marbles, values, error);\r\n        var subject = new HotObservable_1.HotObservable(messages, this);\r\n        this.hotObservables.push(subject);\r\n        return subject;\r\n    };\r\n    TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {\r\n        var _this = this;\r\n        var messages = [];\r\n        observable.subscribe(function (value) {\r\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createNext(value) });\r\n        }, function (err) {\r\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createError(err) });\r\n        }, function () {\r\n            messages.push({ frame: _this.frame - outerFrame, notification: Notification_1.Notification.createComplete() });\r\n        });\r\n        return messages;\r\n    };\r\n    TestScheduler.prototype.expectObservable = function (observable, unsubscriptionMarbles) {\r\n        var _this = this;\r\n        if (unsubscriptionMarbles === void 0) { unsubscriptionMarbles = null; }\r\n        var actual = [];\r\n        var flushTest = { actual: actual, ready: false };\r\n        var unsubscriptionFrame = TestScheduler\r\n            .parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;\r\n        var subscription;\r\n        this.schedule(function () {\r\n            subscription = observable.subscribe(function (x) {\r\n                var value = x;\r\n                // Support Observable-of-Observables\r\n                if (x instanceof Observable_1.Observable) {\r\n                    value = _this.materializeInnerObservable(value, _this.frame);\r\n                }\r\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createNext(value) });\r\n            }, function (err) {\r\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createError(err) });\r\n            }, function () {\r\n                actual.push({ frame: _this.frame, notification: Notification_1.Notification.createComplete() });\r\n            });\r\n        }, 0);\r\n        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\r\n            this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);\r\n        }\r\n        this.flushTests.push(flushTest);\r\n        return {\r\n            toBe: function (marbles, values, errorValue) {\r\n                flushTest.ready = true;\r\n                flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true);\r\n            }\r\n        };\r\n    };\r\n    TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {\r\n        var flushTest = { actual: actualSubscriptionLogs, ready: false };\r\n        this.flushTests.push(flushTest);\r\n        return {\r\n            toBe: function (marbles) {\r\n                var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;\r\n                flushTest.ready = true;\r\n                flushTest.expected = marblesArray.map(function (marbles) {\r\n                    return TestScheduler.parseMarblesAsSubscriptions(marbles);\r\n                });\r\n            }\r\n        };\r\n    };\r\n    TestScheduler.prototype.flush = function () {\r\n        var hotObservables = this.hotObservables;\r\n        while (hotObservables.length > 0) {\r\n            hotObservables.shift().setup();\r\n        }\r\n        _super.prototype.flush.call(this);\r\n        var readyFlushTests = this.flushTests.filter(function (test) { return test.ready; });\r\n        while (readyFlushTests.length > 0) {\r\n            var test = readyFlushTests.shift();\r\n            this.assertDeepEqual(test.actual, test.expected);\r\n        }\r\n    };\r\n    TestScheduler.parseMarblesAsSubscriptions = function (marbles) {\r\n        if (typeof marbles !== 'string') {\r\n            return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);\r\n        }\r\n        var len = marbles.length;\r\n        var groupStart = -1;\r\n        var subscriptionFrame = Number.POSITIVE_INFINITY;\r\n        var unsubscriptionFrame = Number.POSITIVE_INFINITY;\r\n        for (var i = 0; i < len; i++) {\r\n            var frame = i * this.frameTimeFactor;\r\n            var c = marbles[i];\r\n            switch (c) {\r\n                case '-':\r\n                case ' ':\r\n                    break;\r\n                case '(':\r\n                    groupStart = frame;\r\n                    break;\r\n                case ')':\r\n                    groupStart = -1;\r\n                    break;\r\n                case '^':\r\n                    if (subscriptionFrame !== Number.POSITIVE_INFINITY) {\r\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\r\n                            'subscription marble diagram. There can only be one.');\r\n                    }\r\n                    subscriptionFrame = groupStart > -1 ? groupStart : frame;\r\n                    break;\r\n                case '!':\r\n                    if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {\r\n                        throw new Error('found a second subscription point \\'^\\' in a ' +\r\n                            'subscription marble diagram. There can only be one.');\r\n                    }\r\n                    unsubscriptionFrame = groupStart > -1 ? groupStart : frame;\r\n                    break;\r\n                default:\r\n                    throw new Error('there can only be \\'^\\' and \\'!\\' markers in a ' +\r\n                        'subscription marble diagram. Found instead \\'' + c + '\\'.');\r\n            }\r\n        }\r\n        if (unsubscriptionFrame < 0) {\r\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);\r\n        }\r\n        else {\r\n            return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame, unsubscriptionFrame);\r\n        }\r\n    };\r\n    TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables) {\r\n        if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }\r\n        if (marbles.indexOf('!') !== -1) {\r\n            throw new Error('conventional marble diagrams cannot have the ' +\r\n                'unsubscription marker \"!\"');\r\n        }\r\n        var len = marbles.length;\r\n        var testMessages = [];\r\n        var subIndex = marbles.indexOf('^');\r\n        var frameOffset = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);\r\n        var getValue = typeof values !== 'object' ?\r\n            function (x) { return x; } :\r\n            function (x) {\r\n                // Support Observable-of-Observables\r\n                if (materializeInnerObservables && values[x] instanceof ColdObservable_1.ColdObservable) {\r\n                    return values[x].messages;\r\n                }\r\n                return values[x];\r\n            };\r\n        var groupStart = -1;\r\n        for (var i = 0; i < len; i++) {\r\n            var frame = i * this.frameTimeFactor + frameOffset;\r\n            var notification = void 0;\r\n            var c = marbles[i];\r\n            switch (c) {\r\n                case '-':\r\n                case ' ':\r\n                    break;\r\n                case '(':\r\n                    groupStart = frame;\r\n                    break;\r\n                case ')':\r\n                    groupStart = -1;\r\n                    break;\r\n                case '|':\r\n                    notification = Notification_1.Notification.createComplete();\r\n                    break;\r\n                case '^':\r\n                    break;\r\n                case '#':\r\n                    notification = Notification_1.Notification.createError(errorValue || 'error');\r\n                    break;\r\n                default:\r\n                    notification = Notification_1.Notification.createNext(getValue(c));\r\n                    break;\r\n            }\r\n            if (notification) {\r\n                testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });\r\n            }\r\n        }\r\n        return testMessages;\r\n    };\r\n    return TestScheduler;\r\n}(VirtualTimeScheduler_1.VirtualTimeScheduler));\r\nexports.TestScheduler = TestScheduler;\r\n//# sourceMappingURL=TestScheduler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/testing/TestScheduler.js\n// module id = 940\n// module chunks = 4","\"use strict\";\r\nvar root_1 = require('./root');\r\nvar RequestAnimationFrameDefinition = (function () {\r\n    function RequestAnimationFrameDefinition(root) {\r\n        if (root.requestAnimationFrame) {\r\n            this.cancelAnimationFrame = root.cancelAnimationFrame.bind(root);\r\n            this.requestAnimationFrame = root.requestAnimationFrame.bind(root);\r\n        }\r\n        else if (root.mozRequestAnimationFrame) {\r\n            this.cancelAnimationFrame = root.mozCancelAnimationFrame.bind(root);\r\n            this.requestAnimationFrame = root.mozRequestAnimationFrame.bind(root);\r\n        }\r\n        else if (root.webkitRequestAnimationFrame) {\r\n            this.cancelAnimationFrame = root.webkitCancelAnimationFrame.bind(root);\r\n            this.requestAnimationFrame = root.webkitRequestAnimationFrame.bind(root);\r\n        }\r\n        else if (root.msRequestAnimationFrame) {\r\n            this.cancelAnimationFrame = root.msCancelAnimationFrame.bind(root);\r\n            this.requestAnimationFrame = root.msRequestAnimationFrame.bind(root);\r\n        }\r\n        else if (root.oRequestAnimationFrame) {\r\n            this.cancelAnimationFrame = root.oCancelAnimationFrame.bind(root);\r\n            this.requestAnimationFrame = root.oRequestAnimationFrame.bind(root);\r\n        }\r\n        else {\r\n            this.cancelAnimationFrame = root.clearTimeout.bind(root);\r\n            this.requestAnimationFrame = function (cb) { return root.setTimeout(cb, 1000 / 60); };\r\n        }\r\n    }\r\n    return RequestAnimationFrameDefinition;\r\n}());\r\nexports.RequestAnimationFrameDefinition = RequestAnimationFrameDefinition;\r\nexports.AnimationFrame = new RequestAnimationFrameDefinition(root_1.root);\r\n//# sourceMappingURL=AnimationFrame.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/AnimationFrame.js\n// module id = 941\n// module chunks = 4","\"use strict\";\r\nvar FastMap = (function () {\r\n    function FastMap() {\r\n        this.values = {};\r\n    }\r\n    FastMap.prototype.delete = function (key) {\r\n        this.values[key] = null;\r\n        return true;\r\n    };\r\n    FastMap.prototype.set = function (key, value) {\r\n        this.values[key] = value;\r\n        return this;\r\n    };\r\n    FastMap.prototype.get = function (key) {\r\n        return this.values[key];\r\n    };\r\n    FastMap.prototype.forEach = function (cb, thisArg) {\r\n        var values = this.values;\r\n        for (var key in values) {\r\n            if (values.hasOwnProperty(key) && values[key] !== null) {\r\n                cb.call(thisArg, values[key], key);\r\n            }\r\n        }\r\n    };\r\n    FastMap.prototype.clear = function () {\r\n        this.values = {};\r\n    };\r\n    return FastMap;\r\n}());\r\nexports.FastMap = FastMap;\r\n//# sourceMappingURL=FastMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/FastMap.js\n// module id = 942\n// module chunks = 4","/**\r\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\r\n*/\r\n\"use strict\";\r\nvar root_1 = require('./root');\r\nvar ImmediateDefinition = (function () {\r\n    function ImmediateDefinition(root) {\r\n        this.root = root;\r\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\r\n            this.setImmediate = root.setImmediate.bind(root);\r\n            this.clearImmediate = root.clearImmediate.bind(root);\r\n        }\r\n        else {\r\n            this.nextHandle = 1;\r\n            this.tasksByHandle = {};\r\n            this.currentlyRunningATask = false;\r\n            // Don't get fooled by e.g. browserify environments.\r\n            if (this.canUseProcessNextTick()) {\r\n                // For Node.js before 0.9\r\n                this.setImmediate = this.createProcessNextTickSetImmediate();\r\n            }\r\n            else if (this.canUsePostMessage()) {\r\n                // For non-IE10 modern browsers\r\n                this.setImmediate = this.createPostMessageSetImmediate();\r\n            }\r\n            else if (this.canUseMessageChannel()) {\r\n                // For web workers, where supported\r\n                this.setImmediate = this.createMessageChannelSetImmediate();\r\n            }\r\n            else if (this.canUseReadyStateChange()) {\r\n                // For IE 6–8\r\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\r\n            }\r\n            else {\r\n                // For older browsers\r\n                this.setImmediate = this.createSetTimeoutSetImmediate();\r\n            }\r\n            var ci = function clearImmediate(handle) {\r\n                delete clearImmediate.instance.tasksByHandle[handle];\r\n            };\r\n            ci.instance = this;\r\n            this.clearImmediate = ci;\r\n        }\r\n    }\r\n    ImmediateDefinition.prototype.identify = function (o) {\r\n        return this.root.Object.prototype.toString.call(o);\r\n    };\r\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\r\n        return this.identify(this.root.process) === '[object process]';\r\n    };\r\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\r\n        return Boolean(this.root.MessageChannel);\r\n    };\r\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\r\n        var document = this.root.document;\r\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\r\n    };\r\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\r\n        var root = this.root;\r\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\r\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\r\n        if (root.postMessage && !root.importScripts) {\r\n            var postMessageIsAsynchronous_1 = true;\r\n            var oldOnMessage = root.onmessage;\r\n            root.onmessage = function () {\r\n                postMessageIsAsynchronous_1 = false;\r\n            };\r\n            root.postMessage('', '*');\r\n            root.onmessage = oldOnMessage;\r\n            return postMessageIsAsynchronous_1;\r\n        }\r\n        return false;\r\n    };\r\n    // This function accepts the same arguments as setImmediate, but\r\n    // returns a function that requires no arguments.\r\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var fn = function result() {\r\n            var _a = result, handler = _a.handler, args = _a.args;\r\n            if (typeof handler === 'function') {\r\n                handler.apply(undefined, args);\r\n            }\r\n            else {\r\n                (new Function('' + handler))();\r\n            }\r\n        };\r\n        fn.handler = handler;\r\n        fn.args = args;\r\n        return fn;\r\n    };\r\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\r\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\r\n        return this.nextHandle++;\r\n    };\r\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\r\n        var fn = function setImmediate() {\r\n            var instance = setImmediate.instance;\r\n            var handle = instance.addFromSetImmediateArguments(arguments);\r\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\r\n            return handle;\r\n        };\r\n        fn.instance = this;\r\n        return fn;\r\n    };\r\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\r\n        // Installs an event handler on `global` for the `message` event: see\r\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\r\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\r\n        var root = this.root;\r\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\r\n        var onGlobalMessage = function globalMessageHandler(event) {\r\n            var instance = globalMessageHandler.instance;\r\n            if (event.source === root &&\r\n                typeof event.data === 'string' &&\r\n                event.data.indexOf(messagePrefix) === 0) {\r\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\r\n            }\r\n        };\r\n        onGlobalMessage.instance = this;\r\n        root.addEventListener('message', onGlobalMessage, false);\r\n        var fn = function setImmediate() {\r\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\r\n            var handle = instance.addFromSetImmediateArguments(arguments);\r\n            instance.root.postMessage(messagePrefix + handle, '*');\r\n            return handle;\r\n        };\r\n        fn.instance = this;\r\n        fn.messagePrefix = messagePrefix;\r\n        return fn;\r\n    };\r\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\r\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\r\n        // So if we're currently running a task, we'll need to delay this invocation.\r\n        if (this.currentlyRunningATask) {\r\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\r\n            // 'too much recursion' error.\r\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\r\n        }\r\n        else {\r\n            var task = this.tasksByHandle[handle];\r\n            if (task) {\r\n                this.currentlyRunningATask = true;\r\n                try {\r\n                    task();\r\n                }\r\n                finally {\r\n                    this.clearImmediate(handle);\r\n                    this.currentlyRunningATask = false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\r\n        var _this = this;\r\n        var channel = new this.root.MessageChannel();\r\n        channel.port1.onmessage = function (event) {\r\n            var handle = event.data;\r\n            _this.runIfPresent(handle);\r\n        };\r\n        var fn = function setImmediate() {\r\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\r\n            var handle = instance.addFromSetImmediateArguments(arguments);\r\n            channel.port2.postMessage(handle);\r\n            return handle;\r\n        };\r\n        fn.channel = channel;\r\n        fn.instance = this;\r\n        return fn;\r\n    };\r\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\r\n        var fn = function setImmediate() {\r\n            var instance = setImmediate.instance;\r\n            var root = instance.root;\r\n            var doc = root.document;\r\n            var html = doc.documentElement;\r\n            var handle = instance.addFromSetImmediateArguments(arguments);\r\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\r\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\r\n            var script = doc.createElement('script');\r\n            script.onreadystatechange = function () {\r\n                instance.runIfPresent(handle);\r\n                script.onreadystatechange = null;\r\n                html.removeChild(script);\r\n                script = null;\r\n            };\r\n            html.appendChild(script);\r\n            return handle;\r\n        };\r\n        fn.instance = this;\r\n        return fn;\r\n    };\r\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\r\n        var fn = function setImmediate() {\r\n            var instance = setImmediate.instance;\r\n            var handle = instance.addFromSetImmediateArguments(arguments);\r\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\r\n            return handle;\r\n        };\r\n        fn.instance = this;\r\n        return fn;\r\n    };\r\n    return ImmediateDefinition;\r\n}());\r\nexports.ImmediateDefinition = ImmediateDefinition;\r\nexports.Immediate = new ImmediateDefinition(root_1.root);\r\n//# sourceMappingURL=Immediate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Immediate.js\n// module id = 943\n// module chunks = 4","\"use strict\";\r\nvar root_1 = require('./root');\r\nvar MapPolyfill_1 = require('./MapPolyfill');\r\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\r\n//# sourceMappingURL=Map.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Map.js\n// module id = 944\n// module chunks = 4","\"use strict\";\r\nvar MapPolyfill = (function () {\r\n    function MapPolyfill() {\r\n        this.size = 0;\r\n        this._values = [];\r\n        this._keys = [];\r\n    }\r\n    MapPolyfill.prototype.get = function (key) {\r\n        var i = this._keys.indexOf(key);\r\n        return i === -1 ? undefined : this._values[i];\r\n    };\r\n    MapPolyfill.prototype.set = function (key, value) {\r\n        var i = this._keys.indexOf(key);\r\n        if (i === -1) {\r\n            this._keys.push(key);\r\n            this._values.push(value);\r\n            this.size++;\r\n        }\r\n        else {\r\n            this._values[i] = value;\r\n        }\r\n        return this;\r\n    };\r\n    MapPolyfill.prototype.delete = function (key) {\r\n        var i = this._keys.indexOf(key);\r\n        if (i === -1) {\r\n            return false;\r\n        }\r\n        this._values.splice(i, 1);\r\n        this._keys.splice(i, 1);\r\n        this.size--;\r\n        return true;\r\n    };\r\n    MapPolyfill.prototype.clear = function () {\r\n        this._keys.length = 0;\r\n        this._values.length = 0;\r\n        this.size = 0;\r\n    };\r\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\r\n        for (var i = 0; i < this.size; i++) {\r\n            cb.call(thisArg, this._values[i], this._keys[i]);\r\n        }\r\n    };\r\n    return MapPolyfill;\r\n}());\r\nexports.MapPolyfill = MapPolyfill;\r\n//# sourceMappingURL=MapPolyfill.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/MapPolyfill.js\n// module id = 945\n// module chunks = 4","\"use strict\";\r\nvar root_1 = require('./root');\r\nfunction minimalSetImpl() {\r\n    // THIS IS NOT a full impl of Set, this is just the minimum\r\n    // bits of functionality we need for this library.\r\n    return (function () {\r\n        function MinimalSet() {\r\n            this._values = [];\r\n        }\r\n        MinimalSet.prototype.add = function (value) {\r\n            if (!this.has(value)) {\r\n                this._values.push(value);\r\n            }\r\n        };\r\n        MinimalSet.prototype.has = function (value) {\r\n            return this._values.indexOf(value) !== -1;\r\n        };\r\n        Object.defineProperty(MinimalSet.prototype, \"size\", {\r\n            get: function () {\r\n                return this._values.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        MinimalSet.prototype.clear = function () {\r\n            this._values.length = 0;\r\n        };\r\n        return MinimalSet;\r\n    }());\r\n}\r\nexports.minimalSetImpl = minimalSetImpl;\r\nexports.Set = root_1.root.Set || minimalSetImpl();\r\n//# sourceMappingURL=Set.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/Set.js\n// module id = 946\n// module chunks = 4","\"use strict\";\r\nvar root_1 = require('./root');\r\nfunction assignImpl(target) {\r\n    var sources = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        sources[_i - 1] = arguments[_i];\r\n    }\r\n    var len = sources.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var source = sources[i];\r\n        for (var k in source) {\r\n            if (source.hasOwnProperty(k)) {\r\n                target[k] = source[k];\r\n            }\r\n        }\r\n    }\r\n    return target;\r\n}\r\nexports.assignImpl = assignImpl;\r\n;\r\nfunction getAssign(root) {\r\n    return root.Object.assign || assignImpl;\r\n}\r\nexports.getAssign = getAssign;\r\nexports.assign = getAssign(root_1.root);\r\n//# sourceMappingURL=assign.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/assign.js\n// module id = 947\n// module chunks = 4","\"use strict\";\r\nfunction not(pred, thisArg) {\r\n    function notPred() {\r\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\r\n    }\r\n    notPred.pred = pred;\r\n    notPred.thisArg = thisArg;\r\n    return notPred;\r\n}\r\nexports.not = not;\r\n//# sourceMappingURL=not.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/util/not.js\n// module id = 948\n// module chunks = 4"],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AAAA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AADA;AAEA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvtRA;AAAA;AAAA;AAWA;AATA;AAWA;AACA;AAAA;AAAA;AAFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAFA;AATA;AACA;AACA;AACA;AAKA;AACA;AAAA;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnCA;AADA;AAEA;AADA;AAAA;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjlpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AALA;AAMA;AAAA;AAJA;AAAA;AAAA;AAGA;AAVA;AADA;AAEA;AACA;AACA;AAHA;AAAA;;;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AACA;AAaA;AAAA;AAkBA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjBA;AAAA;AAAA;AAAA;AADA;AAXA;AACA;AACA;AAQA;AACA;AAAA;;;;;;;;;;;ACdA;AAAA;AAAA;AASA;AAAA;AAMA;AAHA;AAEA;AACA;AAAA;AAJA;AADA;;AACA;AAFA;AANA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;ACTA;AAAA;AAAA;AAQA;AALA;AASA;AAwBA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1BA;AADA;;AACA;AAEA;AADA;;AACA;AAJA;AALA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAIA;AAQA;AAWA;AAAA;AANA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA/BA;AADA;;AACA;AAEA;AADA;;AACA;AAJA;AAJA;AACA;AACA;AACA;AAYA;AAXA;AAAA;;;;;;;;ACdA;AAAA;AAAA;AAWA;AAAA;AAaA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAXA;AADA;;AACA;AAFA;AANA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AATA;AAWA;AAAA;AATA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAEA;AAdA;AADA;AAEA;AACA;AACA;AAHA;AAAA;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AAYA;AAQA;AAAA;AACA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AApEA;AALA;AACA;AACA;AACA;AAUA;AACA;AATA;AAAA;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAoBA;AAAA;AAEA;AAAA;AAAA;AADA;AADA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvDA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjhHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvplvzPA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvtvzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrhnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxztJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrhpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvntEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvlhKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACljhNA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}